syntax = "proto3";

package proto.chatPolicySetting;

option go_package = "github.com/tel4vn/pitel-microservices/gen/proto/pb;pb";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "buf/validate/validate.proto";

message ChatPolicySetting {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string tenant_id = 4;
  string connection_type = 5;
  string created_by = 6;
  string updated_by = 7;
  int32 chat_window_time = 8;
}

// get chat policy settings
message GetChatPolicySettingsRequest {
  int32 limit = 1;
  int32 offset = 2;
  string connection_type = 3;
}

message GetChatPolicySettingsResponse {
  string code = 1;
  string message = 2;
  repeated ChatPolicySetting data = 3;
  int32 total = 4;
  int32 limit = 5;
  int32 offset = 6;
}

// get policy setting by id
message GetChatPolicySettingByIdRequest { string id = 1; }

message GetChatPolicySettingByIdResponse {
  string code = 1;
  string message = 2;
  ChatPolicySetting data = 3;
}

// create policy setting
message PostChatPolicySettingRequest {
  string connection_type = 1;
  int32 chat_window_time = 2;
}

message PostChatPolicySettingResponse {
  string code = 1;
  string message = 2;
  string id = 3;
}

// update policy setting by id
message PutChatPolicySettingRequest {
  string id = 1;
  string connection_type = 2;
  int32 chat_window_time = 3;
}

message PutChatPolicySettingResponse {
  string code = 1;
  string message = 2;
}

// delete policy setting by id
message DeleteChatPolicySettingRequest { string id = 1; }

message DeleteChatPolicySettingResponse {
  string code = 1;
  string message = 2;
}

service ChatPolicySettingService {
  rpc GetChatPolicySettings(GetChatPolicySettingsRequest) returns (GetChatPolicySettingsResponse) {
    option (google.api.http) = {
      get : "/bss-chat/v1/chat-policy-setting"
    };
  };

  rpc GetChatPolicySettingById(GetChatPolicySettingByIdRequest) returns (GetChatPolicySettingByIdResponse) {
    option (google.api.http) = {
      get : "/bss-chat/v1/chat-policy-setting/{id}"
    };
  };

  rpc InsertChatPolicySetting(PostChatPolicySettingRequest) returns (PostChatPolicySettingResponse) {
    option (google.api.http) = {
      post : "/bss-chat/v1/chat-policy-setting"
      body : "*"
    };
  };

  rpc UpdateChatPolicySettingById(PutChatPolicySettingRequest) returns (PutChatPolicySettingResponse) {
    option (google.api.http) = {
      put : "/bss-chat/v1/chat-policy-setting/{id}"
      body : "*"
    };
  };

  rpc DeleteChatPolicySettingById(DeleteChatPolicySettingRequest) returns (DeleteChatPolicySettingResponse) {
    option (google.api.http) = {
      delete : "/bss-chat/v1/chat-policy-setting/{id}"
    };
  };
}