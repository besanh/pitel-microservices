syntax = "proto3";

package proto.notesList;

option go_package = "github.com/tel4vn/pitel-microservices/gen/proto/pb;pb";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "buf/validate/validate.proto";

message NotesList {
  string id = 1;
  string content = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
  string tenant_id = 5;
  string conversation_id = 6;
  string app_id = 7;
  string oa_id = 8;
}

// create note
message PostNoteInConversationRequest {
  string content = 1;
  string conversation_id = 2;
  string app_id = 3;
  string oa_id = 4;
}

message PostNoteInConversationResponse {
  string code = 1;
  string message = 2;
  string id = 3;
}

// update note by id
message PutNoteInConversationRequest {
  string note_id = 1;
  string content = 2;
  string conversation_id = 3;
  string app_id = 4;
  string oa_id = 5;
}

message PutNoteInConversationResponse {
  string code = 1;
  string message = 2;
}

// delete note by id
message DeleteNoteInConversationRequest {
  string note_id = 1;
  string conversation_id = 2;
  string app_id = 3;
  string oa_id = 4;
}

message DeleteNoteInConversationResponse {
  string code = 1;
  string message = 2;
}

// get notes list
message GetConversationNotesListRequest {
  int32 limit = 1;
  int32 offset = 2;
  string conversation_id = 3;
  string app_id = 4;
  string oa_id = 5;
}

message GetConversationNotesListResponse {
  string code = 1;
  string message = 2;
  repeated NotesList data = 3;
  int32 total = 4;
  int32 limit = 5;
  int32 offset = 6;
}

service NotesListService {
  // notes list
  rpc InsertNoteInConversation(PostNoteInConversationRequest) returns (PostNoteInConversationResponse) {
    option (google.api.http) = {
      post : "/bss-chat/v1/notes-list"
      body : "*"
    };
  };

  rpc UpdateNoteInConversationById(PutNoteInConversationRequest) returns (PutNoteInConversationResponse) {
    option (google.api.http) = {
      put : "/bss-chat/v1/notes-list/{note_id}"
      body : "*"
    };
  };

  rpc DeleteNoteInConversationById(DeleteNoteInConversationRequest) returns (DeleteNoteInConversationResponse) {
    option (google.api.http) = {
      delete : "/bss-chat/v1/notes-list/{note_id}"
    };
  };

  rpc GetConversationNotesList(GetConversationNotesListRequest) returns (GetConversationNotesListResponse) {
    option (google.api.http) = {
      get : "/bss-chat/v1/notes-list"
    };
  };
}