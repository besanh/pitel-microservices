// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/chat_auto_script/chat_auto_script.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatAutoScriptData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt          *timestamppb.Timestamp    `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId           string                    `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ScriptName         string                    `protobuf:"bytes,5,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Status             string                    `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	ConnectionId       string                    `protobuf:"bytes,7,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ConnectionApp      *ChatConnectionAppData    `protobuf:"bytes,8,opt,name=connection_app,json=connectionApp,proto3" json:"connection_app,omitempty"`
	Channel            string                    `protobuf:"bytes,9,opt,name=channel,proto3" json:"channel,omitempty"`
	CreatedBy          string                    `protobuf:"bytes,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy          string                    `protobuf:"bytes,12,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	TriggerEvent       string                    `protobuf:"bytes,13,opt,name=trigger_event,json=triggerEvent,proto3" json:"trigger_event,omitempty"`
	TriggerKeywords    *TriggerKeywordsDataType  `protobuf:"bytes,14,opt,name=trigger_keywords,json=triggerKeywords,proto3" json:"trigger_keywords,omitempty"`
	ChatScriptLink     []*ChatScriptLinkDataType `protobuf:"bytes,15,rep,name=chat_script_link,json=chatScriptLink,proto3" json:"chat_script_link,omitempty"`
	SendMessageActions *SendMessageDataType      `protobuf:"bytes,16,opt,name=send_message_actions,json=sendMessageActions,proto3" json:"send_message_actions,omitempty"`
	ChatLabelLink      []*ChatLabelLinkDataType  `protobuf:"bytes,17,rep,name=chat_label_link,json=chatLabelLink,proto3" json:"chat_label_link,omitempty"`
	ActionScript       *AutoScriptMergedActions  `protobuf:"bytes,18,opt,name=action_script,json=actionScript,proto3" json:"action_script,omitempty"`
}

func (x *ChatAutoScriptData) Reset() {
	*x = ChatAutoScriptData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatAutoScriptData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatAutoScriptData) ProtoMessage() {}

func (x *ChatAutoScriptData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatAutoScriptData.ProtoReflect.Descriptor instead.
func (*ChatAutoScriptData) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{0}
}

func (x *ChatAutoScriptData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatAutoScriptData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatAutoScriptData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatAutoScriptData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatAutoScriptData) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *ChatAutoScriptData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatAutoScriptData) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ChatAutoScriptData) GetConnectionApp() *ChatConnectionAppData {
	if x != nil {
		return x.ConnectionApp
	}
	return nil
}

func (x *ChatAutoScriptData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChatAutoScriptData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ChatAutoScriptData) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *ChatAutoScriptData) GetTriggerEvent() string {
	if x != nil {
		return x.TriggerEvent
	}
	return ""
}

func (x *ChatAutoScriptData) GetTriggerKeywords() *TriggerKeywordsDataType {
	if x != nil {
		return x.TriggerKeywords
	}
	return nil
}

func (x *ChatAutoScriptData) GetChatScriptLink() []*ChatScriptLinkDataType {
	if x != nil {
		return x.ChatScriptLink
	}
	return nil
}

func (x *ChatAutoScriptData) GetSendMessageActions() *SendMessageDataType {
	if x != nil {
		return x.SendMessageActions
	}
	return nil
}

func (x *ChatAutoScriptData) GetChatLabelLink() []*ChatLabelLinkDataType {
	if x != nil {
		return x.ChatLabelLink
	}
	return nil
}

func (x *ChatAutoScriptData) GetActionScript() *AutoScriptMergedActions {
	if x != nil {
		return x.ActionScript
	}
	return nil
}

type AutoScriptMergedActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*ActionScriptActionType `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *AutoScriptMergedActions) Reset() {
	*x = AutoScriptMergedActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScriptMergedActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScriptMergedActions) ProtoMessage() {}

func (x *AutoScriptMergedActions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScriptMergedActions.ProtoReflect.Descriptor instead.
func (*AutoScriptMergedActions) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{1}
}

func (x *AutoScriptMergedActions) GetActions() []*ActionScriptActionType {
	if x != nil {
		return x.Actions
	}
	return nil
}

type ActionScriptActionType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ChatScriptId string   `protobuf:"bytes,2,opt,name=chat_script_id,json=chatScriptId,proto3" json:"chat_script_id,omitempty"`
	Content      string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Order        int32    `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	AddLabels    []string `protobuf:"bytes,5,rep,name=add_labels,json=addLabels,proto3" json:"add_labels,omitempty"`
	RemoveLabels []string `protobuf:"bytes,6,rep,name=remove_labels,json=removeLabels,proto3" json:"remove_labels,omitempty"`
}

func (x *ActionScriptActionType) Reset() {
	*x = ActionScriptActionType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionScriptActionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionScriptActionType) ProtoMessage() {}

func (x *ActionScriptActionType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionScriptActionType.ProtoReflect.Descriptor instead.
func (*ActionScriptActionType) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{2}
}

func (x *ActionScriptActionType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ActionScriptActionType) GetChatScriptId() string {
	if x != nil {
		return x.ChatScriptId
	}
	return ""
}

func (x *ActionScriptActionType) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ActionScriptActionType) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ActionScriptActionType) GetAddLabels() []string {
	if x != nil {
		return x.AddLabels
	}
	return nil
}

func (x *ActionScriptActionType) GetRemoveLabels() []string {
	if x != nil {
		return x.RemoveLabels
	}
	return nil
}

type ChatLabelData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ChatLabelData) Reset() {
	*x = ChatLabelData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatLabelData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatLabelData) ProtoMessage() {}

func (x *ChatLabelData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatLabelData.ProtoReflect.Descriptor instead.
func (*ChatLabelData) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{3}
}

func (x *ChatLabelData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatLabelData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatLabelData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ChatLabelLinkDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatAutoScriptId string                 `protobuf:"bytes,1,opt,name=chat_auto_script_id,json=chatAutoScriptId,proto3" json:"chat_auto_script_id,omitempty"`
	ChatLabelId      string                 `protobuf:"bytes,2,opt,name=chat_label_id,json=chatLabelId,proto3" json:"chat_label_id,omitempty"`
	ActionType       string                 `protobuf:"bytes,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`
	Order            int32                  `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
	ChatAutoScript   *ChatAutoScriptData    `protobuf:"bytes,5,opt,name=chat_auto_script,json=chatAutoScript,proto3" json:"chat_auto_script,omitempty"`
	ChatLabel        *ChatLabelData         `protobuf:"bytes,6,opt,name=chat_label,json=chatLabel,proto3" json:"chat_label,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ChatLabelLinkDataType) Reset() {
	*x = ChatLabelLinkDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatLabelLinkDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatLabelLinkDataType) ProtoMessage() {}

func (x *ChatLabelLinkDataType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatLabelLinkDataType.ProtoReflect.Descriptor instead.
func (*ChatLabelLinkDataType) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{4}
}

func (x *ChatLabelLinkDataType) GetChatAutoScriptId() string {
	if x != nil {
		return x.ChatAutoScriptId
	}
	return ""
}

func (x *ChatLabelLinkDataType) GetChatLabelId() string {
	if x != nil {
		return x.ChatLabelId
	}
	return ""
}

func (x *ChatLabelLinkDataType) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

func (x *ChatLabelLinkDataType) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ChatLabelLinkDataType) GetChatAutoScript() *ChatAutoScriptData {
	if x != nil {
		return x.ChatAutoScript
	}
	return nil
}

func (x *ChatLabelLinkDataType) GetChatLabel() *ChatLabelData {
	if x != nil {
		return x.ChatLabel
	}
	return nil
}

func (x *ChatLabelLinkDataType) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatLabelLinkDataType) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AutoScriptSendMessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Order   int32  `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *AutoScriptSendMessageType) Reset() {
	*x = AutoScriptSendMessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoScriptSendMessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoScriptSendMessageType) ProtoMessage() {}

func (x *AutoScriptSendMessageType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoScriptSendMessageType.ProtoReflect.Descriptor instead.
func (*AutoScriptSendMessageType) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{5}
}

func (x *AutoScriptSendMessageType) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AutoScriptSendMessageType) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type SendMessageDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*AutoScriptSendMessageType `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *SendMessageDataType) Reset() {
	*x = SendMessageDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageDataType) ProtoMessage() {}

func (x *SendMessageDataType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageDataType.ProtoReflect.Descriptor instead.
func (*SendMessageDataType) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{6}
}

func (x *SendMessageDataType) GetActions() []*AutoScriptSendMessageType {
	if x != nil {
		return x.Actions
	}
	return nil
}

type ChatScriptData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId      string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ScriptName    string                 `protobuf:"bytes,5,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	ScriptType    string                 `protobuf:"bytes,7,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	FileUrl       string                 `protobuf:"bytes,8,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	Channel       string                 `protobuf:"bytes,9,opt,name=channel,proto3" json:"channel,omitempty"`
	Content       string                 `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy     string                 `protobuf:"bytes,12,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	OtherScriptId string                 `protobuf:"bytes,13,opt,name=other_script_id,json=otherScriptId,proto3" json:"other_script_id,omitempty"`
	ConnectionId  string                 `protobuf:"bytes,14,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ConnectionApp *ChatConnectionAppData `protobuf:"bytes,15,opt,name=connection_app,json=connectionApp,proto3" json:"connection_app,omitempty"`
}

func (x *ChatScriptData) Reset() {
	*x = ChatScriptData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatScriptData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatScriptData) ProtoMessage() {}

func (x *ChatScriptData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatScriptData.ProtoReflect.Descriptor instead.
func (*ChatScriptData) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{7}
}

func (x *ChatScriptData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatScriptData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatScriptData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatScriptData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatScriptData) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *ChatScriptData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatScriptData) GetScriptType() string {
	if x != nil {
		return x.ScriptType
	}
	return ""
}

func (x *ChatScriptData) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *ChatScriptData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChatScriptData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatScriptData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ChatScriptData) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *ChatScriptData) GetOtherScriptId() string {
	if x != nil {
		return x.OtherScriptId
	}
	return ""
}

func (x *ChatScriptData) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ChatScriptData) GetConnectionApp() *ChatConnectionAppData {
	if x != nil {
		return x.ConnectionApp
	}
	return nil
}

type ChatScriptLinkDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatAutoScriptId string                 `protobuf:"bytes,1,opt,name=chat_auto_script_id,json=chatAutoScriptId,proto3" json:"chat_auto_script_id,omitempty"`
	ChatScriptId     string                 `protobuf:"bytes,2,opt,name=chat_script_id,json=chatScriptId,proto3" json:"chat_script_id,omitempty"`
	Order            int32                  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	ChatAutoScript   *ChatAutoScriptData    `protobuf:"bytes,4,opt,name=chat_auto_script,json=chatAutoScript,proto3" json:"chat_auto_script,omitempty"`
	ChatScript       *ChatScriptData        `protobuf:"bytes,5,opt,name=chat_script,json=chatScript,proto3" json:"chat_script,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ChatScriptLinkDataType) Reset() {
	*x = ChatScriptLinkDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatScriptLinkDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatScriptLinkDataType) ProtoMessage() {}

func (x *ChatScriptLinkDataType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatScriptLinkDataType.ProtoReflect.Descriptor instead.
func (*ChatScriptLinkDataType) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{8}
}

func (x *ChatScriptLinkDataType) GetChatAutoScriptId() string {
	if x != nil {
		return x.ChatAutoScriptId
	}
	return ""
}

func (x *ChatScriptLinkDataType) GetChatScriptId() string {
	if x != nil {
		return x.ChatScriptId
	}
	return ""
}

func (x *ChatScriptLinkDataType) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ChatScriptLinkDataType) GetChatAutoScript() *ChatAutoScriptData {
	if x != nil {
		return x.ChatAutoScript
	}
	return nil
}

func (x *ChatScriptLinkDataType) GetChatScript() *ChatScriptData {
	if x != nil {
		return x.ChatScript
	}
	return nil
}

func (x *ChatScriptLinkDataType) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatScriptLinkDataType) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TriggerKeywordsDataType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords []string `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
}

func (x *TriggerKeywordsDataType) Reset() {
	*x = TriggerKeywordsDataType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerKeywordsDataType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerKeywordsDataType) ProtoMessage() {}

func (x *TriggerKeywordsDataType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerKeywordsDataType.ProtoReflect.Descriptor instead.
func (*TriggerKeywordsDataType) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{9}
}

func (x *TriggerKeywordsDataType) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

type ChatConnectionAppData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId          string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ConnectionName    string                 `protobuf:"bytes,5,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string                 `protobuf:"bytes,6,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	AppId             string                 `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Status            string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	ConnectionQueueId string                 `protobuf:"bytes,9,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	OaInfo            *OaInfo                `protobuf:"bytes,10,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
}

func (x *ChatConnectionAppData) Reset() {
	*x = ChatConnectionAppData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionAppData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionAppData) ProtoMessage() {}

func (x *ChatConnectionAppData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionAppData.ProtoReflect.Descriptor instead.
func (*ChatConnectionAppData) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{10}
}

func (x *ChatConnectionAppData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatConnectionAppData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatConnectionAppData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatConnectionAppData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatConnectionAppData) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *ChatConnectionAppData) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *ChatConnectionAppData) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ChatConnectionAppData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatConnectionAppData) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *ChatConnectionAppData) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

type ZaloInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId              string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId               string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName             string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa              string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Avatar             string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Cover              string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	CateName           string `protobuf:"bytes,7,opt,name=cate_name,json=cateName,proto3" json:"cate_name,omitempty"`
	Status             string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	AccessToken        string `protobuf:"bytes,9,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Expire             int64  `protobuf:"varint,10,opt,name=expire,proto3" json:"expire,omitempty"`
	TokenCreatedAt     string `protobuf:"bytes,11,opt,name=token_created_at,json=tokenCreatedAt,proto3" json:"token_created_at,omitempty"`
	TokenExpiresIn     int64  `protobuf:"varint,12,opt,name=token_expires_in,json=tokenExpiresIn,proto3" json:"token_expires_in,omitempty"`
	TokenTimeRemaining int64  `protobuf:"varint,13,opt,name=token_time_remaining,json=tokenTimeRemaining,proto3" json:"token_time_remaining,omitempty"`
	CreatedTimestamp   int64  `protobuf:"varint,14,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	UpdatedTimestamp   int64  `protobuf:"varint,15,opt,name=updated_timestamp,json=updatedTimestamp,proto3" json:"updated_timestamp,omitempty"`
	IsNotify           bool   `protobuf:"varint,16,opt,name=is_notify,json=isNotify,proto3" json:"is_notify,omitempty"`
}

func (x *ZaloInfo) Reset() {
	*x = ZaloInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZaloInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZaloInfo) ProtoMessage() {}

func (x *ZaloInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZaloInfo.ProtoReflect.Descriptor instead.
func (*ZaloInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{11}
}

func (x *ZaloInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ZaloInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ZaloInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *ZaloInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *ZaloInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ZaloInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ZaloInfo) GetCateName() string {
	if x != nil {
		return x.CateName
	}
	return ""
}

func (x *ZaloInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ZaloInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ZaloInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *ZaloInfo) GetTokenCreatedAt() string {
	if x != nil {
		return x.TokenCreatedAt
	}
	return ""
}

func (x *ZaloInfo) GetTokenExpiresIn() int64 {
	if x != nil {
		return x.TokenExpiresIn
	}
	return 0
}

func (x *ZaloInfo) GetTokenTimeRemaining() int64 {
	if x != nil {
		return x.TokenTimeRemaining
	}
	return 0
}

func (x *ZaloInfo) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *ZaloInfo) GetUpdatedTimestamp() int64 {
	if x != nil {
		return x.UpdatedTimestamp
	}
	return 0
}

func (x *ZaloInfo) GetIsNotify() bool {
	if x != nil {
		return x.IsNotify
	}
	return false
}

type FacebookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId              string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId               string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName             string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa              string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Avatar             string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Cover              string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	AccessToken        string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Expire             int64  `protobuf:"varint,8,opt,name=expire,proto3" json:"expire,omitempty"`
	TokenCreatedAt     string `protobuf:"bytes,9,opt,name=token_created_at,json=tokenCreatedAt,proto3" json:"token_created_at,omitempty"`
	TokenExpiresIn     int64  `protobuf:"varint,10,opt,name=token_expires_in,json=tokenExpiresIn,proto3" json:"token_expires_in,omitempty"`
	TokenTimeRemaining int64  `protobuf:"varint,11,opt,name=token_time_remaining,json=tokenTimeRemaining,proto3" json:"token_time_remaining,omitempty"`
	Status             string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	CreatedTimestamp   int64  `protobuf:"varint,13,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	UpdatedTimestamp   int64  `protobuf:"varint,14,opt,name=updated_timestamp,json=updatedTimestamp,proto3" json:"updated_timestamp,omitempty"`
	IsNotify           bool   `protobuf:"varint,15,opt,name=is_notify,json=isNotify,proto3" json:"is_notify,omitempty"`
}

func (x *FacebookInfo) Reset() {
	*x = FacebookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookInfo) ProtoMessage() {}

func (x *FacebookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookInfo.ProtoReflect.Descriptor instead.
func (*FacebookInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{12}
}

func (x *FacebookInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FacebookInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *FacebookInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *FacebookInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *FacebookInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FacebookInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FacebookInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *FacebookInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *FacebookInfo) GetTokenCreatedAt() string {
	if x != nil {
		return x.TokenCreatedAt
	}
	return ""
}

func (x *FacebookInfo) GetTokenExpiresIn() int64 {
	if x != nil {
		return x.TokenExpiresIn
	}
	return 0
}

func (x *FacebookInfo) GetTokenTimeRemaining() int64 {
	if x != nil {
		return x.TokenTimeRemaining
	}
	return 0
}

func (x *FacebookInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FacebookInfo) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *FacebookInfo) GetUpdatedTimestamp() int64 {
	if x != nil {
		return x.UpdatedTimestamp
	}
	return 0
}

func (x *FacebookInfo) GetIsNotify() bool {
	if x != nil {
		return x.IsNotify
	}
	return false
}

type OaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zalo     []*ZaloInfo     `protobuf:"bytes,1,rep,name=zalo,proto3" json:"zalo,omitempty"`
	Facebook []*FacebookInfo `protobuf:"bytes,2,rep,name=facebook,proto3" json:"facebook,omitempty"`
}

func (x *OaInfo) Reset() {
	*x = OaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaInfo) ProtoMessage() {}

func (x *OaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaInfo.ProtoReflect.Descriptor instead.
func (*OaInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{13}
}

func (x *OaInfo) GetZalo() []*ZaloInfo {
	if x != nil {
		return x.Zalo
	}
	return nil
}

func (x *OaInfo) GetFacebook() []*FacebookInfo {
	if x != nil {
		return x.Facebook
	}
	return nil
}

// get chat auto scripts
type GetChatAutoScriptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ScriptName   string `protobuf:"bytes,2,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Channel      string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	OaId         string `protobuf:"bytes,4,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	TriggerEvent string `protobuf:"bytes,5,opt,name=trigger_event,json=triggerEvent,proto3" json:"trigger_event,omitempty"`
	Limit        int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset       int32  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatAutoScriptsRequest) Reset() {
	*x = GetChatAutoScriptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatAutoScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatAutoScriptsRequest) ProtoMessage() {}

func (x *GetChatAutoScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatAutoScriptsRequest.ProtoReflect.Descriptor instead.
func (*GetChatAutoScriptsRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{14}
}

func (x *GetChatAutoScriptsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetChatAutoScriptsRequest) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *GetChatAutoScriptsRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GetChatAutoScriptsRequest) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *GetChatAutoScriptsRequest) GetTriggerEvent() string {
	if x != nil {
		return x.TriggerEvent
	}
	return ""
}

func (x *GetChatAutoScriptsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatAutoScriptsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetChatAutoScriptsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string                `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChatAutoScriptData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32                 `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Limit   int32                 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32                 `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatAutoScriptsResponse) Reset() {
	*x = GetChatAutoScriptsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatAutoScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatAutoScriptsResponse) ProtoMessage() {}

func (x *GetChatAutoScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatAutoScriptsResponse.ProtoReflect.Descriptor instead.
func (*GetChatAutoScriptsResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{15}
}

func (x *GetChatAutoScriptsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatAutoScriptsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatAutoScriptsResponse) GetData() []*ChatAutoScriptData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChatAutoScriptsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChatAutoScriptsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatAutoScriptsResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// get auto script by id
type GetAutoScriptByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetAutoScriptByIdRequest) Reset() {
	*x = GetAutoScriptByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoScriptByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoScriptByIdRequest) ProtoMessage() {}

func (x *GetAutoScriptByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoScriptByIdRequest.ProtoReflect.Descriptor instead.
func (*GetAutoScriptByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{16}
}

func (x *GetAutoScriptByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAutoScriptByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string              `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ChatAutoScriptData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetAutoScriptByIdResponse) Reset() {
	*x = GetAutoScriptByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAutoScriptByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAutoScriptByIdResponse) ProtoMessage() {}

func (x *GetAutoScriptByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAutoScriptByIdResponse.ProtoReflect.Descriptor instead.
func (*GetAutoScriptByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{17}
}

func (x *GetAutoScriptByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetAutoScriptByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAutoScriptByIdResponse) GetData() *ChatAutoScriptData {
	if x != nil {
		return x.Data
	}
	return nil
}

// create auto script
type PostChatAutoScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptName      string                   `protobuf:"bytes,1,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Channel         string                   `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	ConnectionId    string                   `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Status          string                   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TriggerEvent    string                   `protobuf:"bytes,5,opt,name=trigger_event,json=triggerEvent,proto3" json:"trigger_event,omitempty"`
	TriggerKeywords *TriggerKeywordsDataType `protobuf:"bytes,6,opt,name=trigger_keywords,json=triggerKeywords,proto3" json:"trigger_keywords,omitempty"`
	ActionScript    *AutoScriptMergedActions `protobuf:"bytes,7,opt,name=action_script,json=actionScript,proto3" json:"action_script,omitempty"`
}

func (x *PostChatAutoScriptRequest) Reset() {
	*x = PostChatAutoScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatAutoScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatAutoScriptRequest) ProtoMessage() {}

func (x *PostChatAutoScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatAutoScriptRequest.ProtoReflect.Descriptor instead.
func (*PostChatAutoScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{18}
}

func (x *PostChatAutoScriptRequest) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *PostChatAutoScriptRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PostChatAutoScriptRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *PostChatAutoScriptRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PostChatAutoScriptRequest) GetTriggerEvent() string {
	if x != nil {
		return x.TriggerEvent
	}
	return ""
}

func (x *PostChatAutoScriptRequest) GetTriggerKeywords() *TriggerKeywordsDataType {
	if x != nil {
		return x.TriggerKeywords
	}
	return nil
}

func (x *PostChatAutoScriptRequest) GetActionScript() *AutoScriptMergedActions {
	if x != nil {
		return x.ActionScript
	}
	return nil
}

type PostChatAutoScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostChatAutoScriptResponse) Reset() {
	*x = PostChatAutoScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatAutoScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatAutoScriptResponse) ProtoMessage() {}

func (x *PostChatAutoScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatAutoScriptResponse.ProtoReflect.Descriptor instead.
func (*PostChatAutoScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{19}
}

func (x *PostChatAutoScriptResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostChatAutoScriptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PostChatAutoScriptResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// update script by id
type PutChatAutoScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ScriptName      string                   `protobuf:"bytes,2,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Status          string                   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ConnectionId    string                   `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Channel         string                   `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	TriggerEvent    string                   `protobuf:"bytes,6,opt,name=trigger_event,json=triggerEvent,proto3" json:"trigger_event,omitempty"`
	TriggerKeywords *TriggerKeywordsDataType `protobuf:"bytes,7,opt,name=trigger_keywords,json=triggerKeywords,proto3" json:"trigger_keywords,omitempty"`
	ActionScript    *AutoScriptMergedActions `protobuf:"bytes,8,opt,name=action_script,json=actionScript,proto3" json:"action_script,omitempty"`
}

func (x *PutChatAutoScriptRequest) Reset() {
	*x = PutChatAutoScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatAutoScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatAutoScriptRequest) ProtoMessage() {}

func (x *PutChatAutoScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatAutoScriptRequest.ProtoReflect.Descriptor instead.
func (*PutChatAutoScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{20}
}

func (x *PutChatAutoScriptRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatAutoScriptRequest) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *PutChatAutoScriptRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PutChatAutoScriptRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *PutChatAutoScriptRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PutChatAutoScriptRequest) GetTriggerEvent() string {
	if x != nil {
		return x.TriggerEvent
	}
	return ""
}

func (x *PutChatAutoScriptRequest) GetTriggerKeywords() *TriggerKeywordsDataType {
	if x != nil {
		return x.TriggerKeywords
	}
	return nil
}

func (x *PutChatAutoScriptRequest) GetActionScript() *AutoScriptMergedActions {
	if x != nil {
		return x.ActionScript
	}
	return nil
}

type PutChatAutoScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatAutoScriptResponse) Reset() {
	*x = PutChatAutoScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatAutoScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatAutoScriptResponse) ProtoMessage() {}

func (x *PutChatAutoScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatAutoScriptResponse.ProtoReflect.Descriptor instead.
func (*PutChatAutoScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{21}
}

func (x *PutChatAutoScriptResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChatAutoScriptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// update script status by id
type PutChatAutoScriptStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PutChatAutoScriptStatusRequest) Reset() {
	*x = PutChatAutoScriptStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatAutoScriptStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatAutoScriptStatusRequest) ProtoMessage() {}

func (x *PutChatAutoScriptStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatAutoScriptStatusRequest.ProtoReflect.Descriptor instead.
func (*PutChatAutoScriptStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{22}
}

func (x *PutChatAutoScriptStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatAutoScriptStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// delete script by id
type DeleteChatAutoScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChatAutoScriptRequest) Reset() {
	*x = DeleteChatAutoScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatAutoScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatAutoScriptRequest) ProtoMessage() {}

func (x *DeleteChatAutoScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatAutoScriptRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatAutoScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteChatAutoScriptRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteChatAutoScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteChatAutoScriptResponse) Reset() {
	*x = DeleteChatAutoScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatAutoScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatAutoScriptResponse) ProtoMessage() {}

func (x *DeleteChatAutoScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatAutoScriptResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatAutoScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteChatAutoScriptResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteChatAutoScriptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_auto_script_chat_auto_script_proto protoreflect.FileDescriptor

var file_proto_chat_auto_script_chat_auto_script_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9e, 0x07, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x10, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x56, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x5b, 0x0a, 0x14, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x52, 0x0a, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x22, 0x61, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4d, 0x65,
	0x72, 0x67, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x5f,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x22, 0x95, 0x01, 0x0a,
	0x0d, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xaf, 0x03, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d,
	0x0a, 0x13, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x68, 0x61,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0d, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x42, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4b, 0x0a, 0x19, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x60, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x49, 0x0a, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbb, 0x04, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x52, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x22, 0x94, 0x03, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d,
	0x0a, 0x13, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x68, 0x61,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x10, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x63,
	0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x45, 0x0a,
	0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x35, 0x0a, 0x17, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0xa2, 0x03, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x6f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x81, 0x04, 0x0a, 0x08, 0x5a, 0x61, 0x6c, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f,
	0x6f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49,
	0x6e, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2b, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0xe8, 0x03, 0x0a, 0x0c, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x49, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x7c, 0x0a, 0x06, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x0a, 0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x5a, 0x61, 0x6c, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x7a,
	0x61, 0x6c, 0x6f, 0x12, 0x3e, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x46, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x22, 0xd6, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xcc, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x2a, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xe6, 0x02, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x10,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x52, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4d,
	0x65, 0x72, 0x67, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x5a, 0x0a, 0x1a, 0x50, 0x6f,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xf5, 0x02, 0x0a, 0x18, 0x50, 0x75, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x58, 0x0a, 0x10, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67,
	0x65, 0x72, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x52, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x49,
	0x0a, 0x19, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x1e, 0x50, 0x75, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x4c, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0xa2, 0x08, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9e, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x73, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x62,
	0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d,
	0x61, 0x75, 0x74, 0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0xa4, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22,
	0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x2d, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0xa3, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x62, 0x73, 0x73, 0x2d,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x61, 0x75, 0x74,
	0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0xaa, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01,
	0x2a, 0x1a, 0x22, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x2d, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xbd, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74,
	0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x01, 0x2a, 0x1a, 0x29, 0x2f, 0x62, 0x73, 0x73,
	0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x61, 0x75,
	0x74, 0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xad, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x41,
	0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x2a, 0x22, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x2d, 0x61, 0x75, 0x74, 0x6f, 0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x66, 0x69, 0x6e, 0x73, 0x2d,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_auto_script_chat_auto_script_proto_rawDescOnce sync.Once
	file_proto_chat_auto_script_chat_auto_script_proto_rawDescData = file_proto_chat_auto_script_chat_auto_script_proto_rawDesc
)

func file_proto_chat_auto_script_chat_auto_script_proto_rawDescGZIP() []byte {
	file_proto_chat_auto_script_chat_auto_script_proto_rawDescOnce.Do(func() {
		file_proto_chat_auto_script_chat_auto_script_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_auto_script_chat_auto_script_proto_rawDescData)
	})
	return file_proto_chat_auto_script_chat_auto_script_proto_rawDescData
}

var file_proto_chat_auto_script_chat_auto_script_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_chat_auto_script_chat_auto_script_proto_goTypes = []any{
	(*ChatAutoScriptData)(nil),             // 0: proto.chatAutoScript.ChatAutoScriptData
	(*AutoScriptMergedActions)(nil),        // 1: proto.chatAutoScript.AutoScriptMergedActions
	(*ActionScriptActionType)(nil),         // 2: proto.chatAutoScript.ActionScriptActionType
	(*ChatLabelData)(nil),                  // 3: proto.chatAutoScript.ChatLabelData
	(*ChatLabelLinkDataType)(nil),          // 4: proto.chatAutoScript.ChatLabelLinkDataType
	(*AutoScriptSendMessageType)(nil),      // 5: proto.chatAutoScript.AutoScriptSendMessageType
	(*SendMessageDataType)(nil),            // 6: proto.chatAutoScript.SendMessageDataType
	(*ChatScriptData)(nil),                 // 7: proto.chatAutoScript.ChatScriptData
	(*ChatScriptLinkDataType)(nil),         // 8: proto.chatAutoScript.ChatScriptLinkDataType
	(*TriggerKeywordsDataType)(nil),        // 9: proto.chatAutoScript.TriggerKeywordsDataType
	(*ChatConnectionAppData)(nil),          // 10: proto.chatAutoScript.ChatConnectionAppData
	(*ZaloInfo)(nil),                       // 11: proto.chatAutoScript.ZaloInfo
	(*FacebookInfo)(nil),                   // 12: proto.chatAutoScript.FacebookInfo
	(*OaInfo)(nil),                         // 13: proto.chatAutoScript.OaInfo
	(*GetChatAutoScriptsRequest)(nil),      // 14: proto.chatAutoScript.GetChatAutoScriptsRequest
	(*GetChatAutoScriptsResponse)(nil),     // 15: proto.chatAutoScript.GetChatAutoScriptsResponse
	(*GetAutoScriptByIdRequest)(nil),       // 16: proto.chatAutoScript.GetAutoScriptByIdRequest
	(*GetAutoScriptByIdResponse)(nil),      // 17: proto.chatAutoScript.GetAutoScriptByIdResponse
	(*PostChatAutoScriptRequest)(nil),      // 18: proto.chatAutoScript.PostChatAutoScriptRequest
	(*PostChatAutoScriptResponse)(nil),     // 19: proto.chatAutoScript.PostChatAutoScriptResponse
	(*PutChatAutoScriptRequest)(nil),       // 20: proto.chatAutoScript.PutChatAutoScriptRequest
	(*PutChatAutoScriptResponse)(nil),      // 21: proto.chatAutoScript.PutChatAutoScriptResponse
	(*PutChatAutoScriptStatusRequest)(nil), // 22: proto.chatAutoScript.PutChatAutoScriptStatusRequest
	(*DeleteChatAutoScriptRequest)(nil),    // 23: proto.chatAutoScript.DeleteChatAutoScriptRequest
	(*DeleteChatAutoScriptResponse)(nil),   // 24: proto.chatAutoScript.DeleteChatAutoScriptResponse
	(*timestamppb.Timestamp)(nil),          // 25: google.protobuf.Timestamp
}
var file_proto_chat_auto_script_chat_auto_script_proto_depIdxs = []int32{
	25, // 0: proto.chatAutoScript.ChatAutoScriptData.created_at:type_name -> google.protobuf.Timestamp
	25, // 1: proto.chatAutoScript.ChatAutoScriptData.updated_at:type_name -> google.protobuf.Timestamp
	10, // 2: proto.chatAutoScript.ChatAutoScriptData.connection_app:type_name -> proto.chatAutoScript.ChatConnectionAppData
	9,  // 3: proto.chatAutoScript.ChatAutoScriptData.trigger_keywords:type_name -> proto.chatAutoScript.TriggerKeywordsDataType
	8,  // 4: proto.chatAutoScript.ChatAutoScriptData.chat_script_link:type_name -> proto.chatAutoScript.ChatScriptLinkDataType
	6,  // 5: proto.chatAutoScript.ChatAutoScriptData.send_message_actions:type_name -> proto.chatAutoScript.SendMessageDataType
	4,  // 6: proto.chatAutoScript.ChatAutoScriptData.chat_label_link:type_name -> proto.chatAutoScript.ChatLabelLinkDataType
	1,  // 7: proto.chatAutoScript.ChatAutoScriptData.action_script:type_name -> proto.chatAutoScript.AutoScriptMergedActions
	2,  // 8: proto.chatAutoScript.AutoScriptMergedActions.actions:type_name -> proto.chatAutoScript.ActionScriptActionType
	25, // 9: proto.chatAutoScript.ChatLabelData.created_at:type_name -> google.protobuf.Timestamp
	25, // 10: proto.chatAutoScript.ChatLabelData.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 11: proto.chatAutoScript.ChatLabelLinkDataType.chat_auto_script:type_name -> proto.chatAutoScript.ChatAutoScriptData
	3,  // 12: proto.chatAutoScript.ChatLabelLinkDataType.chat_label:type_name -> proto.chatAutoScript.ChatLabelData
	25, // 13: proto.chatAutoScript.ChatLabelLinkDataType.created_at:type_name -> google.protobuf.Timestamp
	25, // 14: proto.chatAutoScript.ChatLabelLinkDataType.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 15: proto.chatAutoScript.SendMessageDataType.actions:type_name -> proto.chatAutoScript.AutoScriptSendMessageType
	25, // 16: proto.chatAutoScript.ChatScriptData.created_at:type_name -> google.protobuf.Timestamp
	25, // 17: proto.chatAutoScript.ChatScriptData.updated_at:type_name -> google.protobuf.Timestamp
	10, // 18: proto.chatAutoScript.ChatScriptData.connection_app:type_name -> proto.chatAutoScript.ChatConnectionAppData
	0,  // 19: proto.chatAutoScript.ChatScriptLinkDataType.chat_auto_script:type_name -> proto.chatAutoScript.ChatAutoScriptData
	7,  // 20: proto.chatAutoScript.ChatScriptLinkDataType.chat_script:type_name -> proto.chatAutoScript.ChatScriptData
	25, // 21: proto.chatAutoScript.ChatScriptLinkDataType.created_at:type_name -> google.protobuf.Timestamp
	25, // 22: proto.chatAutoScript.ChatScriptLinkDataType.updated_at:type_name -> google.protobuf.Timestamp
	25, // 23: proto.chatAutoScript.ChatConnectionAppData.created_at:type_name -> google.protobuf.Timestamp
	25, // 24: proto.chatAutoScript.ChatConnectionAppData.updated_at:type_name -> google.protobuf.Timestamp
	13, // 25: proto.chatAutoScript.ChatConnectionAppData.oa_info:type_name -> proto.chatAutoScript.OaInfo
	11, // 26: proto.chatAutoScript.OaInfo.zalo:type_name -> proto.chatAutoScript.ZaloInfo
	12, // 27: proto.chatAutoScript.OaInfo.facebook:type_name -> proto.chatAutoScript.FacebookInfo
	0,  // 28: proto.chatAutoScript.GetChatAutoScriptsResponse.data:type_name -> proto.chatAutoScript.ChatAutoScriptData
	0,  // 29: proto.chatAutoScript.GetAutoScriptByIdResponse.data:type_name -> proto.chatAutoScript.ChatAutoScriptData
	9,  // 30: proto.chatAutoScript.PostChatAutoScriptRequest.trigger_keywords:type_name -> proto.chatAutoScript.TriggerKeywordsDataType
	1,  // 31: proto.chatAutoScript.PostChatAutoScriptRequest.action_script:type_name -> proto.chatAutoScript.AutoScriptMergedActions
	9,  // 32: proto.chatAutoScript.PutChatAutoScriptRequest.trigger_keywords:type_name -> proto.chatAutoScript.TriggerKeywordsDataType
	1,  // 33: proto.chatAutoScript.PutChatAutoScriptRequest.action_script:type_name -> proto.chatAutoScript.AutoScriptMergedActions
	14, // 34: proto.chatAutoScript.ChatAutoScriptService.GetChatAutoScripts:input_type -> proto.chatAutoScript.GetChatAutoScriptsRequest
	16, // 35: proto.chatAutoScript.ChatAutoScriptService.GetChatAutoScriptById:input_type -> proto.chatAutoScript.GetAutoScriptByIdRequest
	18, // 36: proto.chatAutoScript.ChatAutoScriptService.InsertChatAutoScript:input_type -> proto.chatAutoScript.PostChatAutoScriptRequest
	20, // 37: proto.chatAutoScript.ChatAutoScriptService.UpdateChatAutoScriptById:input_type -> proto.chatAutoScript.PutChatAutoScriptRequest
	22, // 38: proto.chatAutoScript.ChatAutoScriptService.UpdateChatAutoScriptStatusById:input_type -> proto.chatAutoScript.PutChatAutoScriptStatusRequest
	23, // 39: proto.chatAutoScript.ChatAutoScriptService.DeleteChatAutoScriptById:input_type -> proto.chatAutoScript.DeleteChatAutoScriptRequest
	15, // 40: proto.chatAutoScript.ChatAutoScriptService.GetChatAutoScripts:output_type -> proto.chatAutoScript.GetChatAutoScriptsResponse
	17, // 41: proto.chatAutoScript.ChatAutoScriptService.GetChatAutoScriptById:output_type -> proto.chatAutoScript.GetAutoScriptByIdResponse
	19, // 42: proto.chatAutoScript.ChatAutoScriptService.InsertChatAutoScript:output_type -> proto.chatAutoScript.PostChatAutoScriptResponse
	21, // 43: proto.chatAutoScript.ChatAutoScriptService.UpdateChatAutoScriptById:output_type -> proto.chatAutoScript.PutChatAutoScriptResponse
	21, // 44: proto.chatAutoScript.ChatAutoScriptService.UpdateChatAutoScriptStatusById:output_type -> proto.chatAutoScript.PutChatAutoScriptResponse
	24, // 45: proto.chatAutoScript.ChatAutoScriptService.DeleteChatAutoScriptById:output_type -> proto.chatAutoScript.DeleteChatAutoScriptResponse
	40, // [40:46] is the sub-list for method output_type
	34, // [34:40] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_proto_chat_auto_script_chat_auto_script_proto_init() }
func file_proto_chat_auto_script_chat_auto_script_proto_init() {
	if File_proto_chat_auto_script_chat_auto_script_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ChatAutoScriptData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AutoScriptMergedActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ActionScriptActionType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ChatLabelData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ChatLabelLinkDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AutoScriptSendMessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SendMessageDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ChatScriptData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ChatScriptLinkDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*TriggerKeywordsDataType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ChatConnectionAppData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ZaloInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*FacebookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*OaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatAutoScriptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatAutoScriptsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetAutoScriptByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetAutoScriptByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*PostChatAutoScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*PostChatAutoScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*PutChatAutoScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*PutChatAutoScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*PutChatAutoScriptStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteChatAutoScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_auto_script_chat_auto_script_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteChatAutoScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_auto_script_chat_auto_script_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_auto_script_chat_auto_script_proto_goTypes,
		DependencyIndexes: file_proto_chat_auto_script_chat_auto_script_proto_depIdxs,
		MessageInfos:      file_proto_chat_auto_script_chat_auto_script_proto_msgTypes,
	}.Build()
	File_proto_chat_auto_script_chat_auto_script_proto = out.File
	file_proto_chat_auto_script_chat_auto_script_proto_rawDesc = nil
	file_proto_chat_auto_script_chat_auto_script_proto_goTypes = nil
	file_proto_chat_auto_script_chat_auto_script_proto_depIdxs = nil
}
