// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: proto/chat_auto_script/chat_auto_script.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ChatAutoScriptService_GetChatAutoScripts_FullMethodName             = "/proto.chatAutoScript.ChatAutoScriptService/GetChatAutoScripts"
	ChatAutoScriptService_GetChatAutoScriptById_FullMethodName          = "/proto.chatAutoScript.ChatAutoScriptService/GetChatAutoScriptById"
	ChatAutoScriptService_InsertChatAutoScript_FullMethodName           = "/proto.chatAutoScript.ChatAutoScriptService/InsertChatAutoScript"
	ChatAutoScriptService_UpdateChatAutoScriptById_FullMethodName       = "/proto.chatAutoScript.ChatAutoScriptService/UpdateChatAutoScriptById"
	ChatAutoScriptService_UpdateChatAutoScriptStatusById_FullMethodName = "/proto.chatAutoScript.ChatAutoScriptService/UpdateChatAutoScriptStatusById"
	ChatAutoScriptService_DeleteChatAutoScriptById_FullMethodName       = "/proto.chatAutoScript.ChatAutoScriptService/DeleteChatAutoScriptById"
)

// ChatAutoScriptServiceClient is the client API for ChatAutoScriptService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ChatAutoScriptServiceClient interface {
	GetChatAutoScripts(ctx context.Context, in *GetChatAutoScriptsRequest, opts ...grpc.CallOption) (*GetChatAutoScriptsResponse, error)
	GetChatAutoScriptById(ctx context.Context, in *GetAutoScriptByIdRequest, opts ...grpc.CallOption) (*GetAutoScriptByIdResponse, error)
	InsertChatAutoScript(ctx context.Context, in *PostChatAutoScriptRequest, opts ...grpc.CallOption) (*PostChatAutoScriptResponse, error)
	UpdateChatAutoScriptById(ctx context.Context, in *PutChatAutoScriptRequest, opts ...grpc.CallOption) (*PutChatAutoScriptResponse, error)
	UpdateChatAutoScriptStatusById(ctx context.Context, in *PutChatAutoScriptStatusRequest, opts ...grpc.CallOption) (*PutChatAutoScriptResponse, error)
	DeleteChatAutoScriptById(ctx context.Context, in *DeleteChatAutoScriptRequest, opts ...grpc.CallOption) (*DeleteChatAutoScriptResponse, error)
}

type chatAutoScriptServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatAutoScriptServiceClient(cc grpc.ClientConnInterface) ChatAutoScriptServiceClient {
	return &chatAutoScriptServiceClient{cc}
}

func (c *chatAutoScriptServiceClient) GetChatAutoScripts(ctx context.Context, in *GetChatAutoScriptsRequest, opts ...grpc.CallOption) (*GetChatAutoScriptsResponse, error) {
	out := new(GetChatAutoScriptsResponse)
	err := c.cc.Invoke(ctx, ChatAutoScriptService_GetChatAutoScripts_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatAutoScriptServiceClient) GetChatAutoScriptById(ctx context.Context, in *GetAutoScriptByIdRequest, opts ...grpc.CallOption) (*GetAutoScriptByIdResponse, error) {
	out := new(GetAutoScriptByIdResponse)
	err := c.cc.Invoke(ctx, ChatAutoScriptService_GetChatAutoScriptById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatAutoScriptServiceClient) InsertChatAutoScript(ctx context.Context, in *PostChatAutoScriptRequest, opts ...grpc.CallOption) (*PostChatAutoScriptResponse, error) {
	out := new(PostChatAutoScriptResponse)
	err := c.cc.Invoke(ctx, ChatAutoScriptService_InsertChatAutoScript_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatAutoScriptServiceClient) UpdateChatAutoScriptById(ctx context.Context, in *PutChatAutoScriptRequest, opts ...grpc.CallOption) (*PutChatAutoScriptResponse, error) {
	out := new(PutChatAutoScriptResponse)
	err := c.cc.Invoke(ctx, ChatAutoScriptService_UpdateChatAutoScriptById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatAutoScriptServiceClient) UpdateChatAutoScriptStatusById(ctx context.Context, in *PutChatAutoScriptStatusRequest, opts ...grpc.CallOption) (*PutChatAutoScriptResponse, error) {
	out := new(PutChatAutoScriptResponse)
	err := c.cc.Invoke(ctx, ChatAutoScriptService_UpdateChatAutoScriptStatusById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatAutoScriptServiceClient) DeleteChatAutoScriptById(ctx context.Context, in *DeleteChatAutoScriptRequest, opts ...grpc.CallOption) (*DeleteChatAutoScriptResponse, error) {
	out := new(DeleteChatAutoScriptResponse)
	err := c.cc.Invoke(ctx, ChatAutoScriptService_DeleteChatAutoScriptById_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatAutoScriptServiceServer is the server API for ChatAutoScriptService service.
// All implementations should embed UnimplementedChatAutoScriptServiceServer
// for forward compatibility
type ChatAutoScriptServiceServer interface {
	GetChatAutoScripts(context.Context, *GetChatAutoScriptsRequest) (*GetChatAutoScriptsResponse, error)
	GetChatAutoScriptById(context.Context, *GetAutoScriptByIdRequest) (*GetAutoScriptByIdResponse, error)
	InsertChatAutoScript(context.Context, *PostChatAutoScriptRequest) (*PostChatAutoScriptResponse, error)
	UpdateChatAutoScriptById(context.Context, *PutChatAutoScriptRequest) (*PutChatAutoScriptResponse, error)
	UpdateChatAutoScriptStatusById(context.Context, *PutChatAutoScriptStatusRequest) (*PutChatAutoScriptResponse, error)
	DeleteChatAutoScriptById(context.Context, *DeleteChatAutoScriptRequest) (*DeleteChatAutoScriptResponse, error)
}

// UnimplementedChatAutoScriptServiceServer should be embedded to have forward compatible implementations.
type UnimplementedChatAutoScriptServiceServer struct {
}

func (UnimplementedChatAutoScriptServiceServer) GetChatAutoScripts(context.Context, *GetChatAutoScriptsRequest) (*GetChatAutoScriptsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatAutoScripts not implemented")
}
func (UnimplementedChatAutoScriptServiceServer) GetChatAutoScriptById(context.Context, *GetAutoScriptByIdRequest) (*GetAutoScriptByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatAutoScriptById not implemented")
}
func (UnimplementedChatAutoScriptServiceServer) InsertChatAutoScript(context.Context, *PostChatAutoScriptRequest) (*PostChatAutoScriptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertChatAutoScript not implemented")
}
func (UnimplementedChatAutoScriptServiceServer) UpdateChatAutoScriptById(context.Context, *PutChatAutoScriptRequest) (*PutChatAutoScriptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChatAutoScriptById not implemented")
}
func (UnimplementedChatAutoScriptServiceServer) UpdateChatAutoScriptStatusById(context.Context, *PutChatAutoScriptStatusRequest) (*PutChatAutoScriptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateChatAutoScriptStatusById not implemented")
}
func (UnimplementedChatAutoScriptServiceServer) DeleteChatAutoScriptById(context.Context, *DeleteChatAutoScriptRequest) (*DeleteChatAutoScriptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteChatAutoScriptById not implemented")
}

// UnsafeChatAutoScriptServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ChatAutoScriptServiceServer will
// result in compilation errors.
type UnsafeChatAutoScriptServiceServer interface {
	mustEmbedUnimplementedChatAutoScriptServiceServer()
}

func RegisterChatAutoScriptServiceServer(s grpc.ServiceRegistrar, srv ChatAutoScriptServiceServer) {
	s.RegisterService(&ChatAutoScriptService_ServiceDesc, srv)
}

func _ChatAutoScriptService_GetChatAutoScripts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChatAutoScriptsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatAutoScriptServiceServer).GetChatAutoScripts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ChatAutoScriptService_GetChatAutoScripts_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatAutoScriptServiceServer).GetChatAutoScripts(ctx, req.(*GetChatAutoScriptsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatAutoScriptService_GetChatAutoScriptById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAutoScriptByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatAutoScriptServiceServer).GetChatAutoScriptById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ChatAutoScriptService_GetChatAutoScriptById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatAutoScriptServiceServer).GetChatAutoScriptById(ctx, req.(*GetAutoScriptByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatAutoScriptService_InsertChatAutoScript_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostChatAutoScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatAutoScriptServiceServer).InsertChatAutoScript(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ChatAutoScriptService_InsertChatAutoScript_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatAutoScriptServiceServer).InsertChatAutoScript(ctx, req.(*PostChatAutoScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatAutoScriptService_UpdateChatAutoScriptById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutChatAutoScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatAutoScriptServiceServer).UpdateChatAutoScriptById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ChatAutoScriptService_UpdateChatAutoScriptById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatAutoScriptServiceServer).UpdateChatAutoScriptById(ctx, req.(*PutChatAutoScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatAutoScriptService_UpdateChatAutoScriptStatusById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutChatAutoScriptStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatAutoScriptServiceServer).UpdateChatAutoScriptStatusById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ChatAutoScriptService_UpdateChatAutoScriptStatusById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatAutoScriptServiceServer).UpdateChatAutoScriptStatusById(ctx, req.(*PutChatAutoScriptStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatAutoScriptService_DeleteChatAutoScriptById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteChatAutoScriptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatAutoScriptServiceServer).DeleteChatAutoScriptById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ChatAutoScriptService_DeleteChatAutoScriptById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatAutoScriptServiceServer).DeleteChatAutoScriptById(ctx, req.(*DeleteChatAutoScriptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ChatAutoScriptService_ServiceDesc is the grpc.ServiceDesc for ChatAutoScriptService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ChatAutoScriptService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.chatAutoScript.ChatAutoScriptService",
	HandlerType: (*ChatAutoScriptServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChatAutoScripts",
			Handler:    _ChatAutoScriptService_GetChatAutoScripts_Handler,
		},
		{
			MethodName: "GetChatAutoScriptById",
			Handler:    _ChatAutoScriptService_GetChatAutoScriptById_Handler,
		},
		{
			MethodName: "InsertChatAutoScript",
			Handler:    _ChatAutoScriptService_InsertChatAutoScript_Handler,
		},
		{
			MethodName: "UpdateChatAutoScriptById",
			Handler:    _ChatAutoScriptService_UpdateChatAutoScriptById_Handler,
		},
		{
			MethodName: "UpdateChatAutoScriptStatusById",
			Handler:    _ChatAutoScriptService_UpdateChatAutoScriptStatusById_Handler,
		},
		{
			MethodName: "DeleteChatAutoScriptById",
			Handler:    _ChatAutoScriptService_DeleteChatAutoScriptById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/chat_auto_script/chat_auto_script.proto",
}
