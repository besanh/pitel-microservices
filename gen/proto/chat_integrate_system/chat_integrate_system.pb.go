// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/chat_integrate_system/chat_integrate_system.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request get chat integrate system
type GetChatIntegrateSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	SystemName string `protobuf:"bytes,3,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`
	VendorName string `protobuf:"bytes,4,opt,name=vendor_name,json=vendorName,proto3" json:"vendor_name,omitempty"`
	Status     string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	SystemId   string `protobuf:"bytes,6,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *GetChatIntegrateSystemRequest) Reset() {
	*x = GetChatIntegrateSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatIntegrateSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatIntegrateSystemRequest) ProtoMessage() {}

func (x *GetChatIntegrateSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatIntegrateSystemRequest.ProtoReflect.Descriptor instead.
func (*GetChatIntegrateSystemRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP(), []int{0}
}

func (x *GetChatIntegrateSystemRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatIntegrateSystemRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetChatIntegrateSystemRequest) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *GetChatIntegrateSystemRequest) GetVendorName() string {
	if x != nil {
		return x.VendorName
	}
	return ""
}

func (x *GetChatIntegrateSystemRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetChatIntegrateSystemRequest) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

// Response get chat integrate system
type GetChatIntegrateSystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string                     `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChatIntegrateSystemData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32                      `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetChatIntegrateSystemResponse) Reset() {
	*x = GetChatIntegrateSystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatIntegrateSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatIntegrateSystemResponse) ProtoMessage() {}

func (x *GetChatIntegrateSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatIntegrateSystemResponse.ProtoReflect.Descriptor instead.
func (*GetChatIntegrateSystemResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP(), []int{1}
}

func (x *GetChatIntegrateSystemResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatIntegrateSystemResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatIntegrateSystemResponse) GetData() []*ChatIntegrateSystemData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChatIntegrateSystemResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ChatIntegrateSystemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SystemName      string                 `protobuf:"bytes,2,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`
	SystemId        string                 `protobuf:"bytes,3,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	TenantDefaultId string                 `protobuf:"bytes,4,opt,name=tenant_default_id,json=tenantDefaultId,proto3" json:"tenant_default_id,omitempty"`
	VendorId        string                 `protobuf:"bytes,5,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Status          bool                   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	InfoSystem      string                 `protobuf:"bytes,7,opt,name=info_system,json=infoSystem,proto3" json:"info_system,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ChatIntegrateSystemData) Reset() {
	*x = ChatIntegrateSystemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatIntegrateSystemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatIntegrateSystemData) ProtoMessage() {}

func (x *ChatIntegrateSystemData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatIntegrateSystemData.ProtoReflect.Descriptor instead.
func (*ChatIntegrateSystemData) Descriptor() ([]byte, []int) {
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP(), []int{2}
}

func (x *ChatIntegrateSystemData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatIntegrateSystemData) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *ChatIntegrateSystemData) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *ChatIntegrateSystemData) GetTenantDefaultId() string {
	if x != nil {
		return x.TenantDefaultId
	}
	return ""
}

func (x *ChatIntegrateSystemData) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *ChatIntegrateSystemData) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *ChatIntegrateSystemData) GetInfoSystem() string {
	if x != nil {
		return x.InfoSystem
	}
	return ""
}

func (x *ChatIntegrateSystemData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatIntegrateSystemData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Request post chat integrate system
type PostChatIntegrateSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemName          string `protobuf:"bytes,1,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`
	VendorId            string `protobuf:"bytes,2,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Status              bool   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	AuthType            string `protobuf:"bytes,4,opt,name=auth_type,json=authType,proto3" json:"auth_type,omitempty"`
	Username            string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	Password            string `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	Token               string `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	WebsocketUrl        string `protobuf:"bytes,8,opt,name=websocket_url,json=websocketUrl,proto3" json:"websocket_url,omitempty"`
	ApiUrl              string `protobuf:"bytes,9,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	ApiAuthUrl          string `protobuf:"bytes,10,opt,name=api_auth_url,json=apiAuthUrl,proto3" json:"api_auth_url,omitempty"`
	ApiGetUserUrl       string `protobuf:"bytes,11,opt,name=api_get_user_url,json=apiGetUserUrl,proto3" json:"api_get_user_url,omitempty"`
	ApiGetUserDetailUrl string `protobuf:"bytes,12,opt,name=api_get_user_detail_url,json=apiGetUserDetailUrl,proto3" json:"api_get_user_detail_url,omitempty"`
}

func (x *PostChatIntegrateSystemRequest) Reset() {
	*x = PostChatIntegrateSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatIntegrateSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatIntegrateSystemRequest) ProtoMessage() {}

func (x *PostChatIntegrateSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatIntegrateSystemRequest.ProtoReflect.Descriptor instead.
func (*PostChatIntegrateSystemRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP(), []int{3}
}

func (x *PostChatIntegrateSystemRequest) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *PostChatIntegrateSystemRequest) GetAuthType() string {
	if x != nil {
		return x.AuthType
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetWebsocketUrl() string {
	if x != nil {
		return x.WebsocketUrl
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetApiAuthUrl() string {
	if x != nil {
		return x.ApiAuthUrl
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetApiGetUserUrl() string {
	if x != nil {
		return x.ApiGetUserUrl
	}
	return ""
}

func (x *PostChatIntegrateSystemRequest) GetApiGetUserDetailUrl() string {
	if x != nil {
		return x.ApiGetUserDetailUrl
	}
	return ""
}

// Response post chat integrate system
type PostChatIntegrateSystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id       string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	SystemId string `protobuf:"bytes,4,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
}

func (x *PostChatIntegrateSystemResponse) Reset() {
	*x = PostChatIntegrateSystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatIntegrateSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatIntegrateSystemResponse) ProtoMessage() {}

func (x *PostChatIntegrateSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatIntegrateSystemResponse.ProtoReflect.Descriptor instead.
func (*PostChatIntegrateSystemResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP(), []int{4}
}

func (x *PostChatIntegrateSystemResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostChatIntegrateSystemResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PostChatIntegrateSystemResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostChatIntegrateSystemResponse) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

// Response get chat integrate system by id
type GetChatIntegrateSystemByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string                   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ChatIntegrateSystemData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetChatIntegrateSystemByIdResponse) Reset() {
	*x = GetChatIntegrateSystemByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatIntegrateSystemByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatIntegrateSystemByIdResponse) ProtoMessage() {}

func (x *GetChatIntegrateSystemByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatIntegrateSystemByIdResponse.ProtoReflect.Descriptor instead.
func (*GetChatIntegrateSystemByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP(), []int{5}
}

func (x *GetChatIntegrateSystemByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatIntegrateSystemByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatIntegrateSystemByIdResponse) GetData() *ChatIntegrateSystemData {
	if x != nil {
		return x.Data
	}
	return nil
}

// Request get chat integrate system by id
type GetChatIntegrateSystemByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetChatIntegrateSystemByIdRequest) Reset() {
	*x = GetChatIntegrateSystemByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatIntegrateSystemByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatIntegrateSystemByIdRequest) ProtoMessage() {}

func (x *GetChatIntegrateSystemByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatIntegrateSystemByIdRequest.ProtoReflect.Descriptor instead.
func (*GetChatIntegrateSystemByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP(), []int{6}
}

func (x *GetChatIntegrateSystemByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PutChatIntegrateSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SystemName          string `protobuf:"bytes,2,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`
	VendorId            string `protobuf:"bytes,3,opt,name=vendor_id,json=vendorId,proto3" json:"vendor_id,omitempty"`
	Status              bool   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	AuthType            string `protobuf:"bytes,5,opt,name=auth_type,json=authType,proto3" json:"auth_type,omitempty"`
	Username            string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	Password            string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	Token               string `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	WebsocketUrl        string `protobuf:"bytes,9,opt,name=websocket_url,json=websocketUrl,proto3" json:"websocket_url,omitempty"`
	ApiUrl              string `protobuf:"bytes,10,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	ApiAuthUrl          string `protobuf:"bytes,11,opt,name=api_auth_url,json=apiAuthUrl,proto3" json:"api_auth_url,omitempty"`
	ApiGetUserUrl       string `protobuf:"bytes,12,opt,name=api_get_user_url,json=apiGetUserUrl,proto3" json:"api_get_user_url,omitempty"`
	ApiGetUserDetailUrl string `protobuf:"bytes,13,opt,name=api_get_user_detail_url,json=apiGetUserDetailUrl,proto3" json:"api_get_user_detail_url,omitempty"`
}

func (x *PutChatIntegrateSystemRequest) Reset() {
	*x = PutChatIntegrateSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatIntegrateSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatIntegrateSystemRequest) ProtoMessage() {}

func (x *PutChatIntegrateSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatIntegrateSystemRequest.ProtoReflect.Descriptor instead.
func (*PutChatIntegrateSystemRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP(), []int{7}
}

func (x *PutChatIntegrateSystemRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetVendorId() string {
	if x != nil {
		return x.VendorId
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *PutChatIntegrateSystemRequest) GetAuthType() string {
	if x != nil {
		return x.AuthType
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetWebsocketUrl() string {
	if x != nil {
		return x.WebsocketUrl
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetApiAuthUrl() string {
	if x != nil {
		return x.ApiAuthUrl
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetApiGetUserUrl() string {
	if x != nil {
		return x.ApiGetUserUrl
	}
	return ""
}

func (x *PutChatIntegrateSystemRequest) GetApiGetUserDetailUrl() string {
	if x != nil {
		return x.ApiGetUserDetailUrl
	}
	return ""
}

var File_proto_chat_integrate_system_chat_integrate_system_proto protoreflect.FileDescriptor

var file_proto_chat_integrate_system_chat_integrate_system_proto_rawDesc = []byte{
	0x0a, 0x37, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4,
	0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xac, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xdf, 0x02, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x66, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa0, 0x03, 0x0a, 0x1e, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76,
	0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x10, 0x61, 0x70,
	0x69, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x17, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x70, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x22, 0x7c, 0x0a, 0x1f, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xaf, 0x03, 0x0a, 0x1d, 0x50, 0x75,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x55, 0x72,
	0x6c, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x61, 0x70,
	0x69, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x61, 0x70, 0x69, 0x41, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x0a, 0x10,
	0x61, 0x70, 0x69, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x17, 0x61, 0x70, 0x69, 0x5f, 0x67, 0x65, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x70, 0x69, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x55, 0x72, 0x6c, 0x32, 0xfa, 0x07, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x12, 0xba, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x62,
	0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0xbf, 0x01, 0x0a, 0x17, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22,
	0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x2d, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0xca, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x3c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x2d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0xc9, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x75,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a,
	0x01, 0x2a, 0x1a, 0x27, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x2d,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xca, 0x01, 0x0a, 0x1d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x42, 0x79, 0x49, 0x64, 0x12, 0x3c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x2a,
	0x27, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x65, 0x2d, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x66, 0x69,
	0x6e, 0x73, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescOnce sync.Once
	file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescData = file_proto_chat_integrate_system_chat_integrate_system_proto_rawDesc
)

func file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescGZIP() []byte {
	file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescOnce.Do(func() {
		file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescData)
	})
	return file_proto_chat_integrate_system_chat_integrate_system_proto_rawDescData
}

var file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_chat_integrate_system_chat_integrate_system_proto_goTypes = []interface{}{
	(*GetChatIntegrateSystemRequest)(nil),      // 0: proto.chatIntegrateSystem.GetChatIntegrateSystemRequest
	(*GetChatIntegrateSystemResponse)(nil),     // 1: proto.chatIntegrateSystem.GetChatIntegrateSystemResponse
	(*ChatIntegrateSystemData)(nil),            // 2: proto.chatIntegrateSystem.ChatIntegrateSystemData
	(*PostChatIntegrateSystemRequest)(nil),     // 3: proto.chatIntegrateSystem.PostChatIntegrateSystemRequest
	(*PostChatIntegrateSystemResponse)(nil),    // 4: proto.chatIntegrateSystem.PostChatIntegrateSystemResponse
	(*GetChatIntegrateSystemByIdResponse)(nil), // 5: proto.chatIntegrateSystem.GetChatIntegrateSystemByIdResponse
	(*GetChatIntegrateSystemByIdRequest)(nil),  // 6: proto.chatIntegrateSystem.GetChatIntegrateSystemByIdRequest
	(*PutChatIntegrateSystemRequest)(nil),      // 7: proto.chatIntegrateSystem.PutChatIntegrateSystemRequest
	(*timestamppb.Timestamp)(nil),              // 8: google.protobuf.Timestamp
}
var file_proto_chat_integrate_system_chat_integrate_system_proto_depIdxs = []int32{
	2, // 0: proto.chatIntegrateSystem.GetChatIntegrateSystemResponse.data:type_name -> proto.chatIntegrateSystem.ChatIntegrateSystemData
	8, // 1: proto.chatIntegrateSystem.ChatIntegrateSystemData.created_at:type_name -> google.protobuf.Timestamp
	8, // 2: proto.chatIntegrateSystem.ChatIntegrateSystemData.updated_at:type_name -> google.protobuf.Timestamp
	2, // 3: proto.chatIntegrateSystem.GetChatIntegrateSystemByIdResponse.data:type_name -> proto.chatIntegrateSystem.ChatIntegrateSystemData
	0, // 4: proto.chatIntegrateSystem.ChatIntegrateSystem.GetChatIntegrateSystems:input_type -> proto.chatIntegrateSystem.GetChatIntegrateSystemRequest
	3, // 5: proto.chatIntegrateSystem.ChatIntegrateSystem.PostChatIntegrateSystem:input_type -> proto.chatIntegrateSystem.PostChatIntegrateSystemRequest
	6, // 6: proto.chatIntegrateSystem.ChatIntegrateSystem.GetChatIntegrateSystemById:input_type -> proto.chatIntegrateSystem.GetChatIntegrateSystemByIdRequest
	7, // 7: proto.chatIntegrateSystem.ChatIntegrateSystem.UpdateChatIntegrateSystemById:input_type -> proto.chatIntegrateSystem.PutChatIntegrateSystemRequest
	6, // 8: proto.chatIntegrateSystem.ChatIntegrateSystem.DeleteChatIntegrateSystemById:input_type -> proto.chatIntegrateSystem.GetChatIntegrateSystemByIdRequest
	1, // 9: proto.chatIntegrateSystem.ChatIntegrateSystem.GetChatIntegrateSystems:output_type -> proto.chatIntegrateSystem.GetChatIntegrateSystemResponse
	4, // 10: proto.chatIntegrateSystem.ChatIntegrateSystem.PostChatIntegrateSystem:output_type -> proto.chatIntegrateSystem.PostChatIntegrateSystemResponse
	5, // 11: proto.chatIntegrateSystem.ChatIntegrateSystem.GetChatIntegrateSystemById:output_type -> proto.chatIntegrateSystem.GetChatIntegrateSystemByIdResponse
	4, // 12: proto.chatIntegrateSystem.ChatIntegrateSystem.UpdateChatIntegrateSystemById:output_type -> proto.chatIntegrateSystem.PostChatIntegrateSystemResponse
	4, // 13: proto.chatIntegrateSystem.ChatIntegrateSystem.DeleteChatIntegrateSystemById:output_type -> proto.chatIntegrateSystem.PostChatIntegrateSystemResponse
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_chat_integrate_system_chat_integrate_system_proto_init() }
func file_proto_chat_integrate_system_chat_integrate_system_proto_init() {
	if File_proto_chat_integrate_system_chat_integrate_system_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatIntegrateSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatIntegrateSystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatIntegrateSystemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatIntegrateSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatIntegrateSystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatIntegrateSystemByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatIntegrateSystemByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatIntegrateSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_integrate_system_chat_integrate_system_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_integrate_system_chat_integrate_system_proto_goTypes,
		DependencyIndexes: file_proto_chat_integrate_system_chat_integrate_system_proto_depIdxs,
		MessageInfos:      file_proto_chat_integrate_system_chat_integrate_system_proto_msgTypes,
	}.Build()
	File_proto_chat_integrate_system_chat_integrate_system_proto = out.File
	file_proto_chat_integrate_system_chat_integrate_system_proto_rawDesc = nil
	file_proto_chat_integrate_system_chat_integrate_system_proto_goTypes = nil
	file_proto_chat_integrate_system_chat_integrate_system_proto_depIdxs = nil
}
