// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/chat_policy_setting/chat_policy_setting.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatPolicySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId       string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ConnectionType string                 `protobuf:"bytes,5,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	CreatedBy      string                 `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy      string                 `protobuf:"bytes,7,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	ChatWindowTime int32                  `protobuf:"varint,8,opt,name=chat_window_time,json=chatWindowTime,proto3" json:"chat_window_time,omitempty"`
}

func (x *ChatPolicySetting) Reset() {
	*x = ChatPolicySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatPolicySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPolicySetting) ProtoMessage() {}

func (x *ChatPolicySetting) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPolicySetting.ProtoReflect.Descriptor instead.
func (*ChatPolicySetting) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{0}
}

func (x *ChatPolicySetting) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatPolicySetting) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatPolicySetting) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatPolicySetting) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatPolicySetting) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *ChatPolicySetting) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ChatPolicySetting) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *ChatPolicySetting) GetChatWindowTime() int32 {
	if x != nil {
		return x.ChatWindowTime
	}
	return 0
}

// get chat policy settings
type GetChatPolicySettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit          int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	ConnectionType string `protobuf:"bytes,3,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
}

func (x *GetChatPolicySettingsRequest) Reset() {
	*x = GetChatPolicySettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatPolicySettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatPolicySettingsRequest) ProtoMessage() {}

func (x *GetChatPolicySettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatPolicySettingsRequest.ProtoReflect.Descriptor instead.
func (*GetChatPolicySettingsRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{1}
}

func (x *GetChatPolicySettingsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatPolicySettingsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetChatPolicySettingsRequest) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

type GetChatPolicySettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string               `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChatPolicySetting `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32                `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Limit   int32                `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32                `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatPolicySettingsResponse) Reset() {
	*x = GetChatPolicySettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatPolicySettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatPolicySettingsResponse) ProtoMessage() {}

func (x *GetChatPolicySettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatPolicySettingsResponse.ProtoReflect.Descriptor instead.
func (*GetChatPolicySettingsResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{2}
}

func (x *GetChatPolicySettingsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatPolicySettingsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatPolicySettingsResponse) GetData() []*ChatPolicySetting {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChatPolicySettingsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChatPolicySettingsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatPolicySettingsResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// get policy setting by id
type GetChatPolicySettingByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetChatPolicySettingByIdRequest) Reset() {
	*x = GetChatPolicySettingByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatPolicySettingByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatPolicySettingByIdRequest) ProtoMessage() {}

func (x *GetChatPolicySettingByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatPolicySettingByIdRequest.ProtoReflect.Descriptor instead.
func (*GetChatPolicySettingByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{3}
}

func (x *GetChatPolicySettingByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetChatPolicySettingByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ChatPolicySetting `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetChatPolicySettingByIdResponse) Reset() {
	*x = GetChatPolicySettingByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatPolicySettingByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatPolicySettingByIdResponse) ProtoMessage() {}

func (x *GetChatPolicySettingByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatPolicySettingByIdResponse.ProtoReflect.Descriptor instead.
func (*GetChatPolicySettingByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{4}
}

func (x *GetChatPolicySettingByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatPolicySettingByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatPolicySettingByIdResponse) GetData() *ChatPolicySetting {
	if x != nil {
		return x.Data
	}
	return nil
}

// create policy setting
type PostChatPolicySettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionType string `protobuf:"bytes,1,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	ChatWindowTime int32  `protobuf:"varint,2,opt,name=chat_window_time,json=chatWindowTime,proto3" json:"chat_window_time,omitempty"`
}

func (x *PostChatPolicySettingRequest) Reset() {
	*x = PostChatPolicySettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatPolicySettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatPolicySettingRequest) ProtoMessage() {}

func (x *PostChatPolicySettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatPolicySettingRequest.ProtoReflect.Descriptor instead.
func (*PostChatPolicySettingRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{5}
}

func (x *PostChatPolicySettingRequest) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *PostChatPolicySettingRequest) GetChatWindowTime() int32 {
	if x != nil {
		return x.ChatWindowTime
	}
	return 0
}

type PostChatPolicySettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostChatPolicySettingResponse) Reset() {
	*x = PostChatPolicySettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatPolicySettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatPolicySettingResponse) ProtoMessage() {}

func (x *PostChatPolicySettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatPolicySettingResponse.ProtoReflect.Descriptor instead.
func (*PostChatPolicySettingResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{6}
}

func (x *PostChatPolicySettingResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostChatPolicySettingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PostChatPolicySettingResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// update policy setting by id
type PutChatPolicySettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConnectionType string `protobuf:"bytes,2,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	ChatWindowTime int32  `protobuf:"varint,3,opt,name=chat_window_time,json=chatWindowTime,proto3" json:"chat_window_time,omitempty"`
}

func (x *PutChatPolicySettingRequest) Reset() {
	*x = PutChatPolicySettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatPolicySettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatPolicySettingRequest) ProtoMessage() {}

func (x *PutChatPolicySettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatPolicySettingRequest.ProtoReflect.Descriptor instead.
func (*PutChatPolicySettingRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{7}
}

func (x *PutChatPolicySettingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatPolicySettingRequest) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *PutChatPolicySettingRequest) GetChatWindowTime() int32 {
	if x != nil {
		return x.ChatWindowTime
	}
	return 0
}

type PutChatPolicySettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatPolicySettingResponse) Reset() {
	*x = PutChatPolicySettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatPolicySettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatPolicySettingResponse) ProtoMessage() {}

func (x *PutChatPolicySettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatPolicySettingResponse.ProtoReflect.Descriptor instead.
func (*PutChatPolicySettingResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{8}
}

func (x *PutChatPolicySettingResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChatPolicySettingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// delete policy setting by id
type DeleteChatPolicySettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChatPolicySettingRequest) Reset() {
	*x = DeleteChatPolicySettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatPolicySettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatPolicySettingRequest) ProtoMessage() {}

func (x *DeleteChatPolicySettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatPolicySettingRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatPolicySettingRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteChatPolicySettingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteChatPolicySettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteChatPolicySettingResponse) Reset() {
	*x = DeleteChatPolicySettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatPolicySettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatPolicySettingResponse) ProtoMessage() {}

func (x *DeleteChatPolicySettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatPolicySettingResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatPolicySettingResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteChatPolicySettingResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteChatPolicySettingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_policy_setting_chat_policy_setting_proto protoreflect.FileDescriptor

var file_proto_chat_policy_setting_chat_policy_setting_proto_rawDesc = []byte{
	0x0a, 0x33, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x02, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x75, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x31, 0x0a,
	0x1f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x90, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5d, 0x0a, 0x1d, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x1b, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x1c, 0x50, 0x75, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xc7, 0x07, 0x0a, 0x18, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb0, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2d, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0xbe, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2d, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb5, 0x01, 0x0a, 0x17, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a,
	0x22, 0x20, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x2d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0xbc, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x75, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x1a, 0x25, 0x2f, 0x62, 0x73, 0x73,
	0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xbf, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x62,
	0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2d, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x66, 0x69, 0x6e, 0x73, 0x2d, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescOnce sync.Once
	file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescData = file_proto_chat_policy_setting_chat_policy_setting_proto_rawDesc
)

func file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescGZIP() []byte {
	file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescOnce.Do(func() {
		file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescData)
	})
	return file_proto_chat_policy_setting_chat_policy_setting_proto_rawDescData
}

var file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_chat_policy_setting_chat_policy_setting_proto_goTypes = []interface{}{
	(*ChatPolicySetting)(nil),                // 0: proto.chatPolicySetting.ChatPolicySetting
	(*GetChatPolicySettingsRequest)(nil),     // 1: proto.chatPolicySetting.GetChatPolicySettingsRequest
	(*GetChatPolicySettingsResponse)(nil),    // 2: proto.chatPolicySetting.GetChatPolicySettingsResponse
	(*GetChatPolicySettingByIdRequest)(nil),  // 3: proto.chatPolicySetting.GetChatPolicySettingByIdRequest
	(*GetChatPolicySettingByIdResponse)(nil), // 4: proto.chatPolicySetting.GetChatPolicySettingByIdResponse
	(*PostChatPolicySettingRequest)(nil),     // 5: proto.chatPolicySetting.PostChatPolicySettingRequest
	(*PostChatPolicySettingResponse)(nil),    // 6: proto.chatPolicySetting.PostChatPolicySettingResponse
	(*PutChatPolicySettingRequest)(nil),      // 7: proto.chatPolicySetting.PutChatPolicySettingRequest
	(*PutChatPolicySettingResponse)(nil),     // 8: proto.chatPolicySetting.PutChatPolicySettingResponse
	(*DeleteChatPolicySettingRequest)(nil),   // 9: proto.chatPolicySetting.DeleteChatPolicySettingRequest
	(*DeleteChatPolicySettingResponse)(nil),  // 10: proto.chatPolicySetting.DeleteChatPolicySettingResponse
	(*timestamppb.Timestamp)(nil),            // 11: google.protobuf.Timestamp
}
var file_proto_chat_policy_setting_chat_policy_setting_proto_depIdxs = []int32{
	11, // 0: proto.chatPolicySetting.ChatPolicySetting.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: proto.chatPolicySetting.ChatPolicySetting.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: proto.chatPolicySetting.GetChatPolicySettingsResponse.data:type_name -> proto.chatPolicySetting.ChatPolicySetting
	0,  // 3: proto.chatPolicySetting.GetChatPolicySettingByIdResponse.data:type_name -> proto.chatPolicySetting.ChatPolicySetting
	1,  // 4: proto.chatPolicySetting.ChatPolicySettingService.GetChatPolicySettings:input_type -> proto.chatPolicySetting.GetChatPolicySettingsRequest
	3,  // 5: proto.chatPolicySetting.ChatPolicySettingService.GetChatPolicySettingById:input_type -> proto.chatPolicySetting.GetChatPolicySettingByIdRequest
	5,  // 6: proto.chatPolicySetting.ChatPolicySettingService.InsertChatPolicySetting:input_type -> proto.chatPolicySetting.PostChatPolicySettingRequest
	7,  // 7: proto.chatPolicySetting.ChatPolicySettingService.UpdateChatPolicySettingById:input_type -> proto.chatPolicySetting.PutChatPolicySettingRequest
	9,  // 8: proto.chatPolicySetting.ChatPolicySettingService.DeleteChatPolicySettingById:input_type -> proto.chatPolicySetting.DeleteChatPolicySettingRequest
	2,  // 9: proto.chatPolicySetting.ChatPolicySettingService.GetChatPolicySettings:output_type -> proto.chatPolicySetting.GetChatPolicySettingsResponse
	4,  // 10: proto.chatPolicySetting.ChatPolicySettingService.GetChatPolicySettingById:output_type -> proto.chatPolicySetting.GetChatPolicySettingByIdResponse
	6,  // 11: proto.chatPolicySetting.ChatPolicySettingService.InsertChatPolicySetting:output_type -> proto.chatPolicySetting.PostChatPolicySettingResponse
	8,  // 12: proto.chatPolicySetting.ChatPolicySettingService.UpdateChatPolicySettingById:output_type -> proto.chatPolicySetting.PutChatPolicySettingResponse
	10, // 13: proto.chatPolicySetting.ChatPolicySettingService.DeleteChatPolicySettingById:output_type -> proto.chatPolicySetting.DeleteChatPolicySettingResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_chat_policy_setting_chat_policy_setting_proto_init() }
func file_proto_chat_policy_setting_chat_policy_setting_proto_init() {
	if File_proto_chat_policy_setting_chat_policy_setting_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatPolicySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatPolicySettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatPolicySettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatPolicySettingByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatPolicySettingByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatPolicySettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatPolicySettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatPolicySettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatPolicySettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatPolicySettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatPolicySettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_policy_setting_chat_policy_setting_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_policy_setting_chat_policy_setting_proto_goTypes,
		DependencyIndexes: file_proto_chat_policy_setting_chat_policy_setting_proto_depIdxs,
		MessageInfos:      file_proto_chat_policy_setting_chat_policy_setting_proto_msgTypes,
	}.Build()
	File_proto_chat_policy_setting_chat_policy_setting_proto = out.File
	file_proto_chat_policy_setting_chat_policy_setting_proto_rawDesc = nil
	file_proto_chat_policy_setting_chat_policy_setting_proto_goTypes = nil
	file_proto_chat_policy_setting_chat_policy_setting_proto_depIdxs = nil
}
