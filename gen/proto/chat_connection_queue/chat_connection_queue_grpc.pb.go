// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: proto/chat_connection_queue/chat_connection_queue.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ChatConnectionQueueServiceClient is the client API for ChatConnectionQueueService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ChatConnectionQueueServiceClient interface {
	GetChatConnectionQueueById(ctx context.Context, in *GetChatConnectionQueueByIdRequest, opts ...grpc.CallOption) (*GetChatConnectionQueueByIdResponse, error)
}

type chatConnectionQueueServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewChatConnectionQueueServiceClient(cc grpc.ClientConnInterface) ChatConnectionQueueServiceClient {
	return &chatConnectionQueueServiceClient{cc}
}

func (c *chatConnectionQueueServiceClient) GetChatConnectionQueueById(ctx context.Context, in *GetChatConnectionQueueByIdRequest, opts ...grpc.CallOption) (*GetChatConnectionQueueByIdResponse, error) {
	out := new(GetChatConnectionQueueByIdResponse)
	err := c.cc.Invoke(ctx, "/proto.chatConnectionQueue.ChatConnectionQueueService/GetChatConnectionQueueById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatConnectionQueueServiceServer is the server API for ChatConnectionQueueService service.
// All implementations should embed UnimplementedChatConnectionQueueServiceServer
// for forward compatibility
type ChatConnectionQueueServiceServer interface {
	GetChatConnectionQueueById(context.Context, *GetChatConnectionQueueByIdRequest) (*GetChatConnectionQueueByIdResponse, error)
}

// UnimplementedChatConnectionQueueServiceServer should be embedded to have forward compatible implementations.
type UnimplementedChatConnectionQueueServiceServer struct {
}

func (UnimplementedChatConnectionQueueServiceServer) GetChatConnectionQueueById(context.Context, *GetChatConnectionQueueByIdRequest) (*GetChatConnectionQueueByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChatConnectionQueueById not implemented")
}

// UnsafeChatConnectionQueueServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ChatConnectionQueueServiceServer will
// result in compilation errors.
type UnsafeChatConnectionQueueServiceServer interface {
	mustEmbedUnimplementedChatConnectionQueueServiceServer()
}

func RegisterChatConnectionQueueServiceServer(s grpc.ServiceRegistrar, srv ChatConnectionQueueServiceServer) {
	s.RegisterService(&ChatConnectionQueueService_ServiceDesc, srv)
}

func _ChatConnectionQueueService_GetChatConnectionQueueById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetChatConnectionQueueByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatConnectionQueueServiceServer).GetChatConnectionQueueById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.chatConnectionQueue.ChatConnectionQueueService/GetChatConnectionQueueById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatConnectionQueueServiceServer).GetChatConnectionQueueById(ctx, req.(*GetChatConnectionQueueByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ChatConnectionQueueService_ServiceDesc is the grpc.ServiceDesc for ChatConnectionQueueService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ChatConnectionQueueService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.chatConnectionQueue.ChatConnectionQueueService",
	HandlerType: (*ChatConnectionQueueServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetChatConnectionQueueById",
			Handler:    _ChatConnectionQueueService_GetChatConnectionQueueById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/chat_connection_queue/chat_connection_queue.proto",
}
