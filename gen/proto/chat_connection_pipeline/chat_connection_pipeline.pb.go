// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/chat_connection_pipeline/chat_connection_pipeline.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatConnectionPipelineData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChatConnectionPipelineData) Reset() {
	*x = ChatConnectionPipelineData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionPipelineData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionPipelineData) ProtoMessage() {}

func (x *ChatConnectionPipelineData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionPipelineData.ProtoReflect.Descriptor instead.
func (*ChatConnectionPipelineData) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{0}
}

type OaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zalo     []*ZaloInfo     `protobuf:"bytes,1,rep,name=zalo,proto3" json:"zalo,omitempty"`
	Facebook []*FacebookInfo `protobuf:"bytes,2,rep,name=facebook,proto3" json:"facebook,omitempty"`
}

func (x *OaInfo) Reset() {
	*x = OaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaInfo) ProtoMessage() {}

func (x *OaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaInfo.ProtoReflect.Descriptor instead.
func (*OaInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{1}
}

func (x *OaInfo) GetZalo() []*ZaloInfo {
	if x != nil {
		return x.Zalo
	}
	return nil
}

func (x *OaInfo) GetFacebook() []*FacebookInfo {
	if x != nil {
		return x.Facebook
	}
	return nil
}

type ZaloInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId   string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa  string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ZaloInfo) Reset() {
	*x = ZaloInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZaloInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZaloInfo) ProtoMessage() {}

func (x *ZaloInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZaloInfo.ProtoReflect.Descriptor instead.
func (*ZaloInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{2}
}

func (x *ZaloInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ZaloInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ZaloInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *ZaloInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *ZaloInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FacebookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId        string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName      string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa       string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Avatar      string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Expire      int64  `protobuf:"varint,7,opt,name=expire,proto3" json:"expire,omitempty"`
	Status      string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FacebookInfo) Reset() {
	*x = FacebookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookInfo) ProtoMessage() {}

func (x *FacebookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookInfo.ProtoReflect.Descriptor instead.
func (*FacebookInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{3}
}

func (x *FacebookInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FacebookInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *FacebookInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *FacebookInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *FacebookInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *FacebookInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FacebookInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *FacebookInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// create app
type PostChatConnectionAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConnectionName    string  `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string  `protobuf:"bytes,3,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	QueueId           string  `protobuf:"bytes,4,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	ConnectionQueueId string  `protobuf:"bytes,5,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	OaInfo            *OaInfo `protobuf:"bytes,6,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
	Status            string  `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	ChatAppId         string  `protobuf:"bytes,8,opt,name=chat_app_id,json=chatAppId,proto3" json:"chat_app_id,omitempty"`
}

func (x *PostChatConnectionAppRequest) Reset() {
	*x = PostChatConnectionAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatConnectionAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatConnectionAppRequest) ProtoMessage() {}

func (x *PostChatConnectionAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatConnectionAppRequest.ProtoReflect.Descriptor instead.
func (*PostChatConnectionAppRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{4}
}

func (x *PostChatConnectionAppRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

func (x *PostChatConnectionAppRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetChatAppId() string {
	if x != nil {
		return x.ChatAppId
	}
	return ""
}

// create queue & attach it to app
type ChatConnectionPipelineQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionAppRequest *PostChatConnectionAppRequest `protobuf:"bytes,1,opt,name=connection_app_request,json=connectionAppRequest,proto3" json:"connection_app_request,omitempty"`
	// for selecting existed queue
	ConnectionQueueId string `protobuf:"bytes,2,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	// for creating new queue
	// queue request
	ChatQueue *ChatQueueRequest `protobuf:"bytes,3,opt,name=chat_queue,json=chatQueue,proto3" json:"chat_queue,omitempty"`
	// queue user request
	ChatQueueUser *ChatQueueUserRequest `protobuf:"bytes,4,opt,name=chat_queue_user,json=chatQueueUser,proto3" json:"chat_queue_user,omitempty"`
	// manage queue user request
	ChatManageQueueUser *ChatManageQueueUserRequest `protobuf:"bytes,5,opt,name=chat_manage_queue_user,json=chatManageQueueUser,proto3" json:"chat_manage_queue_user,omitempty"`
}

func (x *ChatConnectionPipelineQueueRequest) Reset() {
	*x = ChatConnectionPipelineQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionPipelineQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionPipelineQueueRequest) ProtoMessage() {}

func (x *ChatConnectionPipelineQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionPipelineQueueRequest.ProtoReflect.Descriptor instead.
func (*ChatConnectionPipelineQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{5}
}

func (x *ChatConnectionPipelineQueueRequest) GetConnectionAppRequest() *PostChatConnectionAppRequest {
	if x != nil {
		return x.ConnectionAppRequest
	}
	return nil
}

func (x *ChatConnectionPipelineQueueRequest) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *ChatConnectionPipelineQueueRequest) GetChatQueue() *ChatQueueRequest {
	if x != nil {
		return x.ChatQueue
	}
	return nil
}

func (x *ChatConnectionPipelineQueueRequest) GetChatQueueUser() *ChatQueueUserRequest {
	if x != nil {
		return x.ChatQueueUser
	}
	return nil
}

func (x *ChatConnectionPipelineQueueRequest) GetChatManageQueueUser() *ChatManageQueueUserRequest {
	if x != nil {
		return x.ChatManageQueueUser
	}
	return nil
}

type ChatManageQueueUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string connection_id = 1;
	// string queue_id = 2;
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsNew  bool   `protobuf:"varint,2,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
}

func (x *ChatManageQueueUserRequest) Reset() {
	*x = ChatManageQueueUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatManageQueueUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatManageQueueUserRequest) ProtoMessage() {}

func (x *ChatManageQueueUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatManageQueueUserRequest.ProtoReflect.Descriptor instead.
func (*ChatManageQueueUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{6}
}

func (x *ChatManageQueueUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatManageQueueUserRequest) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

type ChatQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName   string `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// repeated string connection_id = 3;
	ChatRoutingId string `protobuf:"bytes,3,opt,name=chat_routing_id,json=chatRoutingId,proto3" json:"chat_routing_id,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChatQueueRequest) Reset() {
	*x = ChatQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatQueueRequest) ProtoMessage() {}

func (x *ChatQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatQueueRequest.ProtoReflect.Descriptor instead.
func (*ChatQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{7}
}

func (x *ChatQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ChatQueueRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChatQueueRequest) GetChatRoutingId() string {
	if x != nil {
		return x.ChatRoutingId
	}
	return ""
}

func (x *ChatQueueRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ChatQueueUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string queue_id = 1;
	UserId []string `protobuf:"bytes,1,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ChatQueueUserRequest) Reset() {
	*x = ChatQueueUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatQueueUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatQueueUserRequest) ProtoMessage() {}

func (x *ChatQueueUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatQueueUserRequest.ProtoReflect.Descriptor instead.
func (*ChatQueueUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{8}
}

func (x *ChatQueueUserRequest) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

type ChatConnectionPipelineQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ChatConnectionPipelineQueueResponse) Reset() {
	*x = ChatConnectionPipelineQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionPipelineQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionPipelineQueueResponse) ProtoMessage() {}

func (x *ChatConnectionPipelineQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionPipelineQueueResponse.ProtoReflect.Descriptor instead.
func (*ChatConnectionPipelineQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{9}
}

func (x *ChatConnectionPipelineQueueResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ChatConnectionPipelineQueueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatConnectionPipelineQueueResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// edit queue in c.app
type UpsertQueueInConnectionAppByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// for selecting existed queue
	ConnectionQueueId string `protobuf:"bytes,2,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	// for creating new queue
	// queue request
	ChatQueue *ChatQueueRequest `protobuf:"bytes,3,opt,name=chat_queue,json=chatQueue,proto3" json:"chat_queue,omitempty"`
	// queue user request
	ChatQueueUser *ChatQueueUserRequest `protobuf:"bytes,4,opt,name=chat_queue_user,json=chatQueueUser,proto3" json:"chat_queue_user,omitempty"`
	// manage queue user request
	ChatManageQueueUser *ChatManageQueueUserRequest `protobuf:"bytes,5,opt,name=chat_manage_queue_user,json=chatManageQueueUser,proto3" json:"chat_manage_queue_user,omitempty"`
}

func (x *UpsertQueueInConnectionAppByIdRequest) Reset() {
	*x = UpsertQueueInConnectionAppByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertQueueInConnectionAppByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertQueueInConnectionAppByIdRequest) ProtoMessage() {}

func (x *UpsertQueueInConnectionAppByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertQueueInConnectionAppByIdRequest.ProtoReflect.Descriptor instead.
func (*UpsertQueueInConnectionAppByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{10}
}

func (x *UpsertQueueInConnectionAppByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpsertQueueInConnectionAppByIdRequest) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *UpsertQueueInConnectionAppByIdRequest) GetChatQueue() *ChatQueueRequest {
	if x != nil {
		return x.ChatQueue
	}
	return nil
}

func (x *UpsertQueueInConnectionAppByIdRequest) GetChatQueueUser() *ChatQueueUserRequest {
	if x != nil {
		return x.ChatQueueUser
	}
	return nil
}

func (x *UpsertQueueInConnectionAppByIdRequest) GetChatManageQueueUser() *ChatManageQueueUserRequest {
	if x != nil {
		return x.ChatManageQueueUser
	}
	return nil
}

type UpsertQueueInConnectionAppByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpsertQueueInConnectionAppByIdResponse) Reset() {
	*x = UpsertQueueInConnectionAppByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertQueueInConnectionAppByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertQueueInConnectionAppByIdResponse) ProtoMessage() {}

func (x *UpsertQueueInConnectionAppByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertQueueInConnectionAppByIdResponse.ProtoReflect.Descriptor instead.
func (*UpsertQueueInConnectionAppByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{11}
}

func (x *UpsertQueueInConnectionAppByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpsertQueueInConnectionAppByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// update connection app status by id
type PutChatConnectionAppStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PutChatConnectionAppStatusRequest) Reset() {
	*x = PutChatConnectionAppStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatConnectionAppStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatConnectionAppStatusRequest) ProtoMessage() {}

func (x *PutChatConnectionAppStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatConnectionAppStatusRequest.ProtoReflect.Descriptor instead.
func (*PutChatConnectionAppStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{12}
}

func (x *PutChatConnectionAppStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatConnectionAppStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PutChatConnectionAppStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatConnectionAppStatusResponse) Reset() {
	*x = PutChatConnectionAppStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatConnectionAppStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatConnectionAppStatusResponse) ProtoMessage() {}

func (x *PutChatConnectionAppStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatConnectionAppStatusResponse.ProtoReflect.Descriptor instead.
func (*PutChatConnectionAppStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP(), []int{13}
}

func (x *PutChatConnectionAppStatusResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChatConnectionAppStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_connection_pipeline_chat_connection_pipeline_proto protoreflect.FileDescriptor

var file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8c, 0x01, 0x0a, 0x06, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x3a, 0x0a, 0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x5a, 0x61,
	0x6c, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x12, 0x46, 0x0a, 0x08,
	0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x46, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x7e, 0x0a, 0x08, 0x5a, 0x61, 0x6c, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05,
	0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x72,
	0x6c, 0x5f, 0x6f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f,
	0x61, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc2, 0x02, 0x0a,
	0x1c, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x07, 0x6f, 0x61,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x4f, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x06, 0x6f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x49,
	0x64, 0x22, 0xe0, 0x03, 0x0a, 0x22, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x70, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x6d, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x13, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e,
	0x65, 0x77, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x23, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x81,
	0x03, 0x0a, 0x25, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x6e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x6d, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x56, 0x0a, 0x26, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x21, 0x50, 0x75,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x52, 0x0a, 0x22, 0x50, 0x75, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xcb, 0x05, 0x0a, 0x1d,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xd3, 0x01,
	0x0a, 0x1a, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x6f, 0x41, 0x70, 0x70, 0x12, 0x40, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x62,
	0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x12, 0xe7, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x62,
	0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xe9, 0x01,
	0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x79, 0x49, 0x64, 0x12, 0x3f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x3a, 0x01,
	0x2a, 0x22, 0x36, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x2f, 0x65, 0x64, 0x69, 0x74, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x66,
	0x69, 0x6e, 0x73, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescOnce sync.Once
	file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescData = file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDesc
)

func file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescGZIP() []byte {
	file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescOnce.Do(func() {
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescData)
	})
	return file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDescData
}

var file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_goTypes = []any{
	(*ChatConnectionPipelineData)(nil),             // 0: proto.chatConnectionPipeline.ChatConnectionPipelineData
	(*OaInfo)(nil),                                 // 1: proto.chatConnectionPipeline.OaInfo
	(*ZaloInfo)(nil),                               // 2: proto.chatConnectionPipeline.ZaloInfo
	(*FacebookInfo)(nil),                           // 3: proto.chatConnectionPipeline.FacebookInfo
	(*PostChatConnectionAppRequest)(nil),           // 4: proto.chatConnectionPipeline.PostChatConnectionAppRequest
	(*ChatConnectionPipelineQueueRequest)(nil),     // 5: proto.chatConnectionPipeline.ChatConnectionPipelineQueueRequest
	(*ChatManageQueueUserRequest)(nil),             // 6: proto.chatConnectionPipeline.ChatManageQueueUserRequest
	(*ChatQueueRequest)(nil),                       // 7: proto.chatConnectionPipeline.ChatQueueRequest
	(*ChatQueueUserRequest)(nil),                   // 8: proto.chatConnectionPipeline.ChatQueueUserRequest
	(*ChatConnectionPipelineQueueResponse)(nil),    // 9: proto.chatConnectionPipeline.ChatConnectionPipelineQueueResponse
	(*UpsertQueueInConnectionAppByIdRequest)(nil),  // 10: proto.chatConnectionPipeline.UpsertQueueInConnectionAppByIdRequest
	(*UpsertQueueInConnectionAppByIdResponse)(nil), // 11: proto.chatConnectionPipeline.UpsertQueueInConnectionAppByIdResponse
	(*PutChatConnectionAppStatusRequest)(nil),      // 12: proto.chatConnectionPipeline.PutChatConnectionAppStatusRequest
	(*PutChatConnectionAppStatusResponse)(nil),     // 13: proto.chatConnectionPipeline.PutChatConnectionAppStatusResponse
}
var file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_depIdxs = []int32{
	2,  // 0: proto.chatConnectionPipeline.OaInfo.zalo:type_name -> proto.chatConnectionPipeline.ZaloInfo
	3,  // 1: proto.chatConnectionPipeline.OaInfo.facebook:type_name -> proto.chatConnectionPipeline.FacebookInfo
	1,  // 2: proto.chatConnectionPipeline.PostChatConnectionAppRequest.oa_info:type_name -> proto.chatConnectionPipeline.OaInfo
	4,  // 3: proto.chatConnectionPipeline.ChatConnectionPipelineQueueRequest.connection_app_request:type_name -> proto.chatConnectionPipeline.PostChatConnectionAppRequest
	7,  // 4: proto.chatConnectionPipeline.ChatConnectionPipelineQueueRequest.chat_queue:type_name -> proto.chatConnectionPipeline.ChatQueueRequest
	8,  // 5: proto.chatConnectionPipeline.ChatConnectionPipelineQueueRequest.chat_queue_user:type_name -> proto.chatConnectionPipeline.ChatQueueUserRequest
	6,  // 6: proto.chatConnectionPipeline.ChatConnectionPipelineQueueRequest.chat_manage_queue_user:type_name -> proto.chatConnectionPipeline.ChatManageQueueUserRequest
	7,  // 7: proto.chatConnectionPipeline.UpsertQueueInConnectionAppByIdRequest.chat_queue:type_name -> proto.chatConnectionPipeline.ChatQueueRequest
	8,  // 8: proto.chatConnectionPipeline.UpsertQueueInConnectionAppByIdRequest.chat_queue_user:type_name -> proto.chatConnectionPipeline.ChatQueueUserRequest
	6,  // 9: proto.chatConnectionPipeline.UpsertQueueInConnectionAppByIdRequest.chat_manage_queue_user:type_name -> proto.chatConnectionPipeline.ChatManageQueueUserRequest
	5,  // 10: proto.chatConnectionPipeline.ChatConnectionPipelineService.AttachConnectionQueueToApp:input_type -> proto.chatConnectionPipeline.ChatConnectionPipelineQueueRequest
	10, // 11: proto.chatConnectionPipeline.ChatConnectionPipelineService.UpsertQueueInConnectionAppById:input_type -> proto.chatConnectionPipeline.UpsertQueueInConnectionAppByIdRequest
	12, // 12: proto.chatConnectionPipeline.ChatConnectionPipelineService.UpdateChatConnectionAppStatusById:input_type -> proto.chatConnectionPipeline.PutChatConnectionAppStatusRequest
	9,  // 13: proto.chatConnectionPipeline.ChatConnectionPipelineService.AttachConnectionQueueToApp:output_type -> proto.chatConnectionPipeline.ChatConnectionPipelineQueueResponse
	11, // 14: proto.chatConnectionPipeline.ChatConnectionPipelineService.UpsertQueueInConnectionAppById:output_type -> proto.chatConnectionPipeline.UpsertQueueInConnectionAppByIdResponse
	13, // 15: proto.chatConnectionPipeline.ChatConnectionPipelineService.UpdateChatConnectionAppStatusById:output_type -> proto.chatConnectionPipeline.PutChatConnectionAppStatusResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_init() }
func file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_init() {
	if File_proto_chat_connection_pipeline_chat_connection_pipeline_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ChatConnectionPipelineData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*OaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ZaloInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FacebookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PostChatConnectionAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ChatConnectionPipelineQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ChatManageQueueUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ChatQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ChatQueueUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ChatConnectionPipelineQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertQueueInConnectionAppByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertQueueInConnectionAppByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PutChatConnectionAppStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PutChatConnectionAppStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_goTypes,
		DependencyIndexes: file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_depIdxs,
		MessageInfos:      file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_msgTypes,
	}.Build()
	File_proto_chat_connection_pipeline_chat_connection_pipeline_proto = out.File
	file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_rawDesc = nil
	file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_goTypes = nil
	file_proto_chat_connection_pipeline_chat_connection_pipeline_proto_depIdxs = nil
}
