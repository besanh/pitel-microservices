// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/chat_script/chat_script.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatScriptData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId      string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ScriptName    string                 `protobuf:"bytes,5,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	ScriptType    string                 `protobuf:"bytes,7,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	FileUrl       string                 `protobuf:"bytes,8,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	Channel       string                 `protobuf:"bytes,9,opt,name=channel,proto3" json:"channel,omitempty"`
	Content       string                 `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy     string                 `protobuf:"bytes,12,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	OtherScriptId string                 `protobuf:"bytes,13,opt,name=other_script_id,json=otherScriptId,proto3" json:"other_script_id,omitempty"`
	ConnectionId  string                 `protobuf:"bytes,14,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ConnectionApp *ChatConnectionAppData `protobuf:"bytes,15,opt,name=connection_app,json=connectionApp,proto3" json:"connection_app,omitempty"`
}

func (x *ChatScriptData) Reset() {
	*x = ChatScriptData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatScriptData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatScriptData) ProtoMessage() {}

func (x *ChatScriptData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatScriptData.ProtoReflect.Descriptor instead.
func (*ChatScriptData) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{0}
}

func (x *ChatScriptData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatScriptData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatScriptData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatScriptData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatScriptData) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *ChatScriptData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatScriptData) GetScriptType() string {
	if x != nil {
		return x.ScriptType
	}
	return ""
}

func (x *ChatScriptData) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *ChatScriptData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChatScriptData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatScriptData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ChatScriptData) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *ChatScriptData) GetOtherScriptId() string {
	if x != nil {
		return x.OtherScriptId
	}
	return ""
}

func (x *ChatScriptData) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ChatScriptData) GetConnectionApp() *ChatConnectionAppData {
	if x != nil {
		return x.ConnectionApp
	}
	return nil
}

type ChatConnectionAppData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId          string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ConnectionName    string                 `protobuf:"bytes,5,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string                 `protobuf:"bytes,6,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	AppId             string                 `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Status            string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	ConnectionQueueId string                 `protobuf:"bytes,9,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	OaInfo            *OaInfo                `protobuf:"bytes,10,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
}

func (x *ChatConnectionAppData) Reset() {
	*x = ChatConnectionAppData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionAppData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionAppData) ProtoMessage() {}

func (x *ChatConnectionAppData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionAppData.ProtoReflect.Descriptor instead.
func (*ChatConnectionAppData) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{1}
}

func (x *ChatConnectionAppData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatConnectionAppData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatConnectionAppData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatConnectionAppData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatConnectionAppData) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *ChatConnectionAppData) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *ChatConnectionAppData) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ChatConnectionAppData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatConnectionAppData) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *ChatConnectionAppData) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

type ZaloInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId              string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId               string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName             string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa              string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Avatar             string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Cover              string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	CateName           string `protobuf:"bytes,7,opt,name=cate_name,json=cateName,proto3" json:"cate_name,omitempty"`
	Status             string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	AccessToken        string `protobuf:"bytes,9,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Expire             int64  `protobuf:"varint,10,opt,name=expire,proto3" json:"expire,omitempty"`
	TokenCreatedAt     string `protobuf:"bytes,11,opt,name=token_created_at,json=tokenCreatedAt,proto3" json:"token_created_at,omitempty"`
	TokenExpiresIn     int64  `protobuf:"varint,12,opt,name=token_expires_in,json=tokenExpiresIn,proto3" json:"token_expires_in,omitempty"`
	TokenTimeRemaining int64  `protobuf:"varint,13,opt,name=token_time_remaining,json=tokenTimeRemaining,proto3" json:"token_time_remaining,omitempty"`
	CreatedTimestamp   int64  `protobuf:"varint,14,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	UpdatedTimestamp   int64  `protobuf:"varint,15,opt,name=updated_timestamp,json=updatedTimestamp,proto3" json:"updated_timestamp,omitempty"`
	IsNotify           bool   `protobuf:"varint,16,opt,name=is_notify,json=isNotify,proto3" json:"is_notify,omitempty"`
}

func (x *ZaloInfo) Reset() {
	*x = ZaloInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZaloInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZaloInfo) ProtoMessage() {}

func (x *ZaloInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZaloInfo.ProtoReflect.Descriptor instead.
func (*ZaloInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{2}
}

func (x *ZaloInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ZaloInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ZaloInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *ZaloInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *ZaloInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ZaloInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ZaloInfo) GetCateName() string {
	if x != nil {
		return x.CateName
	}
	return ""
}

func (x *ZaloInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ZaloInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ZaloInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *ZaloInfo) GetTokenCreatedAt() string {
	if x != nil {
		return x.TokenCreatedAt
	}
	return ""
}

func (x *ZaloInfo) GetTokenExpiresIn() int64 {
	if x != nil {
		return x.TokenExpiresIn
	}
	return 0
}

func (x *ZaloInfo) GetTokenTimeRemaining() int64 {
	if x != nil {
		return x.TokenTimeRemaining
	}
	return 0
}

func (x *ZaloInfo) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *ZaloInfo) GetUpdatedTimestamp() int64 {
	if x != nil {
		return x.UpdatedTimestamp
	}
	return 0
}

func (x *ZaloInfo) GetIsNotify() bool {
	if x != nil {
		return x.IsNotify
	}
	return false
}

type FacebookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId              string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId               string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName             string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa              string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Avatar             string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Cover              string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	AccessToken        string `protobuf:"bytes,7,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Expire             int64  `protobuf:"varint,8,opt,name=expire,proto3" json:"expire,omitempty"`
	TokenCreatedAt     string `protobuf:"bytes,9,opt,name=token_created_at,json=tokenCreatedAt,proto3" json:"token_created_at,omitempty"`
	TokenExpiresIn     int64  `protobuf:"varint,10,opt,name=token_expires_in,json=tokenExpiresIn,proto3" json:"token_expires_in,omitempty"`
	TokenTimeRemaining int64  `protobuf:"varint,11,opt,name=token_time_remaining,json=tokenTimeRemaining,proto3" json:"token_time_remaining,omitempty"`
	Status             string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	CreatedTimestamp   int64  `protobuf:"varint,13,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	UpdatedTimestamp   int64  `protobuf:"varint,14,opt,name=updated_timestamp,json=updatedTimestamp,proto3" json:"updated_timestamp,omitempty"`
	IsNotify           bool   `protobuf:"varint,15,opt,name=is_notify,json=isNotify,proto3" json:"is_notify,omitempty"`
}

func (x *FacebookInfo) Reset() {
	*x = FacebookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookInfo) ProtoMessage() {}

func (x *FacebookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookInfo.ProtoReflect.Descriptor instead.
func (*FacebookInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{3}
}

func (x *FacebookInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FacebookInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *FacebookInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *FacebookInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *FacebookInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FacebookInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *FacebookInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *FacebookInfo) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *FacebookInfo) GetTokenCreatedAt() string {
	if x != nil {
		return x.TokenCreatedAt
	}
	return ""
}

func (x *FacebookInfo) GetTokenExpiresIn() int64 {
	if x != nil {
		return x.TokenExpiresIn
	}
	return 0
}

func (x *FacebookInfo) GetTokenTimeRemaining() int64 {
	if x != nil {
		return x.TokenTimeRemaining
	}
	return 0
}

func (x *FacebookInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FacebookInfo) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *FacebookInfo) GetUpdatedTimestamp() int64 {
	if x != nil {
		return x.UpdatedTimestamp
	}
	return 0
}

func (x *FacebookInfo) GetIsNotify() bool {
	if x != nil {
		return x.IsNotify
	}
	return false
}

type OaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zalo     []*ZaloInfo     `protobuf:"bytes,1,rep,name=zalo,proto3" json:"zalo,omitempty"`
	Facebook []*FacebookInfo `protobuf:"bytes,2,rep,name=facebook,proto3" json:"facebook,omitempty"`
}

func (x *OaInfo) Reset() {
	*x = OaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaInfo) ProtoMessage() {}

func (x *OaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaInfo.ProtoReflect.Descriptor instead.
func (*OaInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{4}
}

func (x *OaInfo) GetZalo() []*ZaloInfo {
	if x != nil {
		return x.Zalo
	}
	return nil
}

func (x *OaInfo) GetFacebook() []*FacebookInfo {
	if x != nil {
		return x.Facebook
	}
	return nil
}

// get chat scripts
type GetChatScriptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	ScriptName string `protobuf:"bytes,2,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Channel    string `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Limit      int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     int32  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatScriptsRequest) Reset() {
	*x = GetChatScriptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatScriptsRequest) ProtoMessage() {}

func (x *GetChatScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatScriptsRequest.ProtoReflect.Descriptor instead.
func (*GetChatScriptsRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{5}
}

func (x *GetChatScriptsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetChatScriptsRequest) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *GetChatScriptsRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GetChatScriptsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatScriptsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetChatScriptsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string            `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChatScriptData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32             `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Limit   int32             `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32             `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatScriptsResponse) Reset() {
	*x = GetChatScriptsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatScriptsResponse) ProtoMessage() {}

func (x *GetChatScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatScriptsResponse.ProtoReflect.Descriptor instead.
func (*GetChatScriptsResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{6}
}

func (x *GetChatScriptsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatScriptsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatScriptsResponse) GetData() []*ChatScriptData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChatScriptsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChatScriptsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatScriptsResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// get script by id
type GetScriptByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetScriptByIdRequest) Reset() {
	*x = GetScriptByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptByIdRequest) ProtoMessage() {}

func (x *GetScriptByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptByIdRequest.ProtoReflect.Descriptor instead.
func (*GetScriptByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{7}
}

func (x *GetScriptByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetScriptByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string          `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ChatScriptData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetScriptByIdResponse) Reset() {
	*x = GetScriptByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetScriptByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScriptByIdResponse) ProtoMessage() {}

func (x *GetScriptByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScriptByIdResponse.ProtoReflect.Descriptor instead.
func (*GetScriptByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{8}
}

func (x *GetScriptByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetScriptByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetScriptByIdResponse) GetData() *ChatScriptData {
	if x != nil {
		return x.Data
	}
	return nil
}

// create script
type PostChatScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScriptName    string `protobuf:"bytes,1,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Status        string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ScriptType    string `protobuf:"bytes,3,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	Channel       string `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Content       string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	OtherScriptId string `protobuf:"bytes,6,opt,name=other_script_id,json=otherScriptId,proto3" json:"other_script_id,omitempty"`
}

func (x *PostChatScriptRequest) Reset() {
	*x = PostChatScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatScriptRequest) ProtoMessage() {}

func (x *PostChatScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatScriptRequest.ProtoReflect.Descriptor instead.
func (*PostChatScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{9}
}

func (x *PostChatScriptRequest) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *PostChatScriptRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PostChatScriptRequest) GetScriptType() string {
	if x != nil {
		return x.ScriptType
	}
	return ""
}

func (x *PostChatScriptRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PostChatScriptRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostChatScriptRequest) GetOtherScriptId() string {
	if x != nil {
		return x.OtherScriptId
	}
	return ""
}

type PostChatScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostChatScriptResponse) Reset() {
	*x = PostChatScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatScriptResponse) ProtoMessage() {}

func (x *PostChatScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatScriptResponse.ProtoReflect.Descriptor instead.
func (*PostChatScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{10}
}

func (x *PostChatScriptResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostChatScriptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PostChatScriptResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// update script by id
type PutChatScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ScriptName    string `protobuf:"bytes,2,opt,name=script_name,json=scriptName,proto3" json:"script_name,omitempty"`
	Status        string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	ScriptType    string `protobuf:"bytes,4,opt,name=script_type,json=scriptType,proto3" json:"script_type,omitempty"`
	Channel       string `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Content       string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	OtherScriptId string `protobuf:"bytes,7,opt,name=other_script_id,json=otherScriptId,proto3" json:"other_script_id,omitempty"`
}

func (x *PutChatScriptRequest) Reset() {
	*x = PutChatScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatScriptRequest) ProtoMessage() {}

func (x *PutChatScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatScriptRequest.ProtoReflect.Descriptor instead.
func (*PutChatScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{11}
}

func (x *PutChatScriptRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatScriptRequest) GetScriptName() string {
	if x != nil {
		return x.ScriptName
	}
	return ""
}

func (x *PutChatScriptRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PutChatScriptRequest) GetScriptType() string {
	if x != nil {
		return x.ScriptType
	}
	return ""
}

func (x *PutChatScriptRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PutChatScriptRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PutChatScriptRequest) GetOtherScriptId() string {
	if x != nil {
		return x.OtherScriptId
	}
	return ""
}

type PutChatScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatScriptResponse) Reset() {
	*x = PutChatScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatScriptResponse) ProtoMessage() {}

func (x *PutChatScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatScriptResponse.ProtoReflect.Descriptor instead.
func (*PutChatScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{12}
}

func (x *PutChatScriptResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChatScriptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// update script status by id
type PutChatScriptStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PutChatScriptStatusRequest) Reset() {
	*x = PutChatScriptStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatScriptStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatScriptStatusRequest) ProtoMessage() {}

func (x *PutChatScriptStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatScriptStatusRequest.ProtoReflect.Descriptor instead.
func (*PutChatScriptStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{13}
}

func (x *PutChatScriptStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatScriptStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// delete script by id
type DeleteChatScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChatScriptRequest) Reset() {
	*x = DeleteChatScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatScriptRequest) ProtoMessage() {}

func (x *DeleteChatScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatScriptRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteChatScriptRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteChatScriptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteChatScriptResponse) Reset() {
	*x = DeleteChatScriptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_script_chat_script_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatScriptResponse) ProtoMessage() {}

func (x *DeleteChatScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_script_chat_script_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatScriptResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_script_chat_script_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteChatScriptResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteChatScriptResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_script_chat_script_proto protoreflect.FileDescriptor

var file_proto_chat_script_chat_script_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xb7, 0x04, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x26,
	0x0a, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x22, 0x9e, 0x03, 0x0a, 0x15,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x61, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x4f, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x81, 0x04, 0x0a,
	0x08, 0x5a, 0x61, 0x6c, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a,
	0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x69,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x22, 0xe8, 0x03, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x28, 0x0a, 0x10, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x22, 0x74, 0x0a, 0x06, 0x4f,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x5a, 0x61, 0x6c, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xc0, 0x01, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x26, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x7b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xcd, 0x01, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xdc, 0x01, 0x0a,
	0x14, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x15, 0x50,
	0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x44, 0x0a, 0x1a, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x48, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x88, 0x07,
	0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x12, 0x18, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x2d, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x8b, 0x01, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x62, 0x73, 0x73,
	0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x10, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x27,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x62,
	0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x91, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x1a, 0x1d, 0x2f, 0x62, 0x73,
	0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa4, 0x01, 0x0a, 0x1a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x50, 0x75, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x1a, 0x24, 0x2f, 0x62, 0x73,
	0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x94, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x62, 0x73, 0x73, 0x2d,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x66, 0x69,
	0x6e, 0x73, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_script_chat_script_proto_rawDescOnce sync.Once
	file_proto_chat_script_chat_script_proto_rawDescData = file_proto_chat_script_chat_script_proto_rawDesc
)

func file_proto_chat_script_chat_script_proto_rawDescGZIP() []byte {
	file_proto_chat_script_chat_script_proto_rawDescOnce.Do(func() {
		file_proto_chat_script_chat_script_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_script_chat_script_proto_rawDescData)
	})
	return file_proto_chat_script_chat_script_proto_rawDescData
}

var file_proto_chat_script_chat_script_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_chat_script_chat_script_proto_goTypes = []any{
	(*ChatScriptData)(nil),             // 0: proto.chatScript.ChatScriptData
	(*ChatConnectionAppData)(nil),      // 1: proto.chatScript.ChatConnectionAppData
	(*ZaloInfo)(nil),                   // 2: proto.chatScript.ZaloInfo
	(*FacebookInfo)(nil),               // 3: proto.chatScript.FacebookInfo
	(*OaInfo)(nil),                     // 4: proto.chatScript.OaInfo
	(*GetChatScriptsRequest)(nil),      // 5: proto.chatScript.GetChatScriptsRequest
	(*GetChatScriptsResponse)(nil),     // 6: proto.chatScript.GetChatScriptsResponse
	(*GetScriptByIdRequest)(nil),       // 7: proto.chatScript.GetScriptByIdRequest
	(*GetScriptByIdResponse)(nil),      // 8: proto.chatScript.GetScriptByIdResponse
	(*PostChatScriptRequest)(nil),      // 9: proto.chatScript.PostChatScriptRequest
	(*PostChatScriptResponse)(nil),     // 10: proto.chatScript.PostChatScriptResponse
	(*PutChatScriptRequest)(nil),       // 11: proto.chatScript.PutChatScriptRequest
	(*PutChatScriptResponse)(nil),      // 12: proto.chatScript.PutChatScriptResponse
	(*PutChatScriptStatusRequest)(nil), // 13: proto.chatScript.PutChatScriptStatusRequest
	(*DeleteChatScriptRequest)(nil),    // 14: proto.chatScript.DeleteChatScriptRequest
	(*DeleteChatScriptResponse)(nil),   // 15: proto.chatScript.DeleteChatScriptResponse
	(*timestamppb.Timestamp)(nil),      // 16: google.protobuf.Timestamp
}
var file_proto_chat_script_chat_script_proto_depIdxs = []int32{
	16, // 0: proto.chatScript.ChatScriptData.created_at:type_name -> google.protobuf.Timestamp
	16, // 1: proto.chatScript.ChatScriptData.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: proto.chatScript.ChatScriptData.connection_app:type_name -> proto.chatScript.ChatConnectionAppData
	16, // 3: proto.chatScript.ChatConnectionAppData.created_at:type_name -> google.protobuf.Timestamp
	16, // 4: proto.chatScript.ChatConnectionAppData.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 5: proto.chatScript.ChatConnectionAppData.oa_info:type_name -> proto.chatScript.OaInfo
	2,  // 6: proto.chatScript.OaInfo.zalo:type_name -> proto.chatScript.ZaloInfo
	3,  // 7: proto.chatScript.OaInfo.facebook:type_name -> proto.chatScript.FacebookInfo
	0,  // 8: proto.chatScript.GetChatScriptsResponse.data:type_name -> proto.chatScript.ChatScriptData
	0,  // 9: proto.chatScript.GetScriptByIdResponse.data:type_name -> proto.chatScript.ChatScriptData
	5,  // 10: proto.chatScript.ChatScriptService.GetChatScripts:input_type -> proto.chatScript.GetChatScriptsRequest
	7,  // 11: proto.chatScript.ChatScriptService.GetChatScriptById:input_type -> proto.chatScript.GetScriptByIdRequest
	9,  // 12: proto.chatScript.ChatScriptService.InsertChatScript:input_type -> proto.chatScript.PostChatScriptRequest
	11, // 13: proto.chatScript.ChatScriptService.UpdateChatScriptById:input_type -> proto.chatScript.PutChatScriptRequest
	13, // 14: proto.chatScript.ChatScriptService.UpdateChatScriptStatusById:input_type -> proto.chatScript.PutChatScriptStatusRequest
	14, // 15: proto.chatScript.ChatScriptService.DeleteChatScriptById:input_type -> proto.chatScript.DeleteChatScriptRequest
	6,  // 16: proto.chatScript.ChatScriptService.GetChatScripts:output_type -> proto.chatScript.GetChatScriptsResponse
	8,  // 17: proto.chatScript.ChatScriptService.GetChatScriptById:output_type -> proto.chatScript.GetScriptByIdResponse
	10, // 18: proto.chatScript.ChatScriptService.InsertChatScript:output_type -> proto.chatScript.PostChatScriptResponse
	12, // 19: proto.chatScript.ChatScriptService.UpdateChatScriptById:output_type -> proto.chatScript.PutChatScriptResponse
	12, // 20: proto.chatScript.ChatScriptService.UpdateChatScriptStatusById:output_type -> proto.chatScript.PutChatScriptResponse
	15, // 21: proto.chatScript.ChatScriptService.DeleteChatScriptById:output_type -> proto.chatScript.DeleteChatScriptResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_chat_script_chat_script_proto_init() }
func file_proto_chat_script_chat_script_proto_init() {
	if File_proto_chat_script_chat_script_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_script_chat_script_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ChatScriptData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ChatConnectionAppData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ZaloInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FacebookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*OaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatScriptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatScriptsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetScriptByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetScriptByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*PostChatScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*PostChatScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*PutChatScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*PutChatScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PutChatScriptStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteChatScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_script_chat_script_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteChatScriptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_script_chat_script_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_script_chat_script_proto_goTypes,
		DependencyIndexes: file_proto_chat_script_chat_script_proto_depIdxs,
		MessageInfos:      file_proto_chat_script_chat_script_proto_msgTypes,
	}.Build()
	File_proto_chat_script_chat_script_proto = out.File
	file_proto_chat_script_chat_script_proto_rawDesc = nil
	file_proto_chat_script_chat_script_proto_goTypes = nil
	file_proto_chat_script_chat_script_proto_depIdxs = nil
}
