// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/chat_message_sample/chat_message_sample.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatMessageSampleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId      string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Keyword       string                 `protobuf:"bytes,5,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Theme         string                 `protobuf:"bytes,6,opt,name=theme,proto3" json:"theme,omitempty"`
	ConnectionId  string                 `protobuf:"bytes,7,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ConnectionApp *ChatConnectionApp     `protobuf:"bytes,8,opt,name=connection_app,json=connectionApp,proto3" json:"connection_app,omitempty"`
	Channel       string                 `protobuf:"bytes,9,opt,name=channel,proto3" json:"channel,omitempty"`
	Content       string                 `protobuf:"bytes,10,opt,name=content,proto3" json:"content,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy     string                 `protobuf:"bytes,12,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,13,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *ChatMessageSampleData) Reset() {
	*x = ChatMessageSampleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessageSampleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageSampleData) ProtoMessage() {}

func (x *ChatMessageSampleData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageSampleData.ProtoReflect.Descriptor instead.
func (*ChatMessageSampleData) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessageSampleData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatMessageSampleData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatMessageSampleData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatMessageSampleData) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatMessageSampleData) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *ChatMessageSampleData) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *ChatMessageSampleData) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ChatMessageSampleData) GetConnectionApp() *ChatConnectionApp {
	if x != nil {
		return x.ConnectionApp
	}
	return nil
}

func (x *ChatMessageSampleData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChatMessageSampleData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessageSampleData) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ChatMessageSampleData) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *ChatMessageSampleData) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type ChatConnectionApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId          string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ConnectionName    string                 `protobuf:"bytes,5,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string                 `protobuf:"bytes,6,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	ChatAppId         string                 `protobuf:"bytes,7,opt,name=chat_app_id,json=chatAppId,proto3" json:"chat_app_id,omitempty"`
	ConnectionQueueId string                 `protobuf:"bytes,8,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	OaInfo            *OaInfo                `protobuf:"bytes,9,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
	Status            string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChatConnectionApp) Reset() {
	*x = ChatConnectionApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionApp) ProtoMessage() {}

func (x *ChatConnectionApp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionApp.ProtoReflect.Descriptor instead.
func (*ChatConnectionApp) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{1}
}

func (x *ChatConnectionApp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatConnectionApp) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatConnectionApp) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatConnectionApp) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatConnectionApp) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *ChatConnectionApp) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *ChatConnectionApp) GetChatAppId() string {
	if x != nil {
		return x.ChatAppId
	}
	return ""
}

func (x *ChatConnectionApp) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *ChatConnectionApp) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

func (x *ChatConnectionApp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type OaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zalo     []*ZaloInfo     `protobuf:"bytes,1,rep,name=zalo,proto3" json:"zalo,omitempty"`
	Facebook []*FacebookInfo `protobuf:"bytes,2,rep,name=facebook,proto3" json:"facebook,omitempty"`
}

func (x *OaInfo) Reset() {
	*x = OaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaInfo) ProtoMessage() {}

func (x *OaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaInfo.ProtoReflect.Descriptor instead.
func (*OaInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{2}
}

func (x *OaInfo) GetZalo() []*ZaloInfo {
	if x != nil {
		return x.Zalo
	}
	return nil
}

func (x *OaInfo) GetFacebook() []*FacebookInfo {
	if x != nil {
		return x.Facebook
	}
	return nil
}

type ZaloInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId   string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa  string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ZaloInfo) Reset() {
	*x = ZaloInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZaloInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZaloInfo) ProtoMessage() {}

func (x *ZaloInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZaloInfo.ProtoReflect.Descriptor instead.
func (*ZaloInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{3}
}

func (x *ZaloInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ZaloInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ZaloInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *ZaloInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *ZaloInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FacebookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId   string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa  string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Avatar string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FacebookInfo) Reset() {
	*x = FacebookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookInfo) ProtoMessage() {}

func (x *FacebookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookInfo.ProtoReflect.Descriptor instead.
func (*FacebookInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{4}
}

func (x *FacebookInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FacebookInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *FacebookInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *FacebookInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *FacebookInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FacebookInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// get chat message samples
type GetChatMessageSamplesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Channel      string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	OaId         string `protobuf:"bytes,3,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	Keyword      string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
	TenantId     string `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Limit        int32  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset       int32  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatMessageSamplesRequest) Reset() {
	*x = GetChatMessageSamplesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatMessageSamplesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatMessageSamplesRequest) ProtoMessage() {}

func (x *GetChatMessageSamplesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatMessageSamplesRequest.ProtoReflect.Descriptor instead.
func (*GetChatMessageSamplesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{5}
}

func (x *GetChatMessageSamplesRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *GetChatMessageSamplesRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *GetChatMessageSamplesRequest) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *GetChatMessageSamplesRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *GetChatMessageSamplesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetChatMessageSamplesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatMessageSamplesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetChatMessageSamplesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string                   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChatMessageSampleData `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32                    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Limit   int32                    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32                    `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatMessageSamplesResponse) Reset() {
	*x = GetChatMessageSamplesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatMessageSamplesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatMessageSamplesResponse) ProtoMessage() {}

func (x *GetChatMessageSamplesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatMessageSamplesResponse.ProtoReflect.Descriptor instead.
func (*GetChatMessageSamplesResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{6}
}

func (x *GetChatMessageSamplesResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatMessageSamplesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatMessageSamplesResponse) GetData() []*ChatMessageSampleData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChatMessageSamplesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChatMessageSamplesResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatMessageSamplesResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// get sample by id
type GetMessageSampleByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMessageSampleByIdRequest) Reset() {
	*x = GetMessageSampleByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageSampleByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageSampleByIdRequest) ProtoMessage() {}

func (x *GetMessageSampleByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageSampleByIdRequest.ProtoReflect.Descriptor instead.
func (*GetMessageSampleByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{7}
}

func (x *GetMessageSampleByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMessageSampleByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ChatMessageSampleData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetMessageSampleByIdResponse) Reset() {
	*x = GetMessageSampleByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMessageSampleByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageSampleByIdResponse) ProtoMessage() {}

func (x *GetMessageSampleByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageSampleByIdResponse.ProtoReflect.Descriptor instead.
func (*GetMessageSampleByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{8}
}

func (x *GetMessageSampleByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetMessageSampleByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetMessageSampleByIdResponse) GetData() *ChatMessageSampleData {
	if x != nil {
		return x.Data
	}
	return nil
}

// create sample
type PostMessageSampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword      string `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Theme        string `protobuf:"bytes,2,opt,name=theme,proto3" json:"theme,omitempty"`
	ConnectionId string `protobuf:"bytes,3,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Channel      string `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	Content      string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PostMessageSampleRequest) Reset() {
	*x = PostMessageSampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMessageSampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMessageSampleRequest) ProtoMessage() {}

func (x *PostMessageSampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMessageSampleRequest.ProtoReflect.Descriptor instead.
func (*PostMessageSampleRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{9}
}

func (x *PostMessageSampleRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *PostMessageSampleRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *PostMessageSampleRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *PostMessageSampleRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PostMessageSampleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type PostMessageSampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostMessageSampleResponse) Reset() {
	*x = PostMessageSampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostMessageSampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostMessageSampleResponse) ProtoMessage() {}

func (x *PostMessageSampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostMessageSampleResponse.ProtoReflect.Descriptor instead.
func (*PostMessageSampleResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{10}
}

func (x *PostMessageSampleResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostMessageSampleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PostMessageSampleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// update sample by id
type PutMessageSampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Keyword      string `protobuf:"bytes,2,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Theme        string `protobuf:"bytes,3,opt,name=theme,proto3" json:"theme,omitempty"`
	ConnectionId string `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	Channel      string `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Content      string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PutMessageSampleRequest) Reset() {
	*x = PutMessageSampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMessageSampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMessageSampleRequest) ProtoMessage() {}

func (x *PutMessageSampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMessageSampleRequest.ProtoReflect.Descriptor instead.
func (*PutMessageSampleRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{11}
}

func (x *PutMessageSampleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutMessageSampleRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *PutMessageSampleRequest) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *PutMessageSampleRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *PutMessageSampleRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PutMessageSampleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type PutMessageSampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutMessageSampleResponse) Reset() {
	*x = PutMessageSampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMessageSampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMessageSampleResponse) ProtoMessage() {}

func (x *PutMessageSampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMessageSampleResponse.ProtoReflect.Descriptor instead.
func (*PutMessageSampleResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{12}
}

func (x *PutMessageSampleResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutMessageSampleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// delete sample by id
type DeleteMessageSampleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMessageSampleRequest) Reset() {
	*x = DeleteMessageSampleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageSampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageSampleRequest) ProtoMessage() {}

func (x *DeleteMessageSampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageSampleRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageSampleRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteMessageSampleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteMessageSampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteMessageSampleResponse) Reset() {
	*x = DeleteMessageSampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMessageSampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageSampleResponse) ProtoMessage() {}

func (x *DeleteMessageSampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageSampleResponse.ProtoReflect.Descriptor instead.
func (*DeleteMessageSampleResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMessageSampleResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteMessageSampleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_message_sample_chat_message_sample_proto protoreflect.FileDescriptor

var file_proto_chat_message_sample_chat_message_sample_proto_rawDesc = []byte{
	0x0a, 0x33, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x03, 0x0a, 0x15, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xaa, 0x03, 0x0a,
	0x11, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x4f, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x5a, 0x61, 0x6c,
	0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x12, 0x41, 0x0a, 0x08, 0x66,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x7e,
	0x0a, 0x08, 0x5a, 0x61, 0x6c, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9a,
	0x01, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x61,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x1c,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x6f,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xd5, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x2d, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa3, 0x01, 0x0a, 0x18, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xb2, 0x01, 0x0a, 0x17, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x18, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4b, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xeb, 0x06, 0x0a, 0x14, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0xa8, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0xaa,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x62,
	0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa1, 0x01, 0x0a, 0x13,
	0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12,
	0xa8, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x30, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x1a, 0x1d, 0x2f, 0x62, 0x73,
	0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xab, 0x01, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x62, 0x73, 0x73, 0x2d,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x70, 0x69,
	0x74, 0x65, 0x6c, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_message_sample_chat_message_sample_proto_rawDescOnce sync.Once
	file_proto_chat_message_sample_chat_message_sample_proto_rawDescData = file_proto_chat_message_sample_chat_message_sample_proto_rawDesc
)

func file_proto_chat_message_sample_chat_message_sample_proto_rawDescGZIP() []byte {
	file_proto_chat_message_sample_chat_message_sample_proto_rawDescOnce.Do(func() {
		file_proto_chat_message_sample_chat_message_sample_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_message_sample_chat_message_sample_proto_rawDescData)
	})
	return file_proto_chat_message_sample_chat_message_sample_proto_rawDescData
}

var file_proto_chat_message_sample_chat_message_sample_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_chat_message_sample_chat_message_sample_proto_goTypes = []interface{}{
	(*ChatMessageSampleData)(nil),         // 0: proto.chatMessageSample.ChatMessageSampleData
	(*ChatConnectionApp)(nil),             // 1: proto.chatMessageSample.ChatConnectionApp
	(*OaInfo)(nil),                        // 2: proto.chatMessageSample.OaInfo
	(*ZaloInfo)(nil),                      // 3: proto.chatMessageSample.ZaloInfo
	(*FacebookInfo)(nil),                  // 4: proto.chatMessageSample.FacebookInfo
	(*GetChatMessageSamplesRequest)(nil),  // 5: proto.chatMessageSample.GetChatMessageSamplesRequest
	(*GetChatMessageSamplesResponse)(nil), // 6: proto.chatMessageSample.GetChatMessageSamplesResponse
	(*GetMessageSampleByIdRequest)(nil),   // 7: proto.chatMessageSample.GetMessageSampleByIdRequest
	(*GetMessageSampleByIdResponse)(nil),  // 8: proto.chatMessageSample.GetMessageSampleByIdResponse
	(*PostMessageSampleRequest)(nil),      // 9: proto.chatMessageSample.PostMessageSampleRequest
	(*PostMessageSampleResponse)(nil),     // 10: proto.chatMessageSample.PostMessageSampleResponse
	(*PutMessageSampleRequest)(nil),       // 11: proto.chatMessageSample.PutMessageSampleRequest
	(*PutMessageSampleResponse)(nil),      // 12: proto.chatMessageSample.PutMessageSampleResponse
	(*DeleteMessageSampleRequest)(nil),    // 13: proto.chatMessageSample.DeleteMessageSampleRequest
	(*DeleteMessageSampleResponse)(nil),   // 14: proto.chatMessageSample.DeleteMessageSampleResponse
	(*timestamppb.Timestamp)(nil),         // 15: google.protobuf.Timestamp
}
var file_proto_chat_message_sample_chat_message_sample_proto_depIdxs = []int32{
	15, // 0: proto.chatMessageSample.ChatMessageSampleData.created_at:type_name -> google.protobuf.Timestamp
	15, // 1: proto.chatMessageSample.ChatMessageSampleData.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: proto.chatMessageSample.ChatMessageSampleData.connection_app:type_name -> proto.chatMessageSample.ChatConnectionApp
	15, // 3: proto.chatMessageSample.ChatConnectionApp.created_at:type_name -> google.protobuf.Timestamp
	15, // 4: proto.chatMessageSample.ChatConnectionApp.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 5: proto.chatMessageSample.ChatConnectionApp.oa_info:type_name -> proto.chatMessageSample.OaInfo
	3,  // 6: proto.chatMessageSample.OaInfo.zalo:type_name -> proto.chatMessageSample.ZaloInfo
	4,  // 7: proto.chatMessageSample.OaInfo.facebook:type_name -> proto.chatMessageSample.FacebookInfo
	0,  // 8: proto.chatMessageSample.GetChatMessageSamplesResponse.data:type_name -> proto.chatMessageSample.ChatMessageSampleData
	0,  // 9: proto.chatMessageSample.GetMessageSampleByIdResponse.data:type_name -> proto.chatMessageSample.ChatMessageSampleData
	5,  // 10: proto.chatMessageSample.MessageSampleService.GetChatMessageSamples:input_type -> proto.chatMessageSample.GetChatMessageSamplesRequest
	7,  // 11: proto.chatMessageSample.MessageSampleService.GetMessageSampleById:input_type -> proto.chatMessageSample.GetMessageSampleByIdRequest
	9,  // 12: proto.chatMessageSample.MessageSampleService.InsertMessageSample:input_type -> proto.chatMessageSample.PostMessageSampleRequest
	11, // 13: proto.chatMessageSample.MessageSampleService.UpdateMessageSampleById:input_type -> proto.chatMessageSample.PutMessageSampleRequest
	13, // 14: proto.chatMessageSample.MessageSampleService.DeleteMessageSampleById:input_type -> proto.chatMessageSample.DeleteMessageSampleRequest
	6,  // 15: proto.chatMessageSample.MessageSampleService.GetChatMessageSamples:output_type -> proto.chatMessageSample.GetChatMessageSamplesResponse
	8,  // 16: proto.chatMessageSample.MessageSampleService.GetMessageSampleById:output_type -> proto.chatMessageSample.GetMessageSampleByIdResponse
	10, // 17: proto.chatMessageSample.MessageSampleService.InsertMessageSample:output_type -> proto.chatMessageSample.PostMessageSampleResponse
	12, // 18: proto.chatMessageSample.MessageSampleService.UpdateMessageSampleById:output_type -> proto.chatMessageSample.PutMessageSampleResponse
	14, // 19: proto.chatMessageSample.MessageSampleService.DeleteMessageSampleById:output_type -> proto.chatMessageSample.DeleteMessageSampleResponse
	15, // [15:20] is the sub-list for method output_type
	10, // [10:15] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_chat_message_sample_chat_message_sample_proto_init() }
func file_proto_chat_message_sample_chat_message_sample_proto_init() {
	if File_proto_chat_message_sample_chat_message_sample_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessageSampleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatConnectionApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZaloInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatMessageSamplesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatMessageSamplesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageSampleByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMessageSampleByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMessageSampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostMessageSampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMessageSampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMessageSampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageSampleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_message_sample_chat_message_sample_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMessageSampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_message_sample_chat_message_sample_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_message_sample_chat_message_sample_proto_goTypes,
		DependencyIndexes: file_proto_chat_message_sample_chat_message_sample_proto_depIdxs,
		MessageInfos:      file_proto_chat_message_sample_chat_message_sample_proto_msgTypes,
	}.Build()
	File_proto_chat_message_sample_chat_message_sample_proto = out.File
	file_proto_chat_message_sample_chat_message_sample_proto_rawDesc = nil
	file_proto_chat_message_sample_chat_message_sample_proto_goTypes = nil
	file_proto_chat_message_sample_chat_message_sample_proto_depIdxs = nil
}
