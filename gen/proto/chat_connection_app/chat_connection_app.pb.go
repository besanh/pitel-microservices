// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/chat_connection_app/chat_connection_app.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatConnectionApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId          string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ConnectionName    string                 `protobuf:"bytes,5,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string                 `protobuf:"bytes,6,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	ChatAppId         string                 `protobuf:"bytes,7,opt,name=chat_app_id,json=chatAppId,proto3" json:"chat_app_id,omitempty"`
	ConnectionQueueId string                 `protobuf:"bytes,8,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	ConnectionQueue   *ConnectionQueue       `protobuf:"bytes,9,opt,name=connection_queue,json=connectionQueue,proto3" json:"connection_queue,omitempty"`
	OaInfo            *OaInfo                `protobuf:"bytes,10,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
	Status            string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChatConnectionApp) Reset() {
	*x = ChatConnectionApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionApp) ProtoMessage() {}

func (x *ChatConnectionApp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionApp.ProtoReflect.Descriptor instead.
func (*ChatConnectionApp) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{0}
}

func (x *ChatConnectionApp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatConnectionApp) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatConnectionApp) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatConnectionApp) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatConnectionApp) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *ChatConnectionApp) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *ChatConnectionApp) GetChatAppId() string {
	if x != nil {
		return x.ChatAppId
	}
	return ""
}

func (x *ChatConnectionApp) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *ChatConnectionApp) GetConnectionQueue() *ConnectionQueue {
	if x != nil {
		return x.ConnectionQueue
	}
	return nil
}

func (x *ChatConnectionApp) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

func (x *ChatConnectionApp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ConnectionQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId          string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ConnectionId      string                 `protobuf:"bytes,5,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ChatConnectionApp *ChatConnectionApp     `protobuf:"bytes,6,opt,name=chat_connection_app,json=chatConnectionApp,proto3" json:"chat_connection_app,omitempty"`
	QueueId           string                 `protobuf:"bytes,7,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	ChatQueue         *ChatQueue             `protobuf:"bytes,8,opt,name=chat_queue,json=chatQueue,proto3" json:"chat_queue,omitempty"`
}

func (x *ConnectionQueue) Reset() {
	*x = ConnectionQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionQueue) ProtoMessage() {}

func (x *ConnectionQueue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionQueue.ProtoReflect.Descriptor instead.
func (*ConnectionQueue) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectionQueue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectionQueue) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConnectionQueue) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ConnectionQueue) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ConnectionQueue) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ConnectionQueue) GetChatConnectionApp() *ChatConnectionApp {
	if x != nil {
		return x.ChatConnectionApp
	}
	return nil
}

func (x *ConnectionQueue) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *ConnectionQueue) GetChatQueue() *ChatQueue {
	if x != nil {
		return x.ChatQueue
	}
	return nil
}

type ChatQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId            string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	QueueName           string                 `protobuf:"bytes,5,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Description         string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ChatRoutingId       string                 `protobuf:"bytes,7,opt,name=chat_routing_id,json=chatRoutingId,proto3" json:"chat_routing_id,omitempty"`
	ChatRouting         *structpb.Struct       `protobuf:"bytes,8,opt,name=chat_routing,json=chatRouting,proto3" json:"chat_routing,omitempty"`
	ChatConnectionQueue []*ConnectionQueue     `protobuf:"bytes,9,rep,name=chat_connection_queue,json=chatConnectionQueue,proto3" json:"chat_connection_queue,omitempty"`
	ChatQueueUser       []*structpb.Struct     `protobuf:"bytes,10,rep,name=chat_queue_user,json=chatQueueUser,proto3" json:"chat_queue_user,omitempty"`
	ManageQueueId       string                 `protobuf:"bytes,11,opt,name=manage_queue_id,json=manageQueueId,proto3" json:"manage_queue_id,omitempty"`
	ManageQueueUser     *structpb.Struct       `protobuf:"bytes,12,opt,name=manage_queue_user,json=manageQueueUser,proto3" json:"manage_queue_user,omitempty"`
	Status              string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChatQueue) Reset() {
	*x = ChatQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatQueue) ProtoMessage() {}

func (x *ChatQueue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatQueue.ProtoReflect.Descriptor instead.
func (*ChatQueue) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{2}
}

func (x *ChatQueue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatQueue) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatQueue) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatQueue) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatQueue) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ChatQueue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChatQueue) GetChatRoutingId() string {
	if x != nil {
		return x.ChatRoutingId
	}
	return ""
}

func (x *ChatQueue) GetChatRouting() *structpb.Struct {
	if x != nil {
		return x.ChatRouting
	}
	return nil
}

func (x *ChatQueue) GetChatConnectionQueue() []*ConnectionQueue {
	if x != nil {
		return x.ChatConnectionQueue
	}
	return nil
}

func (x *ChatQueue) GetChatQueueUser() []*structpb.Struct {
	if x != nil {
		return x.ChatQueueUser
	}
	return nil
}

func (x *ChatQueue) GetManageQueueId() string {
	if x != nil {
		return x.ManageQueueId
	}
	return ""
}

func (x *ChatQueue) GetManageQueueUser() *structpb.Struct {
	if x != nil {
		return x.ManageQueueUser
	}
	return nil
}

func (x *ChatQueue) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ChatConnectionAppView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId          string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ConnectionName    string                 `protobuf:"bytes,5,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string                 `protobuf:"bytes,6,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	ChatAppId         string                 `protobuf:"bytes,7,opt,name=chat_app_id,json=chatAppId,proto3" json:"chat_app_id,omitempty"`
	ConnectionQueueId string                 `protobuf:"bytes,8,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	ConnectionQueue   *ConnectionQueue       `protobuf:"bytes,9,opt,name=connection_queue,json=connectionQueue,proto3" json:"connection_queue,omitempty"`
	OaInfo            *OaInfo                `protobuf:"bytes,10,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
	Status            string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	ShareFormUuid     string                 `protobuf:"bytes,12,opt,name=share_form_uuid,json=shareFormUuid,proto3" json:"share_form_uuid,omitempty"`
	ShareInfoForm     *ShareInfoForm         `protobuf:"bytes,13,opt,name=share_info_form,json=shareInfoForm,proto3" json:"share_info_form,omitempty"`
}

func (x *ChatConnectionAppView) Reset() {
	*x = ChatConnectionAppView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionAppView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionAppView) ProtoMessage() {}

func (x *ChatConnectionAppView) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionAppView.ProtoReflect.Descriptor instead.
func (*ChatConnectionAppView) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{3}
}

func (x *ChatConnectionAppView) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatConnectionAppView) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatConnectionAppView) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatConnectionAppView) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatConnectionAppView) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *ChatConnectionAppView) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *ChatConnectionAppView) GetChatAppId() string {
	if x != nil {
		return x.ChatAppId
	}
	return ""
}

func (x *ChatConnectionAppView) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *ChatConnectionAppView) GetConnectionQueue() *ConnectionQueue {
	if x != nil {
		return x.ConnectionQueue
	}
	return nil
}

func (x *ChatConnectionAppView) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

func (x *ChatConnectionAppView) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatConnectionAppView) GetShareFormUuid() string {
	if x != nil {
		return x.ShareFormUuid
	}
	return ""
}

func (x *ChatConnectionAppView) GetShareInfoForm() *ShareInfoForm {
	if x != nil {
		return x.ShareInfoForm
	}
	return nil
}

type ShareInfoForm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zalo *ShareFormZalo `protobuf:"bytes,1,opt,name=zalo,proto3" json:"zalo,omitempty"`
}

func (x *ShareInfoForm) Reset() {
	*x = ShareInfoForm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareInfoForm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareInfoForm) ProtoMessage() {}

func (x *ShareInfoForm) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareInfoForm.ProtoReflect.Descriptor instead.
func (*ShareInfoForm) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{4}
}

func (x *ShareInfoForm) GetZalo() *ShareFormZalo {
	if x != nil {
		return x.Zalo
	}
	return nil
}

type ShareFormZalo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId     string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ImageName string `protobuf:"bytes,2,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	ImageUrl  string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	OaId      string `protobuf:"bytes,4,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	Subtitle  string `protobuf:"bytes,5,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	Title     string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ShareFormZalo) Reset() {
	*x = ShareFormZalo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareFormZalo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareFormZalo) ProtoMessage() {}

func (x *ShareFormZalo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareFormZalo.ProtoReflect.Descriptor instead.
func (*ShareFormZalo) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{5}
}

func (x *ShareFormZalo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ShareFormZalo) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *ShareFormZalo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ShareFormZalo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ShareFormZalo) GetSubtitle() string {
	if x != nil {
		return x.Subtitle
	}
	return ""
}

func (x *ShareFormZalo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type OaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zalo     []*ZaloInfo     `protobuf:"bytes,1,rep,name=zalo,proto3" json:"zalo,omitempty"`
	Facebook []*FacebookInfo `protobuf:"bytes,2,rep,name=facebook,proto3" json:"facebook,omitempty"`
}

func (x *OaInfo) Reset() {
	*x = OaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaInfo) ProtoMessage() {}

func (x *OaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaInfo.ProtoReflect.Descriptor instead.
func (*OaInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{6}
}

func (x *OaInfo) GetZalo() []*ZaloInfo {
	if x != nil {
		return x.Zalo
	}
	return nil
}

func (x *OaInfo) GetFacebook() []*FacebookInfo {
	if x != nil {
		return x.Facebook
	}
	return nil
}

type ZaloInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId   string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa  string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Avatar string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *ZaloInfo) Reset() {
	*x = ZaloInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZaloInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZaloInfo) ProtoMessage() {}

func (x *ZaloInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZaloInfo.ProtoReflect.Descriptor instead.
func (*ZaloInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{7}
}

func (x *ZaloInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ZaloInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ZaloInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *ZaloInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *ZaloInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ZaloInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type FacebookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId       string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId        string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName      string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa       string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	Avatar      string `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Expire      int32  `protobuf:"varint,7,opt,name=expire,proto3" json:"expire,omitempty"`
	Status      string `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FacebookInfo) Reset() {
	*x = FacebookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookInfo) ProtoMessage() {}

func (x *FacebookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookInfo.ProtoReflect.Descriptor instead.
func (*FacebookInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{8}
}

func (x *FacebookInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FacebookInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *FacebookInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *FacebookInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *FacebookInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *FacebookInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FacebookInfo) GetExpire() int32 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *FacebookInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// get chat connection apps
type GetChatConnectionAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TenantId          string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	OaId              string `protobuf:"bytes,3,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	Limit             int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset            int32  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	ChatAppId         string `protobuf:"bytes,6,opt,name=chat_app_id,json=chatAppId,proto3" json:"chat_app_id,omitempty"`
	ConnectionName    string `protobuf:"bytes,7,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string `protobuf:"bytes,8,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	QueueId           string `protobuf:"bytes,9,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	ConnectionQueueId string `protobuf:"bytes,10,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
}

func (x *GetChatConnectionAppsRequest) Reset() {
	*x = GetChatConnectionAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatConnectionAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatConnectionAppsRequest) ProtoMessage() {}

func (x *GetChatConnectionAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatConnectionAppsRequest.ProtoReflect.Descriptor instead.
func (*GetChatConnectionAppsRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{9}
}

func (x *GetChatConnectionAppsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetChatConnectionAppsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetChatConnectionAppsRequest) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *GetChatConnectionAppsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatConnectionAppsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetChatConnectionAppsRequest) GetChatAppId() string {
	if x != nil {
		return x.ChatAppId
	}
	return ""
}

func (x *GetChatConnectionAppsRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *GetChatConnectionAppsRequest) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *GetChatConnectionAppsRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *GetChatConnectionAppsRequest) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

type GetChatConnectionAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string                   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChatConnectionAppView `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32                    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Limit   int32                    `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32                    `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatConnectionAppsResponse) Reset() {
	*x = GetChatConnectionAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatConnectionAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatConnectionAppsResponse) ProtoMessage() {}

func (x *GetChatConnectionAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatConnectionAppsResponse.ProtoReflect.Descriptor instead.
func (*GetChatConnectionAppsResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{10}
}

func (x *GetChatConnectionAppsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatConnectionAppsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatConnectionAppsResponse) GetData() []*ChatConnectionAppView {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChatConnectionAppsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChatConnectionAppsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatConnectionAppsResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// get connection app by id
type GetChatConnectionAppByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetChatConnectionAppByIdRequest) Reset() {
	*x = GetChatConnectionAppByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatConnectionAppByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatConnectionAppByIdRequest) ProtoMessage() {}

func (x *GetChatConnectionAppByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatConnectionAppByIdRequest.ProtoReflect.Descriptor instead.
func (*GetChatConnectionAppByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{11}
}

func (x *GetChatConnectionAppByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetChatConnectionAppByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ChatConnectionApp `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetChatConnectionAppByIdResponse) Reset() {
	*x = GetChatConnectionAppByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatConnectionAppByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatConnectionAppByIdResponse) ProtoMessage() {}

func (x *GetChatConnectionAppByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatConnectionAppByIdResponse.ProtoReflect.Descriptor instead.
func (*GetChatConnectionAppByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{12}
}

func (x *GetChatConnectionAppByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatConnectionAppByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatConnectionAppByIdResponse) GetData() *ChatConnectionApp {
	if x != nil {
		return x.Data
	}
	return nil
}

// create connection app
type PostChatConnectionAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConnectionName    string  `protobuf:"bytes,2,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string  `protobuf:"bytes,3,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	QueueId           string  `protobuf:"bytes,4,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	ConnectionQueueId string  `protobuf:"bytes,5,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	OaInfo            *OaInfo `protobuf:"bytes,6,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
	Status            string  `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	OaId              string  `protobuf:"bytes,8,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	ChatAppId         string  `protobuf:"bytes,9,opt,name=chat_app_id,json=chatAppId,proto3" json:"chat_app_id,omitempty"`
	OaName            string  `protobuf:"bytes,10,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	Code              int64   `protobuf:"varint,11,opt,name=code,proto3" json:"code,omitempty"`
	Message           string  `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PostChatConnectionAppRequest) Reset() {
	*x = PostChatConnectionAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatConnectionAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatConnectionAppRequest) ProtoMessage() {}

func (x *PostChatConnectionAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatConnectionAppRequest.ProtoReflect.Descriptor instead.
func (*PostChatConnectionAppRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{13}
}

func (x *PostChatConnectionAppRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

func (x *PostChatConnectionAppRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetChatAppId() string {
	if x != nil {
		return x.ChatAppId
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *PostChatConnectionAppRequest) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PostChatConnectionAppRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PostChatConnectionAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostChatConnectionAppResponse) Reset() {
	*x = PostChatConnectionAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatConnectionAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatConnectionAppResponse) ProtoMessage() {}

func (x *PostChatConnectionAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatConnectionAppResponse.ProtoReflect.Descriptor instead.
func (*PostChatConnectionAppResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{14}
}

func (x *PostChatConnectionAppResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostChatConnectionAppResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PostChatConnectionAppResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// update connection app by id
type PutChatConnectionAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ConnectionId      string  `protobuf:"bytes,2,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ConnectionName    string  `protobuf:"bytes,3,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string  `protobuf:"bytes,4,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	QueueId           string  `protobuf:"bytes,5,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	ConnectionQueueId string  `protobuf:"bytes,6,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	OaInfo            *OaInfo `protobuf:"bytes,7,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
	Status            string  `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	ChatAppId         string  `protobuf:"bytes,9,opt,name=chat_app_id,json=chatAppId,proto3" json:"chat_app_id,omitempty"`
	AppId             string  `protobuf:"bytes,10,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaName            string  `protobuf:"bytes,11,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	Code              int64   `protobuf:"varint,12,opt,name=code,proto3" json:"code,omitempty"`
	Message           string  `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatConnectionAppRequest) Reset() {
	*x = PutChatConnectionAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatConnectionAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatConnectionAppRequest) ProtoMessage() {}

func (x *PutChatConnectionAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatConnectionAppRequest.ProtoReflect.Descriptor instead.
func (*PutChatConnectionAppRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{15}
}

func (x *PutChatConnectionAppRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

func (x *PutChatConnectionAppRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetChatAppId() string {
	if x != nil {
		return x.ChatAppId
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *PutChatConnectionAppRequest) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PutChatConnectionAppRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PutChatConnectionAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatConnectionAppResponse) Reset() {
	*x = PutChatConnectionAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatConnectionAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatConnectionAppResponse) ProtoMessage() {}

func (x *PutChatConnectionAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatConnectionAppResponse.ProtoReflect.Descriptor instead.
func (*PutChatConnectionAppResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{16}
}

func (x *PutChatConnectionAppResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChatConnectionAppResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// delete connection app by id
type DeleteChatConnectionAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChatConnectionAppRequest) Reset() {
	*x = DeleteChatConnectionAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatConnectionAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatConnectionAppRequest) ProtoMessage() {}

func (x *DeleteChatConnectionAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatConnectionAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatConnectionAppRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteChatConnectionAppRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteChatConnectionAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteChatConnectionAppResponse) Reset() {
	*x = DeleteChatConnectionAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatConnectionAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatConnectionAppResponse) ProtoMessage() {}

func (x *DeleteChatConnectionAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatConnectionAppResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatConnectionAppResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteChatConnectionAppResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteChatConnectionAppResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_connection_app_chat_connection_app_proto protoreflect.FileDescriptor

var file_proto_chat_connection_app_chat_connection_app_proto_rawDesc = []byte{
	0x0a, 0x33, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x03, 0x0a, 0x11, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x2e, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x93, 0x03, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52,
	0x11, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x41, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x22, 0xf7, 0x04, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61,
	0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x5c, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x13, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x12, 0x3f, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x43, 0x0a,
	0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfb, 0x04, 0x0a, 0x15, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x38,
	0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x6f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x46, 0x6f, 0x72, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x4e, 0x0a, 0x0f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x22, 0x4b, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x3a, 0x0a, 0x04, 0x7a, 0x61, 0x6c,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x5a, 0x61, 0x6c, 0x6f, 0x52,
	0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x22, 0xa9, 0x01, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x5a, 0x61, 0x6c, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0x82, 0x01, 0x0a, 0x06, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x04,
	0x7a, 0x61, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x2e, 0x5a, 0x61, 0x6c, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x7a,
	0x61, 0x6c, 0x6f, 0x12, 0x41, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e,
	0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x96, 0x01, 0x0a, 0x08, 0x5a, 0x61, 0x6c, 0x6f, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f,
	0x6f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22,
	0xd5, 0x01, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd3, 0x02, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x13, 0x0a,
	0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x22, 0xd5, 0x01,
	0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x31, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x99, 0x03, 0x0a, 0x1c,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x61, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x2e, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x6f,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x1d, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbf, 0x03, 0x0a, 0x1b, 0x50, 0x75, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x2e, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4c, 0x0a, 0x1c, 0x50, 0x75, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4f, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xc7, 0x07, 0x0a, 0x18, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xb0, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x73,
	0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x70, 0x12, 0xbe, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x42, 0x79, 0x49, 0x64, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xb5, 0x01, 0x0a, 0x17, 0x49,
	0x6e, 0x73, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a,
	0x22, 0x20, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61,
	0x70, 0x70, 0x12, 0xbc, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x50, 0x75, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x1a, 0x25, 0x2f, 0x62, 0x73, 0x73,
	0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xbf, 0x01, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x37, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x25, 0x2f, 0x62,
	0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x70, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x66, 0x69, 0x6e, 0x73, 0x2d, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_connection_app_chat_connection_app_proto_rawDescOnce sync.Once
	file_proto_chat_connection_app_chat_connection_app_proto_rawDescData = file_proto_chat_connection_app_chat_connection_app_proto_rawDesc
)

func file_proto_chat_connection_app_chat_connection_app_proto_rawDescGZIP() []byte {
	file_proto_chat_connection_app_chat_connection_app_proto_rawDescOnce.Do(func() {
		file_proto_chat_connection_app_chat_connection_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_connection_app_chat_connection_app_proto_rawDescData)
	})
	return file_proto_chat_connection_app_chat_connection_app_proto_rawDescData
}

var file_proto_chat_connection_app_chat_connection_app_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_proto_chat_connection_app_chat_connection_app_proto_goTypes = []interface{}{
	(*ChatConnectionApp)(nil),                // 0: proto.chatConnectionApp.ChatConnectionApp
	(*ConnectionQueue)(nil),                  // 1: proto.chatConnectionApp.ConnectionQueue
	(*ChatQueue)(nil),                        // 2: proto.chatConnectionApp.ChatQueue
	(*ChatConnectionAppView)(nil),            // 3: proto.chatConnectionApp.ChatConnectionAppView
	(*ShareInfoForm)(nil),                    // 4: proto.chatConnectionApp.ShareInfoForm
	(*ShareFormZalo)(nil),                    // 5: proto.chatConnectionApp.ShareFormZalo
	(*OaInfo)(nil),                           // 6: proto.chatConnectionApp.OaInfo
	(*ZaloInfo)(nil),                         // 7: proto.chatConnectionApp.ZaloInfo
	(*FacebookInfo)(nil),                     // 8: proto.chatConnectionApp.FacebookInfo
	(*GetChatConnectionAppsRequest)(nil),     // 9: proto.chatConnectionApp.GetChatConnectionAppsRequest
	(*GetChatConnectionAppsResponse)(nil),    // 10: proto.chatConnectionApp.GetChatConnectionAppsResponse
	(*GetChatConnectionAppByIdRequest)(nil),  // 11: proto.chatConnectionApp.GetChatConnectionAppByIdRequest
	(*GetChatConnectionAppByIdResponse)(nil), // 12: proto.chatConnectionApp.GetChatConnectionAppByIdResponse
	(*PostChatConnectionAppRequest)(nil),     // 13: proto.chatConnectionApp.PostChatConnectionAppRequest
	(*PostChatConnectionAppResponse)(nil),    // 14: proto.chatConnectionApp.PostChatConnectionAppResponse
	(*PutChatConnectionAppRequest)(nil),      // 15: proto.chatConnectionApp.PutChatConnectionAppRequest
	(*PutChatConnectionAppResponse)(nil),     // 16: proto.chatConnectionApp.PutChatConnectionAppResponse
	(*DeleteChatConnectionAppRequest)(nil),   // 17: proto.chatConnectionApp.DeleteChatConnectionAppRequest
	(*DeleteChatConnectionAppResponse)(nil),  // 18: proto.chatConnectionApp.DeleteChatConnectionAppResponse
	(*timestamppb.Timestamp)(nil),            // 19: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                  // 20: google.protobuf.Struct
}
var file_proto_chat_connection_app_chat_connection_app_proto_depIdxs = []int32{
	19, // 0: proto.chatConnectionApp.ChatConnectionApp.created_at:type_name -> google.protobuf.Timestamp
	19, // 1: proto.chatConnectionApp.ChatConnectionApp.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: proto.chatConnectionApp.ChatConnectionApp.connection_queue:type_name -> proto.chatConnectionApp.ConnectionQueue
	6,  // 3: proto.chatConnectionApp.ChatConnectionApp.oa_info:type_name -> proto.chatConnectionApp.OaInfo
	19, // 4: proto.chatConnectionApp.ConnectionQueue.created_at:type_name -> google.protobuf.Timestamp
	19, // 5: proto.chatConnectionApp.ConnectionQueue.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 6: proto.chatConnectionApp.ConnectionQueue.chat_connection_app:type_name -> proto.chatConnectionApp.ChatConnectionApp
	2,  // 7: proto.chatConnectionApp.ConnectionQueue.chat_queue:type_name -> proto.chatConnectionApp.ChatQueue
	19, // 8: proto.chatConnectionApp.ChatQueue.created_at:type_name -> google.protobuf.Timestamp
	19, // 9: proto.chatConnectionApp.ChatQueue.updated_at:type_name -> google.protobuf.Timestamp
	20, // 10: proto.chatConnectionApp.ChatQueue.chat_routing:type_name -> google.protobuf.Struct
	1,  // 11: proto.chatConnectionApp.ChatQueue.chat_connection_queue:type_name -> proto.chatConnectionApp.ConnectionQueue
	20, // 12: proto.chatConnectionApp.ChatQueue.chat_queue_user:type_name -> google.protobuf.Struct
	20, // 13: proto.chatConnectionApp.ChatQueue.manage_queue_user:type_name -> google.protobuf.Struct
	19, // 14: proto.chatConnectionApp.ChatConnectionAppView.created_at:type_name -> google.protobuf.Timestamp
	19, // 15: proto.chatConnectionApp.ChatConnectionAppView.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 16: proto.chatConnectionApp.ChatConnectionAppView.connection_queue:type_name -> proto.chatConnectionApp.ConnectionQueue
	6,  // 17: proto.chatConnectionApp.ChatConnectionAppView.oa_info:type_name -> proto.chatConnectionApp.OaInfo
	4,  // 18: proto.chatConnectionApp.ChatConnectionAppView.share_info_form:type_name -> proto.chatConnectionApp.ShareInfoForm
	5,  // 19: proto.chatConnectionApp.ShareInfoForm.zalo:type_name -> proto.chatConnectionApp.ShareFormZalo
	7,  // 20: proto.chatConnectionApp.OaInfo.zalo:type_name -> proto.chatConnectionApp.ZaloInfo
	8,  // 21: proto.chatConnectionApp.OaInfo.facebook:type_name -> proto.chatConnectionApp.FacebookInfo
	3,  // 22: proto.chatConnectionApp.GetChatConnectionAppsResponse.data:type_name -> proto.chatConnectionApp.ChatConnectionAppView
	0,  // 23: proto.chatConnectionApp.GetChatConnectionAppByIdResponse.data:type_name -> proto.chatConnectionApp.ChatConnectionApp
	6,  // 24: proto.chatConnectionApp.PostChatConnectionAppRequest.oa_info:type_name -> proto.chatConnectionApp.OaInfo
	6,  // 25: proto.chatConnectionApp.PutChatConnectionAppRequest.oa_info:type_name -> proto.chatConnectionApp.OaInfo
	9,  // 26: proto.chatConnectionApp.ChatConnectionAppService.GetChatConnectionApps:input_type -> proto.chatConnectionApp.GetChatConnectionAppsRequest
	11, // 27: proto.chatConnectionApp.ChatConnectionAppService.GetChatConnectionAppById:input_type -> proto.chatConnectionApp.GetChatConnectionAppByIdRequest
	13, // 28: proto.chatConnectionApp.ChatConnectionAppService.InsertChatConnectionApp:input_type -> proto.chatConnectionApp.PostChatConnectionAppRequest
	15, // 29: proto.chatConnectionApp.ChatConnectionAppService.UpdateChatConnectionAppById:input_type -> proto.chatConnectionApp.PutChatConnectionAppRequest
	17, // 30: proto.chatConnectionApp.ChatConnectionAppService.DeleteChatConnectionAppById:input_type -> proto.chatConnectionApp.DeleteChatConnectionAppRequest
	10, // 31: proto.chatConnectionApp.ChatConnectionAppService.GetChatConnectionApps:output_type -> proto.chatConnectionApp.GetChatConnectionAppsResponse
	12, // 32: proto.chatConnectionApp.ChatConnectionAppService.GetChatConnectionAppById:output_type -> proto.chatConnectionApp.GetChatConnectionAppByIdResponse
	14, // 33: proto.chatConnectionApp.ChatConnectionAppService.InsertChatConnectionApp:output_type -> proto.chatConnectionApp.PostChatConnectionAppResponse
	16, // 34: proto.chatConnectionApp.ChatConnectionAppService.UpdateChatConnectionAppById:output_type -> proto.chatConnectionApp.PutChatConnectionAppResponse
	18, // 35: proto.chatConnectionApp.ChatConnectionAppService.DeleteChatConnectionAppById:output_type -> proto.chatConnectionApp.DeleteChatConnectionAppResponse
	31, // [31:36] is the sub-list for method output_type
	26, // [26:31] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_proto_chat_connection_app_chat_connection_app_proto_init() }
func file_proto_chat_connection_app_chat_connection_app_proto_init() {
	if File_proto_chat_connection_app_chat_connection_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatConnectionApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatConnectionAppView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareInfoForm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareFormZalo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZaloInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatConnectionAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatConnectionAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatConnectionAppByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatConnectionAppByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatConnectionAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatConnectionAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatConnectionAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatConnectionAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatConnectionAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_connection_app_chat_connection_app_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatConnectionAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_connection_app_chat_connection_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_connection_app_chat_connection_app_proto_goTypes,
		DependencyIndexes: file_proto_chat_connection_app_chat_connection_app_proto_depIdxs,
		MessageInfos:      file_proto_chat_connection_app_chat_connection_app_proto_msgTypes,
	}.Build()
	File_proto_chat_connection_app_chat_connection_app_proto = out.File
	file_proto_chat_connection_app_chat_connection_app_proto_rawDesc = nil
	file_proto_chat_connection_app_chat_connection_app_proto_goTypes = nil
	file_proto_chat_connection_app_chat_connection_app_proto_depIdxs = nil
}
