// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/chat_queue/chat_queue.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId            string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	QueueName           string                 `protobuf:"bytes,5,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Description         string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ChatRoutingId       string                 `protobuf:"bytes,7,opt,name=chat_routing_id,json=chatRoutingId,proto3" json:"chat_routing_id,omitempty"`
	ChatRouting         *ChatRouting           `protobuf:"bytes,8,opt,name=chat_routing,json=chatRouting,proto3" json:"chat_routing,omitempty"`
	ChatConnectionQueue []*ConnectionQueue     `protobuf:"bytes,9,rep,name=chat_connection_queue,json=chatConnectionQueue,proto3" json:"chat_connection_queue,omitempty"`
	ChatQueueUser       []*ChatQueueUser       `protobuf:"bytes,10,rep,name=chat_queue_user,json=chatQueueUser,proto3" json:"chat_queue_user,omitempty"`
	ManageQueueId       string                 `protobuf:"bytes,11,opt,name=manage_queue_id,json=manageQueueId,proto3" json:"manage_queue_id,omitempty"`
	ManageQueueUser     *ChatManageQueueUser   `protobuf:"bytes,12,opt,name=manage_queue_user,json=manageQueueUser,proto3" json:"manage_queue_user,omitempty"`
	Status              string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChatQueue) Reset() {
	*x = ChatQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatQueue) ProtoMessage() {}

func (x *ChatQueue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatQueue.ProtoReflect.Descriptor instead.
func (*ChatQueue) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{0}
}

func (x *ChatQueue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatQueue) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatQueue) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatQueue) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatQueue) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ChatQueue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChatQueue) GetChatRoutingId() string {
	if x != nil {
		return x.ChatRoutingId
	}
	return ""
}

func (x *ChatQueue) GetChatRouting() *ChatRouting {
	if x != nil {
		return x.ChatRouting
	}
	return nil
}

func (x *ChatQueue) GetChatConnectionQueue() []*ConnectionQueue {
	if x != nil {
		return x.ChatConnectionQueue
	}
	return nil
}

func (x *ChatQueue) GetChatQueueUser() []*ChatQueueUser {
	if x != nil {
		return x.ChatQueueUser
	}
	return nil
}

func (x *ChatQueue) GetManageQueueId() string {
	if x != nil {
		return x.ManageQueueId
	}
	return ""
}

func (x *ChatQueue) GetManageQueueUser() *ChatManageQueueUser {
	if x != nil {
		return x.ManageQueueUser
	}
	return nil
}

func (x *ChatQueue) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ChatRouting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	RoutingName  string                 `protobuf:"bytes,4,opt,name=routing_name,json=routingName,proto3" json:"routing_name,omitempty"`
	RoutingAlias string                 `protobuf:"bytes,5,opt,name=routing_alias,json=routingAlias,proto3" json:"routing_alias,omitempty"`
	Status       bool                   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChatRouting) Reset() {
	*x = ChatRouting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatRouting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRouting) ProtoMessage() {}

func (x *ChatRouting) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRouting.ProtoReflect.Descriptor instead.
func (*ChatRouting) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{1}
}

func (x *ChatRouting) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatRouting) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatRouting) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatRouting) GetRoutingName() string {
	if x != nil {
		return x.RoutingName
	}
	return ""
}

func (x *ChatRouting) GetRoutingAlias() string {
	if x != nil {
		return x.RoutingAlias
	}
	return ""
}

func (x *ChatRouting) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type ConnectionQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId          string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ConnectionId      string                 `protobuf:"bytes,5,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	ChatConnectionApp *ChatConnectionApp     `protobuf:"bytes,6,opt,name=chat_connection_app,json=chatConnectionApp,proto3" json:"chat_connection_app,omitempty"`
	QueueId           string                 `protobuf:"bytes,7,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	ChatQueue         *ChatQueue             `protobuf:"bytes,8,opt,name=chat_queue,json=chatQueue,proto3" json:"chat_queue,omitempty"`
}

func (x *ConnectionQueue) Reset() {
	*x = ConnectionQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionQueue) ProtoMessage() {}

func (x *ConnectionQueue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionQueue.ProtoReflect.Descriptor instead.
func (*ConnectionQueue) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectionQueue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ConnectionQueue) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ConnectionQueue) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ConnectionQueue) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ConnectionQueue) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ConnectionQueue) GetChatConnectionApp() *ChatConnectionApp {
	if x != nil {
		return x.ChatConnectionApp
	}
	return nil
}

func (x *ConnectionQueue) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *ConnectionQueue) GetChatQueue() *ChatQueue {
	if x != nil {
		return x.ChatQueue
	}
	return nil
}

type ChatQueueUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId  string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	QueueId   string                 `protobuf:"bytes,5,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	ChatQueue *ChatQueue             `protobuf:"bytes,6,opt,name=chat_queue,json=chatQueue,proto3" json:"chat_queue,omitempty"`
	UserId    string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Source    string                 `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	Fullname  string                 `protobuf:"bytes,9,opt,name=fullname,proto3" json:"fullname,omitempty"`
}

func (x *ChatQueueUser) Reset() {
	*x = ChatQueueUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatQueueUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatQueueUser) ProtoMessage() {}

func (x *ChatQueueUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatQueueUser.ProtoReflect.Descriptor instead.
func (*ChatQueueUser) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{3}
}

func (x *ChatQueueUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatQueueUser) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatQueueUser) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatQueueUser) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatQueueUser) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *ChatQueueUser) GetChatQueue() *ChatQueue {
	if x != nil {
		return x.ChatQueue
	}
	return nil
}

func (x *ChatQueueUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatQueueUser) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ChatQueueUser) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

type ChatManageQueueUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId     string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	ConnectionId string                 `protobuf:"bytes,5,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	QueueId      string                 `protobuf:"bytes,6,opt,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
	UserId       string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ChatManageQueueUser) Reset() {
	*x = ChatManageQueueUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatManageQueueUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatManageQueueUser) ProtoMessage() {}

func (x *ChatManageQueueUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatManageQueueUser.ProtoReflect.Descriptor instead.
func (*ChatManageQueueUser) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{4}
}

func (x *ChatManageQueueUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatManageQueueUser) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatManageQueueUser) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatManageQueueUser) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatManageQueueUser) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ChatManageQueueUser) GetQueueId() string {
	if x != nil {
		return x.QueueId
	}
	return ""
}

func (x *ChatManageQueueUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type OaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Zalo     []*ZaloInfo     `protobuf:"bytes,1,rep,name=zalo,proto3" json:"zalo,omitempty"`
	Facebook []*FacebookInfo `protobuf:"bytes,2,rep,name=facebook,proto3" json:"facebook,omitempty"`
}

func (x *OaInfo) Reset() {
	*x = OaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OaInfo) ProtoMessage() {}

func (x *OaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OaInfo.ProtoReflect.Descriptor instead.
func (*OaInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{5}
}

func (x *OaInfo) GetZalo() []*ZaloInfo {
	if x != nil {
		return x.Zalo
	}
	return nil
}

func (x *OaInfo) GetFacebook() []*FacebookInfo {
	if x != nil {
		return x.Facebook
	}
	return nil
}

type ZaloInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId   string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa  string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Status string `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ZaloInfo) Reset() {
	*x = ZaloInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZaloInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZaloInfo) ProtoMessage() {}

func (x *ZaloInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZaloInfo.ProtoReflect.Descriptor instead.
func (*ZaloInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{6}
}

func (x *ZaloInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ZaloInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ZaloInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *ZaloInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *ZaloInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type FacebookInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId   string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	OaName string `protobuf:"bytes,3,opt,name=oa_name,json=oaName,proto3" json:"oa_name,omitempty"`
	UrlOa  string `protobuf:"bytes,4,opt,name=url_oa,json=urlOa,proto3" json:"url_oa,omitempty"`
	Avatar string `protobuf:"bytes,5,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *FacebookInfo) Reset() {
	*x = FacebookInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookInfo) ProtoMessage() {}

func (x *FacebookInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookInfo.ProtoReflect.Descriptor instead.
func (*FacebookInfo) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{7}
}

func (x *FacebookInfo) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FacebookInfo) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *FacebookInfo) GetOaName() string {
	if x != nil {
		return x.OaName
	}
	return ""
}

func (x *FacebookInfo) GetUrlOa() string {
	if x != nil {
		return x.UrlOa
	}
	return ""
}

func (x *FacebookInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *FacebookInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ChatConnectionApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TenantId          string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	ConnectionName    string                 `protobuf:"bytes,5,opt,name=connection_name,json=connectionName,proto3" json:"connection_name,omitempty"`
	ConnectionType    string                 `protobuf:"bytes,6,opt,name=connection_type,json=connectionType,proto3" json:"connection_type,omitempty"`
	ChatAppId         string                 `protobuf:"bytes,7,opt,name=chat_app_id,json=chatAppId,proto3" json:"chat_app_id,omitempty"`
	ConnectionQueueId string                 `protobuf:"bytes,8,opt,name=connection_queue_id,json=connectionQueueId,proto3" json:"connection_queue_id,omitempty"`
	ConnectionQueue   *ConnectionQueue       `protobuf:"bytes,9,opt,name=connection_queue,json=connectionQueue,proto3" json:"connection_queue,omitempty"`
	OaInfo            *OaInfo                `protobuf:"bytes,10,opt,name=oa_info,json=oaInfo,proto3" json:"oa_info,omitempty"`
	Status            string                 `protobuf:"bytes,11,opt,name=status,proto3" json:"status,omitempty"`
	ChatApp           *ChatApp               `protobuf:"bytes,12,opt,name=chat_app,json=chatApp,proto3" json:"chat_app,omitempty"`
}

func (x *ChatConnectionApp) Reset() {
	*x = ChatConnectionApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatConnectionApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatConnectionApp) ProtoMessage() {}

func (x *ChatConnectionApp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatConnectionApp.ProtoReflect.Descriptor instead.
func (*ChatConnectionApp) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{8}
}

func (x *ChatConnectionApp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatConnectionApp) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatConnectionApp) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatConnectionApp) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatConnectionApp) GetConnectionName() string {
	if x != nil {
		return x.ConnectionName
	}
	return ""
}

func (x *ChatConnectionApp) GetConnectionType() string {
	if x != nil {
		return x.ConnectionType
	}
	return ""
}

func (x *ChatConnectionApp) GetChatAppId() string {
	if x != nil {
		return x.ChatAppId
	}
	return ""
}

func (x *ChatConnectionApp) GetConnectionQueueId() string {
	if x != nil {
		return x.ConnectionQueueId
	}
	return ""
}

func (x *ChatConnectionApp) GetConnectionQueue() *ConnectionQueue {
	if x != nil {
		return x.ConnectionQueue
	}
	return nil
}

func (x *ChatConnectionApp) GetOaInfo() *OaInfo {
	if x != nil {
		return x.OaInfo
	}
	return nil
}

func (x *ChatConnectionApp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ChatConnectionApp) GetChatApp() *ChatApp {
	if x != nil {
		return x.ChatApp
	}
	return nil
}

type ChatApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	AppName   string                 `protobuf:"bytes,4,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *ChatApp) Reset() {
	*x = ChatApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatApp) ProtoMessage() {}

func (x *ChatApp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatApp.ProtoReflect.Descriptor instead.
func (*ChatApp) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{9}
}

func (x *ChatApp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatApp) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatApp) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatApp) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

type ChatManageQueueUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IsNew  bool   `protobuf:"varint,2,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`
}

func (x *ChatManageQueueUserRequest) Reset() {
	*x = ChatManageQueueUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatManageQueueUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatManageQueueUserRequest) ProtoMessage() {}

func (x *ChatManageQueueUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatManageQueueUserRequest.ProtoReflect.Descriptor instead.
func (*ChatManageQueueUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{10}
}

func (x *ChatManageQueueUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChatManageQueueUserRequest) GetIsNew() bool {
	if x != nil {
		return x.IsNew
	}
	return false
}

type ChatQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName     string `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Description   string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ChatRoutingId string `protobuf:"bytes,3,opt,name=chat_routing_id,json=chatRoutingId,proto3" json:"chat_routing_id,omitempty"`
	Status        string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChatQueueRequest) Reset() {
	*x = ChatQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatQueueRequest) ProtoMessage() {}

func (x *ChatQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatQueueRequest.ProtoReflect.Descriptor instead.
func (*ChatQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{11}
}

func (x *ChatQueueRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *ChatQueueRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChatQueueRequest) GetChatRoutingId() string {
	if x != nil {
		return x.ChatRoutingId
	}
	return ""
}

func (x *ChatQueueRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ChatQueueUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId []string `protobuf:"bytes,1,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ChatQueueUserRequest) Reset() {
	*x = ChatQueueUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatQueueUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatQueueUserRequest) ProtoMessage() {}

func (x *ChatQueueUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatQueueUserRequest.ProtoReflect.Descriptor instead.
func (*ChatQueueUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{12}
}

func (x *ChatQueueUserRequest) GetUserId() []string {
	if x != nil {
		return x.UserId
	}
	return nil
}

// get chat queues
type GetChatQueuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName string   `protobuf:"bytes,1,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	Limit     int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    int32    `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	QueueId   []string `protobuf:"bytes,4,rep,name=queue_id,json=queueId,proto3" json:"queue_id,omitempty"`
}

func (x *GetChatQueuesRequest) Reset() {
	*x = GetChatQueuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatQueuesRequest) ProtoMessage() {}

func (x *GetChatQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatQueuesRequest.ProtoReflect.Descriptor instead.
func (*GetChatQueuesRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{13}
}

func (x *GetChatQueuesRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *GetChatQueuesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatQueuesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetChatQueuesRequest) GetQueueId() []string {
	if x != nil {
		return x.QueueId
	}
	return nil
}

type GetChatQueuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChatQueue `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32        `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Limit   int32        `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32        `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatQueuesResponse) Reset() {
	*x = GetChatQueuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatQueuesResponse) ProtoMessage() {}

func (x *GetChatQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatQueuesResponse.ProtoReflect.Descriptor instead.
func (*GetChatQueuesResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{14}
}

func (x *GetChatQueuesResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatQueuesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatQueuesResponse) GetData() []*ChatQueue {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChatQueuesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChatQueuesResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatQueuesResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// get queue by id
type GetChatQueueByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetChatQueueByIdRequest) Reset() {
	*x = GetChatQueueByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatQueueByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatQueueByIdRequest) ProtoMessage() {}

func (x *GetChatQueueByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatQueueByIdRequest.ProtoReflect.Descriptor instead.
func (*GetChatQueueByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{15}
}

func (x *GetChatQueueByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetChatQueueByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string     `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ChatQueue `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetChatQueueByIdResponse) Reset() {
	*x = GetChatQueueByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatQueueByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatQueueByIdResponse) ProtoMessage() {}

func (x *GetChatQueueByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatQueueByIdResponse.ProtoReflect.Descriptor instead.
func (*GetChatQueueByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{16}
}

func (x *GetChatQueueByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatQueueByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatQueueByIdResponse) GetData() *ChatQueue {
	if x != nil {
		return x.Data
	}
	return nil
}

// create queue
type PostChatQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatQueue           *ChatQueueRequest           `protobuf:"bytes,1,opt,name=chat_queue,json=chatQueue,proto3" json:"chat_queue,omitempty"`
	ChatQueueUser       *ChatQueueUserRequest       `protobuf:"bytes,2,opt,name=chat_queue_user,json=chatQueueUser,proto3" json:"chat_queue_user,omitempty"`
	ChatManageQueueUser *ChatManageQueueUserRequest `protobuf:"bytes,3,opt,name=chat_manage_queue_user,json=chatManageQueueUser,proto3" json:"chat_manage_queue_user,omitempty"`
}

func (x *PostChatQueueRequest) Reset() {
	*x = PostChatQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatQueueRequest) ProtoMessage() {}

func (x *PostChatQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatQueueRequest.ProtoReflect.Descriptor instead.
func (*PostChatQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{17}
}

func (x *PostChatQueueRequest) GetChatQueue() *ChatQueueRequest {
	if x != nil {
		return x.ChatQueue
	}
	return nil
}

func (x *PostChatQueueRequest) GetChatQueueUser() *ChatQueueUserRequest {
	if x != nil {
		return x.ChatQueueUser
	}
	return nil
}

func (x *PostChatQueueRequest) GetChatManageQueueUser() *ChatManageQueueUserRequest {
	if x != nil {
		return x.ChatManageQueueUser
	}
	return nil
}

type PostChatQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostChatQueueResponse) Reset() {
	*x = PostChatQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatQueueResponse) ProtoMessage() {}

func (x *PostChatQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatQueueResponse.ProtoReflect.Descriptor instead.
func (*PostChatQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{18}
}

func (x *PostChatQueueResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostChatQueueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PostChatQueueResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// update queue by id
type PutChatQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatQueue           *ChatQueueRequest           `protobuf:"bytes,2,opt,name=chat_queue,json=chatQueue,proto3" json:"chat_queue,omitempty"`
	ChatQueueUser       *ChatQueueUserRequest       `protobuf:"bytes,3,opt,name=chat_queue_user,json=chatQueueUser,proto3" json:"chat_queue_user,omitempty"`
	ChatManageQueueUser *ChatManageQueueUserRequest `protobuf:"bytes,4,opt,name=chat_manage_queue_user,json=chatManageQueueUser,proto3" json:"chat_manage_queue_user,omitempty"`
}

func (x *PutChatQueueRequest) Reset() {
	*x = PutChatQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatQueueRequest) ProtoMessage() {}

func (x *PutChatQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatQueueRequest.ProtoReflect.Descriptor instead.
func (*PutChatQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{19}
}

func (x *PutChatQueueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatQueueRequest) GetChatQueue() *ChatQueueRequest {
	if x != nil {
		return x.ChatQueue
	}
	return nil
}

func (x *PutChatQueueRequest) GetChatQueueUser() *ChatQueueUserRequest {
	if x != nil {
		return x.ChatQueueUser
	}
	return nil
}

func (x *PutChatQueueRequest) GetChatManageQueueUser() *ChatManageQueueUserRequest {
	if x != nil {
		return x.ChatManageQueueUser
	}
	return nil
}

type PutChatQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatQueueResponse) Reset() {
	*x = PutChatQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatQueueResponse) ProtoMessage() {}

func (x *PutChatQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatQueueResponse.ProtoReflect.Descriptor instead.
func (*PutChatQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{20}
}

func (x *PutChatQueueResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChatQueueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// update queue status by id
type PutChatQueueStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *PutChatQueueStatusRequest) Reset() {
	*x = PutChatQueueStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatQueueStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatQueueStatusRequest) ProtoMessage() {}

func (x *PutChatQueueStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatQueueStatusRequest.ProtoReflect.Descriptor instead.
func (*PutChatQueueStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{21}
}

func (x *PutChatQueueStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatQueueStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PutChatQueueStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatQueueStatusResponse) Reset() {
	*x = PutChatQueueStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatQueueStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatQueueStatusResponse) ProtoMessage() {}

func (x *PutChatQueueStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatQueueStatusResponse.ProtoReflect.Descriptor instead.
func (*PutChatQueueStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{22}
}

func (x *PutChatQueueStatusResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChatQueueStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// delete queue by id
type DeleteChatQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChatQueueRequest) Reset() {
	*x = DeleteChatQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatQueueRequest) ProtoMessage() {}

func (x *DeleteChatQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatQueueRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatQueueRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteChatQueueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteChatQueueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteChatQueueResponse) Reset() {
	*x = DeleteChatQueueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatQueueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatQueueResponse) ProtoMessage() {}

func (x *DeleteChatQueueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_queue_chat_queue_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatQueueResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatQueueResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_queue_chat_queue_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteChatQueueResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteChatQueueResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_queue_chat_queue_proto protoreflect.FileDescriptor

var file_proto_chat_queue_chat_queue_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88,
	0x05, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x54, 0x0a, 0x15, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x13, 0x63, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x46, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12,
	0x50, 0x0a, 0x11, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x0f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xf3, 0x01, 0x0a, 0x0b, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x6c,
	0x69, 0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x83, 0x03, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x13, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x70, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x52, 0x11, 0x63, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12,
	0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x22, 0xd5, 0x02, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x91, 0x02,
	0x0a, 0x13, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x72, 0x0a, 0x06, 0x4f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x04, 0x7a,
	0x61, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x5a, 0x61, 0x6c, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x7a, 0x61, 0x6c, 0x6f, 0x12, 0x39, 0x0a, 0x08, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x7e, 0x0a, 0x08, 0x5a, 0x61, 0x6c, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75, 0x72, 0x6c, 0x5f, 0x6f, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c, 0x4f, 0x61, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a,
	0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x75,
	0x72, 0x6c, 0x5f, 0x6f, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75, 0x72, 0x6c,
	0x4f, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xa2, 0x04, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x10, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x61, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x4f, 0x61, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x6f, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x74, 0x41, 0x70, 0x70, 0x22, 0xaa, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74,
	0x41, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4c, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4e,
	0x65, 0x77, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x71, 0x75, 0x65, 0x75, 0x65, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x78, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x89, 0x02, 0x0a, 0x14, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x13, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x98, 0x02,
	0x0a, 0x13, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x60, 0x0a, 0x16, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x13, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x14, 0x50, 0x75, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x43,
	0x0a, 0x19, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x4a, 0x0a, 0x1a, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x17, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x32, 0xf0, 0x06, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12,
	0x17, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x62, 0x73, 0x73,
	0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x25, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61,
	0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12,
	0x8b, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e,
	0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x1a,
	0x1c, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa4, 0x01,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x75,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x1a,
	0x23, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x61, 0x74, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8e, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x2a, 0x1c, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x71, 0x75, 0x65, 0x75, 0x65,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x66, 0x69, 0x6e, 0x73, 0x2d,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x65,
	0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_queue_chat_queue_proto_rawDescOnce sync.Once
	file_proto_chat_queue_chat_queue_proto_rawDescData = file_proto_chat_queue_chat_queue_proto_rawDesc
)

func file_proto_chat_queue_chat_queue_proto_rawDescGZIP() []byte {
	file_proto_chat_queue_chat_queue_proto_rawDescOnce.Do(func() {
		file_proto_chat_queue_chat_queue_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_queue_chat_queue_proto_rawDescData)
	})
	return file_proto_chat_queue_chat_queue_proto_rawDescData
}

var file_proto_chat_queue_chat_queue_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_proto_chat_queue_chat_queue_proto_goTypes = []interface{}{
	(*ChatQueue)(nil),                  // 0: proto.chatQueue.ChatQueue
	(*ChatRouting)(nil),                // 1: proto.chatQueue.ChatRouting
	(*ConnectionQueue)(nil),            // 2: proto.chatQueue.ConnectionQueue
	(*ChatQueueUser)(nil),              // 3: proto.chatQueue.ChatQueueUser
	(*ChatManageQueueUser)(nil),        // 4: proto.chatQueue.ChatManageQueueUser
	(*OaInfo)(nil),                     // 5: proto.chatQueue.OaInfo
	(*ZaloInfo)(nil),                   // 6: proto.chatQueue.ZaloInfo
	(*FacebookInfo)(nil),               // 7: proto.chatQueue.FacebookInfo
	(*ChatConnectionApp)(nil),          // 8: proto.chatQueue.ChatConnectionApp
	(*ChatApp)(nil),                    // 9: proto.chatQueue.ChatApp
	(*ChatManageQueueUserRequest)(nil), // 10: proto.chatQueue.ChatManageQueueUserRequest
	(*ChatQueueRequest)(nil),           // 11: proto.chatQueue.ChatQueueRequest
	(*ChatQueueUserRequest)(nil),       // 12: proto.chatQueue.ChatQueueUserRequest
	(*GetChatQueuesRequest)(nil),       // 13: proto.chatQueue.GetChatQueuesRequest
	(*GetChatQueuesResponse)(nil),      // 14: proto.chatQueue.GetChatQueuesResponse
	(*GetChatQueueByIdRequest)(nil),    // 15: proto.chatQueue.GetChatQueueByIdRequest
	(*GetChatQueueByIdResponse)(nil),   // 16: proto.chatQueue.GetChatQueueByIdResponse
	(*PostChatQueueRequest)(nil),       // 17: proto.chatQueue.PostChatQueueRequest
	(*PostChatQueueResponse)(nil),      // 18: proto.chatQueue.PostChatQueueResponse
	(*PutChatQueueRequest)(nil),        // 19: proto.chatQueue.PutChatQueueRequest
	(*PutChatQueueResponse)(nil),       // 20: proto.chatQueue.PutChatQueueResponse
	(*PutChatQueueStatusRequest)(nil),  // 21: proto.chatQueue.PutChatQueueStatusRequest
	(*PutChatQueueStatusResponse)(nil), // 22: proto.chatQueue.PutChatQueueStatusResponse
	(*DeleteChatQueueRequest)(nil),     // 23: proto.chatQueue.DeleteChatQueueRequest
	(*DeleteChatQueueResponse)(nil),    // 24: proto.chatQueue.DeleteChatQueueResponse
	(*timestamppb.Timestamp)(nil),      // 25: google.protobuf.Timestamp
}
var file_proto_chat_queue_chat_queue_proto_depIdxs = []int32{
	25, // 0: proto.chatQueue.ChatQueue.created_at:type_name -> google.protobuf.Timestamp
	25, // 1: proto.chatQueue.ChatQueue.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: proto.chatQueue.ChatQueue.chat_routing:type_name -> proto.chatQueue.ChatRouting
	2,  // 3: proto.chatQueue.ChatQueue.chat_connection_queue:type_name -> proto.chatQueue.ConnectionQueue
	3,  // 4: proto.chatQueue.ChatQueue.chat_queue_user:type_name -> proto.chatQueue.ChatQueueUser
	4,  // 5: proto.chatQueue.ChatQueue.manage_queue_user:type_name -> proto.chatQueue.ChatManageQueueUser
	25, // 6: proto.chatQueue.ChatRouting.created_at:type_name -> google.protobuf.Timestamp
	25, // 7: proto.chatQueue.ChatRouting.updated_at:type_name -> google.protobuf.Timestamp
	25, // 8: proto.chatQueue.ConnectionQueue.created_at:type_name -> google.protobuf.Timestamp
	25, // 9: proto.chatQueue.ConnectionQueue.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 10: proto.chatQueue.ConnectionQueue.chat_connection_app:type_name -> proto.chatQueue.ChatConnectionApp
	0,  // 11: proto.chatQueue.ConnectionQueue.chat_queue:type_name -> proto.chatQueue.ChatQueue
	25, // 12: proto.chatQueue.ChatQueueUser.created_at:type_name -> google.protobuf.Timestamp
	25, // 13: proto.chatQueue.ChatQueueUser.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 14: proto.chatQueue.ChatQueueUser.chat_queue:type_name -> proto.chatQueue.ChatQueue
	25, // 15: proto.chatQueue.ChatManageQueueUser.created_at:type_name -> google.protobuf.Timestamp
	25, // 16: proto.chatQueue.ChatManageQueueUser.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 17: proto.chatQueue.OaInfo.zalo:type_name -> proto.chatQueue.ZaloInfo
	7,  // 18: proto.chatQueue.OaInfo.facebook:type_name -> proto.chatQueue.FacebookInfo
	25, // 19: proto.chatQueue.ChatConnectionApp.CreatedAt:type_name -> google.protobuf.Timestamp
	25, // 20: proto.chatQueue.ChatConnectionApp.UpdatedAt:type_name -> google.protobuf.Timestamp
	2,  // 21: proto.chatQueue.ChatConnectionApp.connection_queue:type_name -> proto.chatQueue.ConnectionQueue
	5,  // 22: proto.chatQueue.ChatConnectionApp.oa_info:type_name -> proto.chatQueue.OaInfo
	9,  // 23: proto.chatQueue.ChatConnectionApp.chat_app:type_name -> proto.chatQueue.ChatApp
	25, // 24: proto.chatQueue.ChatApp.created_at:type_name -> google.protobuf.Timestamp
	25, // 25: proto.chatQueue.ChatApp.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 26: proto.chatQueue.GetChatQueuesResponse.data:type_name -> proto.chatQueue.ChatQueue
	0,  // 27: proto.chatQueue.GetChatQueueByIdResponse.data:type_name -> proto.chatQueue.ChatQueue
	11, // 28: proto.chatQueue.PostChatQueueRequest.chat_queue:type_name -> proto.chatQueue.ChatQueueRequest
	12, // 29: proto.chatQueue.PostChatQueueRequest.chat_queue_user:type_name -> proto.chatQueue.ChatQueueUserRequest
	10, // 30: proto.chatQueue.PostChatQueueRequest.chat_manage_queue_user:type_name -> proto.chatQueue.ChatManageQueueUserRequest
	11, // 31: proto.chatQueue.PutChatQueueRequest.chat_queue:type_name -> proto.chatQueue.ChatQueueRequest
	12, // 32: proto.chatQueue.PutChatQueueRequest.chat_queue_user:type_name -> proto.chatQueue.ChatQueueUserRequest
	10, // 33: proto.chatQueue.PutChatQueueRequest.chat_manage_queue_user:type_name -> proto.chatQueue.ChatManageQueueUserRequest
	13, // 34: proto.chatQueue.ChatQueueService.GetChatQueues:input_type -> proto.chatQueue.GetChatQueuesRequest
	15, // 35: proto.chatQueue.ChatQueueService.GetChatQueueById:input_type -> proto.chatQueue.GetChatQueueByIdRequest
	17, // 36: proto.chatQueue.ChatQueueService.InsertChatQueue:input_type -> proto.chatQueue.PostChatQueueRequest
	19, // 37: proto.chatQueue.ChatQueueService.UpdateChatQueueById:input_type -> proto.chatQueue.PutChatQueueRequest
	21, // 38: proto.chatQueue.ChatQueueService.UpdateChatQueueStatusById:input_type -> proto.chatQueue.PutChatQueueStatusRequest
	23, // 39: proto.chatQueue.ChatQueueService.DeleteChatQueueById:input_type -> proto.chatQueue.DeleteChatQueueRequest
	14, // 40: proto.chatQueue.ChatQueueService.GetChatQueues:output_type -> proto.chatQueue.GetChatQueuesResponse
	16, // 41: proto.chatQueue.ChatQueueService.GetChatQueueById:output_type -> proto.chatQueue.GetChatQueueByIdResponse
	18, // 42: proto.chatQueue.ChatQueueService.InsertChatQueue:output_type -> proto.chatQueue.PostChatQueueResponse
	20, // 43: proto.chatQueue.ChatQueueService.UpdateChatQueueById:output_type -> proto.chatQueue.PutChatQueueResponse
	22, // 44: proto.chatQueue.ChatQueueService.UpdateChatQueueStatusById:output_type -> proto.chatQueue.PutChatQueueStatusResponse
	24, // 45: proto.chatQueue.ChatQueueService.DeleteChatQueueById:output_type -> proto.chatQueue.DeleteChatQueueResponse
	40, // [40:46] is the sub-list for method output_type
	34, // [34:40] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_proto_chat_queue_chat_queue_proto_init() }
func file_proto_chat_queue_chat_queue_proto_init() {
	if File_proto_chat_queue_chat_queue_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_queue_chat_queue_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatRouting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatQueueUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatManageQueueUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZaloInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatConnectionApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatManageQueueUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatQueueUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatQueuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatQueuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatQueueByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatQueueByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatQueueStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatQueueStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_queue_chat_queue_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatQueueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_queue_chat_queue_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_queue_chat_queue_proto_goTypes,
		DependencyIndexes: file_proto_chat_queue_chat_queue_proto_depIdxs,
		MessageInfos:      file_proto_chat_queue_chat_queue_proto_msgTypes,
	}.Build()
	File_proto_chat_queue_chat_queue_proto = out.File
	file_proto_chat_queue_chat_queue_proto_rawDesc = nil
	file_proto_chat_queue_chat_queue_proto_goTypes = nil
	file_proto_chat_queue_chat_queue_proto_depIdxs = nil
}
