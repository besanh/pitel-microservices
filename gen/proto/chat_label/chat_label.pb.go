// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: proto/chat_label/chat_label.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatLabel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	TenantId        string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	AppId           string                 `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId            string                 `protobuf:"bytes,6,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	LabelName       string                 `protobuf:"bytes,7,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	LabelType       string                 `protobuf:"bytes,8,opt,name=label_type,json=labelType,proto3" json:"label_type,omitempty"`
	ExternalLabelId string                 `protobuf:"bytes,9,opt,name=external_label_id,json=externalLabelId,proto3" json:"external_label_id,omitempty"`
	LabelColor      string                 `protobuf:"bytes,10,opt,name=label_color,json=labelColor,proto3" json:"label_color,omitempty"`
	LabelStatus     bool                   `protobuf:"varint,11,opt,name=label_status,json=labelStatus,proto3" json:"label_status,omitempty"`
	CreatedBy       string                 `protobuf:"bytes,12,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy       string                 `protobuf:"bytes,13,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *ChatLabel) Reset() {
	*x = ChatLabel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatLabel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatLabel) ProtoMessage() {}

func (x *ChatLabel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatLabel.ProtoReflect.Descriptor instead.
func (*ChatLabel) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{0}
}

func (x *ChatLabel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatLabel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ChatLabel) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ChatLabel) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ChatLabel) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ChatLabel) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *ChatLabel) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *ChatLabel) GetLabelType() string {
	if x != nil {
		return x.LabelType
	}
	return ""
}

func (x *ChatLabel) GetExternalLabelId() string {
	if x != nil {
		return x.ExternalLabelId
	}
	return ""
}

func (x *ChatLabel) GetLabelColor() string {
	if x != nil {
		return x.LabelColor
	}
	return ""
}

func (x *ChatLabel) GetLabelStatus() bool {
	if x != nil {
		return x.LabelStatus
	}
	return false
}

func (x *ChatLabel) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ChatLabel) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

// get chat labels
type GetChatLabelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit           int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Status          string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	IsSearchExactly string `protobuf:"bytes,4,opt,name=is_search_exactly,json=isSearchExactly,proto3" json:"is_search_exactly,omitempty"`
	AppId           string `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId            string `protobuf:"bytes,6,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	LabelType       string `protobuf:"bytes,7,opt,name=label_type,json=labelType,proto3" json:"label_type,omitempty"`
	LabelName       string `protobuf:"bytes,8,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	LabelColor      string `protobuf:"bytes,9,opt,name=label_color,json=labelColor,proto3" json:"label_color,omitempty"`
	ExternalLabelId string `protobuf:"bytes,10,opt,name=external_label_id,json=externalLabelId,proto3" json:"external_label_id,omitempty"`
}

func (x *GetChatLabelsRequest) Reset() {
	*x = GetChatLabelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatLabelsRequest) ProtoMessage() {}

func (x *GetChatLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatLabelsRequest.ProtoReflect.Descriptor instead.
func (*GetChatLabelsRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{1}
}

func (x *GetChatLabelsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatLabelsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetChatLabelsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetChatLabelsRequest) GetIsSearchExactly() string {
	if x != nil {
		return x.IsSearchExactly
	}
	return ""
}

func (x *GetChatLabelsRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetChatLabelsRequest) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *GetChatLabelsRequest) GetLabelType() string {
	if x != nil {
		return x.LabelType
	}
	return ""
}

func (x *GetChatLabelsRequest) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *GetChatLabelsRequest) GetLabelColor() string {
	if x != nil {
		return x.LabelColor
	}
	return ""
}

func (x *GetChatLabelsRequest) GetExternalLabelId() string {
	if x != nil {
		return x.ExternalLabelId
	}
	return ""
}

type GetChatLabelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string       `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string       `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*ChatLabel `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32        `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Limit   int32        `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int32        `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetChatLabelsResponse) Reset() {
	*x = GetChatLabelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatLabelsResponse) ProtoMessage() {}

func (x *GetChatLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatLabelsResponse.ProtoReflect.Descriptor instead.
func (*GetChatLabelsResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{2}
}

func (x *GetChatLabelsResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatLabelsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatLabelsResponse) GetData() []*ChatLabel {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChatLabelsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetChatLabelsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetChatLabelsResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// get label by id
type GetChatLabelByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetChatLabelByIdRequest) Reset() {
	*x = GetChatLabelByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatLabelByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatLabelByIdRequest) ProtoMessage() {}

func (x *GetChatLabelByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatLabelByIdRequest.ProtoReflect.Descriptor instead.
func (*GetChatLabelByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{3}
}

func (x *GetChatLabelByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetChatLabelByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string     `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *ChatLabel `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetChatLabelByIdResponse) Reset() {
	*x = GetChatLabelByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatLabelByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatLabelByIdResponse) ProtoMessage() {}

func (x *GetChatLabelByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatLabelByIdResponse.ProtoReflect.Descriptor instead.
func (*GetChatLabelByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{4}
}

func (x *GetChatLabelByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetChatLabelByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatLabelByIdResponse) GetData() *ChatLabel {
	if x != nil {
		return x.Data
	}
	return nil
}

// create label
type PostChatLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId       string `protobuf:"bytes,2,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	LabelName  string `protobuf:"bytes,3,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	LabelColor string `protobuf:"bytes,4,opt,name=label_color,json=labelColor,proto3" json:"label_color,omitempty"`
}

func (x *PostChatLabelRequest) Reset() {
	*x = PostChatLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatLabelRequest) ProtoMessage() {}

func (x *PostChatLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatLabelRequest.ProtoReflect.Descriptor instead.
func (*PostChatLabelRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{5}
}

func (x *PostChatLabelRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PostChatLabelRequest) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *PostChatLabelRequest) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *PostChatLabelRequest) GetLabelColor() string {
	if x != nil {
		return x.LabelColor
	}
	return ""
}

type PostChatLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Id      string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PostChatLabelResponse) Reset() {
	*x = PostChatLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostChatLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostChatLabelResponse) ProtoMessage() {}

func (x *PostChatLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostChatLabelResponse.ProtoReflect.Descriptor instead.
func (*PostChatLabelResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{6}
}

func (x *PostChatLabelResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PostChatLabelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PostChatLabelResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// update label by id
type PutChatLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId      string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OaId       string `protobuf:"bytes,3,opt,name=oa_id,json=oaId,proto3" json:"oa_id,omitempty"`
	LabelName  string `protobuf:"bytes,4,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	LabelColor string `protobuf:"bytes,5,opt,name=label_color,json=labelColor,proto3" json:"label_color,omitempty"`
}

func (x *PutChatLabelRequest) Reset() {
	*x = PutChatLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatLabelRequest) ProtoMessage() {}

func (x *PutChatLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatLabelRequest.ProtoReflect.Descriptor instead.
func (*PutChatLabelRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{7}
}

func (x *PutChatLabelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutChatLabelRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PutChatLabelRequest) GetOaId() string {
	if x != nil {
		return x.OaId
	}
	return ""
}

func (x *PutChatLabelRequest) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *PutChatLabelRequest) GetLabelColor() string {
	if x != nil {
		return x.LabelColor
	}
	return ""
}

type PutChatLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PutChatLabelResponse) Reset() {
	*x = PutChatLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutChatLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutChatLabelResponse) ProtoMessage() {}

func (x *PutChatLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutChatLabelResponse.ProtoReflect.Descriptor instead.
func (*PutChatLabelResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{8}
}

func (x *PutChatLabelResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PutChatLabelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// delete label by id
type DeleteChatLabelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteChatLabelRequest) Reset() {
	*x = DeleteChatLabelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatLabelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatLabelRequest) ProtoMessage() {}

func (x *DeleteChatLabelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatLabelRequest.ProtoReflect.Descriptor instead.
func (*DeleteChatLabelRequest) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteChatLabelRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteChatLabelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteChatLabelResponse) Reset() {
	*x = DeleteChatLabelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_chat_label_chat_label_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChatLabelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChatLabelResponse) ProtoMessage() {}

func (x *DeleteChatLabelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chat_label_chat_label_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChatLabelResponse.ProtoReflect.Descriptor instead.
func (*DeleteChatLabelResponse) Descriptor() ([]byte, []int) {
	return file_proto_chat_label_chat_label_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteChatLabelResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DeleteChatLabelResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_chat_label_chat_label_proto protoreflect.FileDescriptor

var file_proto_chat_label_chat_label_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc6,
	0x03, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0xbf, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x65, 0x78, 0x61, 0x63, 0x74, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x78, 0x61, 0x63, 0x74,
	0x6c, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2a, 0x0a,
	0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x78, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x50,
	0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x55, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x61, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x44, 0x0a, 0x14, 0x50, 0x75,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x32, 0xc9, 0x05, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x12, 0x17, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x2d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x8d, 0x01, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x28,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x62, 0x73,
	0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x0f, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68,
	0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x8b, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x50, 0x75, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x2e, 0x50, 0x75, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a,
	0x1a, 0x1c, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x74, 0x2d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8e,
	0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x2a, 0x1c, 0x2f, 0x62, 0x73, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x74, 0x2d, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x42,
	0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65,
	0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x70, 0x69, 0x74, 0x65, 0x6c, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_chat_label_chat_label_proto_rawDescOnce sync.Once
	file_proto_chat_label_chat_label_proto_rawDescData = file_proto_chat_label_chat_label_proto_rawDesc
)

func file_proto_chat_label_chat_label_proto_rawDescGZIP() []byte {
	file_proto_chat_label_chat_label_proto_rawDescOnce.Do(func() {
		file_proto_chat_label_chat_label_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_chat_label_chat_label_proto_rawDescData)
	})
	return file_proto_chat_label_chat_label_proto_rawDescData
}

var file_proto_chat_label_chat_label_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_chat_label_chat_label_proto_goTypes = []interface{}{
	(*ChatLabel)(nil),                // 0: proto.chatLabel.ChatLabel
	(*GetChatLabelsRequest)(nil),     // 1: proto.chatLabel.GetChatLabelsRequest
	(*GetChatLabelsResponse)(nil),    // 2: proto.chatLabel.GetChatLabelsResponse
	(*GetChatLabelByIdRequest)(nil),  // 3: proto.chatLabel.GetChatLabelByIdRequest
	(*GetChatLabelByIdResponse)(nil), // 4: proto.chatLabel.GetChatLabelByIdResponse
	(*PostChatLabelRequest)(nil),     // 5: proto.chatLabel.PostChatLabelRequest
	(*PostChatLabelResponse)(nil),    // 6: proto.chatLabel.PostChatLabelResponse
	(*PutChatLabelRequest)(nil),      // 7: proto.chatLabel.PutChatLabelRequest
	(*PutChatLabelResponse)(nil),     // 8: proto.chatLabel.PutChatLabelResponse
	(*DeleteChatLabelRequest)(nil),   // 9: proto.chatLabel.DeleteChatLabelRequest
	(*DeleteChatLabelResponse)(nil),  // 10: proto.chatLabel.DeleteChatLabelResponse
	(*timestamppb.Timestamp)(nil),    // 11: google.protobuf.Timestamp
}
var file_proto_chat_label_chat_label_proto_depIdxs = []int32{
	11, // 0: proto.chatLabel.ChatLabel.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: proto.chatLabel.ChatLabel.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: proto.chatLabel.GetChatLabelsResponse.data:type_name -> proto.chatLabel.ChatLabel
	0,  // 3: proto.chatLabel.GetChatLabelByIdResponse.data:type_name -> proto.chatLabel.ChatLabel
	1,  // 4: proto.chatLabel.ChatLabelService.GetChatLabels:input_type -> proto.chatLabel.GetChatLabelsRequest
	3,  // 5: proto.chatLabel.ChatLabelService.GetChatLabelById:input_type -> proto.chatLabel.GetChatLabelByIdRequest
	5,  // 6: proto.chatLabel.ChatLabelService.InsertChatLabel:input_type -> proto.chatLabel.PostChatLabelRequest
	7,  // 7: proto.chatLabel.ChatLabelService.UpdateChatLabelById:input_type -> proto.chatLabel.PutChatLabelRequest
	9,  // 8: proto.chatLabel.ChatLabelService.DeleteChatLabelById:input_type -> proto.chatLabel.DeleteChatLabelRequest
	2,  // 9: proto.chatLabel.ChatLabelService.GetChatLabels:output_type -> proto.chatLabel.GetChatLabelsResponse
	4,  // 10: proto.chatLabel.ChatLabelService.GetChatLabelById:output_type -> proto.chatLabel.GetChatLabelByIdResponse
	6,  // 11: proto.chatLabel.ChatLabelService.InsertChatLabel:output_type -> proto.chatLabel.PostChatLabelResponse
	8,  // 12: proto.chatLabel.ChatLabelService.UpdateChatLabelById:output_type -> proto.chatLabel.PutChatLabelResponse
	10, // 13: proto.chatLabel.ChatLabelService.DeleteChatLabelById:output_type -> proto.chatLabel.DeleteChatLabelResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_chat_label_chat_label_proto_init() }
func file_proto_chat_label_chat_label_proto_init() {
	if File_proto_chat_label_chat_label_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_chat_label_chat_label_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatLabel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatLabelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatLabelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatLabelByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatLabelByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostChatLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutChatLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatLabelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_chat_label_chat_label_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChatLabelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_chat_label_chat_label_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chat_label_chat_label_proto_goTypes,
		DependencyIndexes: file_proto_chat_label_chat_label_proto_depIdxs,
		MessageInfos:      file_proto_chat_label_chat_label_proto_msgTypes,
	}.Build()
	File_proto_chat_label_chat_label_proto = out.File
	file_proto_chat_label_chat_label_proto_rawDesc = nil
	file_proto_chat_label_chat_label_proto_goTypes = nil
	file_proto_chat_label_chat_label_proto_depIdxs = nil
}
