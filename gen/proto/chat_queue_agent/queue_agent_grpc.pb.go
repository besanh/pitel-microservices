// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: proto/chat_queue_agent/queue_agent.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	QueueAgentService_InsertQueueAgent_FullMethodName = "/proto.chat_queue_agent.QueueAgentService/InsertQueueAgent"
)

// QueueAgentServiceClient is the client API for QueueAgentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QueueAgentServiceClient interface {
	InsertQueueAgent(ctx context.Context, in *QueueAgentBodyRequest, opts ...grpc.CallOption) (*QueueAgentResponse, error)
}

type queueAgentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQueueAgentServiceClient(cc grpc.ClientConnInterface) QueueAgentServiceClient {
	return &queueAgentServiceClient{cc}
}

func (c *queueAgentServiceClient) InsertQueueAgent(ctx context.Context, in *QueueAgentBodyRequest, opts ...grpc.CallOption) (*QueueAgentResponse, error) {
	out := new(QueueAgentResponse)
	err := c.cc.Invoke(ctx, QueueAgentService_InsertQueueAgent_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueueAgentServiceServer is the server API for QueueAgentService service.
// All implementations should embed UnimplementedQueueAgentServiceServer
// for forward compatibility
type QueueAgentServiceServer interface {
	InsertQueueAgent(context.Context, *QueueAgentBodyRequest) (*QueueAgentResponse, error)
}

// UnimplementedQueueAgentServiceServer should be embedded to have forward compatible implementations.
type UnimplementedQueueAgentServiceServer struct {
}

func (UnimplementedQueueAgentServiceServer) InsertQueueAgent(context.Context, *QueueAgentBodyRequest) (*QueueAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertQueueAgent not implemented")
}

// UnsafeQueueAgentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QueueAgentServiceServer will
// result in compilation errors.
type UnsafeQueueAgentServiceServer interface {
	mustEmbedUnimplementedQueueAgentServiceServer()
}

func RegisterQueueAgentServiceServer(s grpc.ServiceRegistrar, srv QueueAgentServiceServer) {
	s.RegisterService(&QueueAgentService_ServiceDesc, srv)
}

func _QueueAgentService_InsertQueueAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueueAgentBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueueAgentServiceServer).InsertQueueAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: QueueAgentService_InsertQueueAgent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueueAgentServiceServer).InsertQueueAgent(ctx, req.(*QueueAgentBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QueueAgentService_ServiceDesc is the grpc.ServiceDesc for QueueAgentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QueueAgentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.chat_queue_agent.QueueAgentService",
	HandlerType: (*QueueAgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertQueueAgent",
			Handler:    _QueueAgentService_InsertQueueAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/chat_queue_agent/queue_agent.proto",
}
