// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/routing_config/routing_config.proto

package pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RoutingConfigBodyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoutingName   string         `protobuf:"bytes,1,opt,name=routing_name,json=routingName,proto3" json:"routing_name,omitempty"`
	RoutingType   string         `protobuf:"bytes,2,opt,name=routing_type,json=routingType,proto3" json:"routing_type,omitempty"`
	BrandName     string         `protobuf:"bytes,3,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	RoutingFlow   *RoutingFlow   `protobuf:"bytes,4,opt,name=routing_flow,json=routingFlow,proto3" json:"routing_flow,omitempty"`
	RoutingOption *RoutingOption `protobuf:"bytes,5,opt,name=routing_option,json=routingOption,proto3" json:"routing_option,omitempty"`
	Status        bool           `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoutingConfigBodyRequest) Reset() {
	*x = RoutingConfigBodyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingConfigBodyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingConfigBodyRequest) ProtoMessage() {}

func (x *RoutingConfigBodyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingConfigBodyRequest.ProtoReflect.Descriptor instead.
func (*RoutingConfigBodyRequest) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{0}
}

func (x *RoutingConfigBodyRequest) GetRoutingName() string {
	if x != nil {
		return x.RoutingName
	}
	return ""
}

func (x *RoutingConfigBodyRequest) GetRoutingType() string {
	if x != nil {
		return x.RoutingType
	}
	return ""
}

func (x *RoutingConfigBodyRequest) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *RoutingConfigBodyRequest) GetRoutingFlow() *RoutingFlow {
	if x != nil {
		return x.RoutingFlow
	}
	return nil
}

func (x *RoutingConfigBodyRequest) GetRoutingOption() *RoutingOption {
	if x != nil {
		return x.RoutingOption
	}
	return nil
}

func (x *RoutingConfigBodyRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type RoutingConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit       int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset      int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	RoutingName string   `protobuf:"bytes,3,opt,name=routing_name,json=routingName,proto3" json:"routing_name,omitempty"`
	RoutingType []string `protobuf:"bytes,4,rep,name=routing_type,json=routingType,proto3" json:"routing_type,omitempty"`
	BrandName   string   `protobuf:"bytes,5,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	Status      string   `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoutingConfigRequest) Reset() {
	*x = RoutingConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingConfigRequest) ProtoMessage() {}

func (x *RoutingConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingConfigRequest.ProtoReflect.Descriptor instead.
func (*RoutingConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{1}
}

func (x *RoutingConfigRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RoutingConfigRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RoutingConfigRequest) GetRoutingName() string {
	if x != nil {
		return x.RoutingName
	}
	return ""
}

func (x *RoutingConfigRequest) GetRoutingType() []string {
	if x != nil {
		return x.RoutingType
	}
	return nil
}

func (x *RoutingConfigRequest) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *RoutingConfigRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type RoutingConfigPutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RoutingName   string         `protobuf:"bytes,2,opt,name=routing_name,json=routingName,proto3" json:"routing_name,omitempty"`
	RoutingType   string         `protobuf:"bytes,3,opt,name=routing_type,json=routingType,proto3" json:"routing_type,omitempty"`
	BrandName     string         `protobuf:"bytes,4,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	RoutingFlow   *RoutingFlow   `protobuf:"bytes,5,opt,name=routing_flow,json=routingFlow,proto3" json:"routing_flow,omitempty"`
	RoutingOption *RoutingOption `protobuf:"bytes,6,opt,name=routing_option,json=routingOption,proto3" json:"routing_option,omitempty"`
	Status        bool           `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *RoutingConfigPutRequest) Reset() {
	*x = RoutingConfigPutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingConfigPutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingConfigPutRequest) ProtoMessage() {}

func (x *RoutingConfigPutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingConfigPutRequest.ProtoReflect.Descriptor instead.
func (*RoutingConfigPutRequest) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{2}
}

func (x *RoutingConfigPutRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoutingConfigPutRequest) GetRoutingName() string {
	if x != nil {
		return x.RoutingName
	}
	return ""
}

func (x *RoutingConfigPutRequest) GetRoutingType() string {
	if x != nil {
		return x.RoutingType
	}
	return ""
}

func (x *RoutingConfigPutRequest) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *RoutingConfigPutRequest) GetRoutingFlow() *RoutingFlow {
	if x != nil {
		return x.RoutingFlow
	}
	return nil
}

func (x *RoutingConfigPutRequest) GetRoutingOption() *RoutingOption {
	if x != nil {
		return x.RoutingOption
	}
	return nil
}

func (x *RoutingConfigPutRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type RoutingFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowType string   `protobuf:"bytes,1,opt,name=flow_type,json=flowType,proto3" json:"flow_type,omitempty"`
	FlowUuid []string `protobuf:"bytes,2,rep,name=flow_uuid,json=flowUuid,proto3" json:"flow_uuid,omitempty"`
}

func (x *RoutingFlow) Reset() {
	*x = RoutingFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingFlow) ProtoMessage() {}

func (x *RoutingFlow) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingFlow.ProtoReflect.Descriptor instead.
func (*RoutingFlow) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{3}
}

func (x *RoutingFlow) GetFlowType() string {
	if x != nil {
		return x.FlowType
	}
	return ""
}

func (x *RoutingFlow) GetFlowUuid() []string {
	if x != nil {
		return x.FlowUuid
	}
	return nil
}

type RoutingOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Incom  *Incom  `protobuf:"bytes,1,opt,name=incom,proto3" json:"incom,omitempty"`
	Abenla *Abenla `protobuf:"bytes,2,opt,name=abenla,proto3" json:"abenla,omitempty"`
	Fpt    *Fpt    `protobuf:"bytes,3,opt,name=fpt,proto3" json:"fpt,omitempty"`
}

func (x *RoutingOption) Reset() {
	*x = RoutingOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingOption) ProtoMessage() {}

func (x *RoutingOption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingOption.ProtoReflect.Descriptor instead.
func (*RoutingOption) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{4}
}

func (x *RoutingOption) GetIncom() *Incom {
	if x != nil {
		return x.Incom
	}
	return nil
}

func (x *RoutingOption) GetAbenla() *Abenla {
	if x != nil {
		return x.Abenla
	}
	return nil
}

func (x *RoutingOption) GetFpt() *Fpt {
	if x != nil {
		return x.Fpt
	}
	return nil
}

type Incom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password    string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ApiUrl      string   `protobuf:"bytes,3,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	WebhookUrl  []string `protobuf:"bytes,4,rep,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	MaxAttempts int32    `protobuf:"varint,5,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	Signature   string   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	Status      bool     `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Incom) Reset() {
	*x = Incom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Incom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Incom) ProtoMessage() {}

func (x *Incom) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Incom.ProtoReflect.Descriptor instead.
func (*Incom) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{5}
}

func (x *Incom) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Incom) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Incom) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *Incom) GetWebhookUrl() []string {
	if x != nil {
		return x.WebhookUrl
	}
	return nil
}

func (x *Incom) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *Incom) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Incom) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Abenla struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username      string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ApiUrl        string   `protobuf:"bytes,3,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	ServiceTypeId string   `protobuf:"bytes,4,opt,name=service_type_id,json=serviceTypeId,proto3" json:"service_type_id,omitempty"`
	WebhookUrl    []string `protobuf:"bytes,5,rep,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	MaxAttempts   int32    `protobuf:"varint,6,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	Signature     string   `protobuf:"bytes,7,opt,name=signature,proto3" json:"signature,omitempty"`
	Status        bool     `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Abenla) Reset() {
	*x = Abenla{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Abenla) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Abenla) ProtoMessage() {}

func (x *Abenla) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Abenla.ProtoReflect.Descriptor instead.
func (*Abenla) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{6}
}

func (x *Abenla) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Abenla) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Abenla) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *Abenla) GetServiceTypeId() string {
	if x != nil {
		return x.ServiceTypeId
	}
	return ""
}

func (x *Abenla) GetWebhookUrl() []string {
	if x != nil {
		return x.WebhookUrl
	}
	return nil
}

func (x *Abenla) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *Abenla) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Abenla) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type Fpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret string   `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	ApiUrl       string   `protobuf:"bytes,3,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	WebhookUrl   []string `protobuf:"bytes,4,rep,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	MaxAttempts  int32    `protobuf:"varint,5,opt,name=max_attempts,json=maxAttempts,proto3" json:"max_attempts,omitempty"`
	Signature    string   `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	Status       bool     `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Fpt) Reset() {
	*x = Fpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fpt) ProtoMessage() {}

func (x *Fpt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fpt.ProtoReflect.Descriptor instead.
func (*Fpt) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{7}
}

func (x *Fpt) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Fpt) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *Fpt) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *Fpt) GetWebhookUrl() []string {
	if x != nil {
		return x.WebhookUrl
	}
	return nil
}

func (x *Fpt) GetMaxAttempts() int32 {
	if x != nil {
		return x.MaxAttempts
	}
	return 0
}

func (x *Fpt) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Fpt) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type RoutingConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string             `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*structpb.Struct `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Total   int32              `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *RoutingConfigResponse) Reset() {
	*x = RoutingConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingConfigResponse) ProtoMessage() {}

func (x *RoutingConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingConfigResponse.ProtoReflect.Descriptor instead.
func (*RoutingConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{8}
}

func (x *RoutingConfigResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoutingConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RoutingConfigResponse) GetData() []*structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RoutingConfigResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RoutingConfigByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RoutingConfigByIdRequest) Reset() {
	*x = RoutingConfigByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingConfigByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingConfigByIdRequest) ProtoMessage() {}

func (x *RoutingConfigByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingConfigByIdRequest.ProtoReflect.Descriptor instead.
func (*RoutingConfigByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{9}
}

func (x *RoutingConfigByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RoutingConfigByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string           `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *structpb.Struct `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RoutingConfigByIdResponse) Reset() {
	*x = RoutingConfigByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingConfigByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingConfigByIdResponse) ProtoMessage() {}

func (x *RoutingConfigByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingConfigByIdResponse.ProtoReflect.Descriptor instead.
func (*RoutingConfigByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{10}
}

func (x *RoutingConfigByIdResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *RoutingConfigByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RoutingConfigByIdResponse) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type RoutingConfigResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RoutingConfigResponseData) Reset() {
	*x = RoutingConfigResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_routing_config_routing_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutingConfigResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutingConfigResponseData) ProtoMessage() {}

func (x *RoutingConfigResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_routing_config_routing_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutingConfigResponseData.ProtoReflect.Descriptor instead.
func (*RoutingConfigResponseData) Descriptor() ([]byte, []int) {
	return file_proto_routing_config_routing_config_proto_rawDescGZIP(), []int{11}
}

func (x *RoutingConfigResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_proto_routing_config_routing_config_proto protoreflect.FileDescriptor

var file_proto_routing_config_routing_config_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x02, 0x0a, 0x18,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x6f, 0x64,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a,
	0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x46,
	0x6c, 0x6f, 0x77, 0x12, 0x4a, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x14, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb8, 0x02, 0x0a, 0x17,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x75, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x44, 0x0a, 0x0c,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x6c,
	0x6f, 0x77, 0x12, 0x4a, 0x0a, 0x0e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x47, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6c, 0x6f, 0x77, 0x55, 0x75, 0x69, 0x64, 0x22,
	0xa5, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x52, 0x05, 0x69,
	0x6e, 0x63, 0x6f, 0x6d, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x62, 0x65, 0x6e, 0x6c, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x41, 0x62, 0x65, 0x6e,
	0x6c, 0x61, 0x52, 0x06, 0x61, 0x62, 0x65, 0x6e, 0x6c, 0x61, 0x12, 0x2b, 0x0a, 0x03, 0x66, 0x70,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46,
	0x70, 0x74, 0x52, 0x03, 0x66, 0x70, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x05, 0x49, 0x6e, 0x63, 0x6f,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55,
	0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x41, 0x74,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfb, 0x01, 0x0a,
	0x06, 0x41, 0x62, 0x65, 0x6e, 0x6c, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x03, 0x46,
	0x70, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x15, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x76,
	0x0a, 0x19, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x19, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x32, 0x9a, 0x06, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x97, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x62, 0x73, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x8c, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x62, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x9c,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x12, 0x1b, 0x2f, 0x62, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9e, 0x01,
	0x0a, 0x14, 0x50, 0x75, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01,
	0x2a, 0x1a, 0x1b, 0x2f, 0x62, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9f,
	0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x64, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x62, 0x73, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x67, 0x2d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74,
	0x65, 0x6c, 0x34, 0x76, 0x6e, 0x2f, 0x66, 0x69, 0x6e, 0x73, 0x2d, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_routing_config_routing_config_proto_rawDescOnce sync.Once
	file_proto_routing_config_routing_config_proto_rawDescData = file_proto_routing_config_routing_config_proto_rawDesc
)

func file_proto_routing_config_routing_config_proto_rawDescGZIP() []byte {
	file_proto_routing_config_routing_config_proto_rawDescOnce.Do(func() {
		file_proto_routing_config_routing_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_routing_config_routing_config_proto_rawDescData)
	})
	return file_proto_routing_config_routing_config_proto_rawDescData
}

var file_proto_routing_config_routing_config_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_routing_config_routing_config_proto_goTypes = []interface{}{
	(*RoutingConfigBodyRequest)(nil),  // 0: proto.routing_config.RoutingConfigBodyRequest
	(*RoutingConfigRequest)(nil),      // 1: proto.routing_config.RoutingConfigRequest
	(*RoutingConfigPutRequest)(nil),   // 2: proto.routing_config.RoutingConfigPutRequest
	(*RoutingFlow)(nil),               // 3: proto.routing_config.RoutingFlow
	(*RoutingOption)(nil),             // 4: proto.routing_config.RoutingOption
	(*Incom)(nil),                     // 5: proto.routing_config.Incom
	(*Abenla)(nil),                    // 6: proto.routing_config.Abenla
	(*Fpt)(nil),                       // 7: proto.routing_config.Fpt
	(*RoutingConfigResponse)(nil),     // 8: proto.routing_config.RoutingConfigResponse
	(*RoutingConfigByIdRequest)(nil),  // 9: proto.routing_config.RoutingConfigByIdRequest
	(*RoutingConfigByIdResponse)(nil), // 10: proto.routing_config.RoutingConfigByIdResponse
	(*RoutingConfigResponseData)(nil), // 11: proto.routing_config.RoutingConfigResponseData
	(*structpb.Struct)(nil),           // 12: google.protobuf.Struct
}
var file_proto_routing_config_routing_config_proto_depIdxs = []int32{
	3,  // 0: proto.routing_config.RoutingConfigBodyRequest.routing_flow:type_name -> proto.routing_config.RoutingFlow
	4,  // 1: proto.routing_config.RoutingConfigBodyRequest.routing_option:type_name -> proto.routing_config.RoutingOption
	3,  // 2: proto.routing_config.RoutingConfigPutRequest.routing_flow:type_name -> proto.routing_config.RoutingFlow
	4,  // 3: proto.routing_config.RoutingConfigPutRequest.routing_option:type_name -> proto.routing_config.RoutingOption
	5,  // 4: proto.routing_config.RoutingOption.incom:type_name -> proto.routing_config.Incom
	6,  // 5: proto.routing_config.RoutingOption.abenla:type_name -> proto.routing_config.Abenla
	7,  // 6: proto.routing_config.RoutingOption.fpt:type_name -> proto.routing_config.Fpt
	12, // 7: proto.routing_config.RoutingConfigResponse.data:type_name -> google.protobuf.Struct
	12, // 8: proto.routing_config.RoutingConfigByIdResponse.data:type_name -> google.protobuf.Struct
	0,  // 9: proto.routing_config.RoutingConfig.PostRoutingConfig:input_type -> proto.routing_config.RoutingConfigBodyRequest
	1,  // 10: proto.routing_config.RoutingConfig.GetRoutingConfigs:input_type -> proto.routing_config.RoutingConfigRequest
	9,  // 11: proto.routing_config.RoutingConfig.GetRoutingConfigById:input_type -> proto.routing_config.RoutingConfigByIdRequest
	2,  // 12: proto.routing_config.RoutingConfig.PutRoutingConfigById:input_type -> proto.routing_config.RoutingConfigPutRequest
	9,  // 13: proto.routing_config.RoutingConfig.DeleteRoutingConfigById:input_type -> proto.routing_config.RoutingConfigByIdRequest
	10, // 14: proto.routing_config.RoutingConfig.PostRoutingConfig:output_type -> proto.routing_config.RoutingConfigByIdResponse
	8,  // 15: proto.routing_config.RoutingConfig.GetRoutingConfigs:output_type -> proto.routing_config.RoutingConfigResponse
	10, // 16: proto.routing_config.RoutingConfig.GetRoutingConfigById:output_type -> proto.routing_config.RoutingConfigByIdResponse
	10, // 17: proto.routing_config.RoutingConfig.PutRoutingConfigById:output_type -> proto.routing_config.RoutingConfigByIdResponse
	10, // 18: proto.routing_config.RoutingConfig.DeleteRoutingConfigById:output_type -> proto.routing_config.RoutingConfigByIdResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_routing_config_routing_config_proto_init() }
func file_proto_routing_config_routing_config_proto_init() {
	if File_proto_routing_config_routing_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_routing_config_routing_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingConfigBodyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingConfigPutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Incom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Abenla); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingConfigByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingConfigByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_routing_config_routing_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutingConfigResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_routing_config_routing_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_routing_config_routing_config_proto_goTypes,
		DependencyIndexes: file_proto_routing_config_routing_config_proto_depIdxs,
		MessageInfos:      file_proto_routing_config_routing_config_proto_msgTypes,
	}.Build()
	File_proto_routing_config_routing_config_proto = out.File
	file_proto_routing_config_routing_config_proto_rawDesc = nil
	file_proto_routing_config_routing_config_proto_goTypes = nil
	file_proto_routing_config_routing_config_proto_depIdxs = nil
}
